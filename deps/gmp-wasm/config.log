This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by GNU MP configure 6.2.1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure --disable-assembly --build none --disable-cxx --disable-shared --prefix=/home/wmealing/Projects/build-test/cob-webber/dist

## --------- ##
## Platform. ##
## --------- ##

hostname = wmealing-laptop
uname -m = x86_64
uname -r = 5.19.8-200.fc36.x86_64
uname -s = Linux
uname -v = #1 SMP PREEMPT_DYNAMIC Thu Sep 8 19:02:21 UTC 2022

/usr/bin/uname -p = x86_64
/bin/uname -X     = unknown

/bin/arch              = x86_64
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/bin
PATH: /home/wmealing/Projects/emsdk
PATH: /home/wmealing/Projects/emsdk/upstream/emscripten
PATH: /home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin
PATH: /home/wmealing/.local/bin
PATH: /home/wmealing/bin
PATH: /usr/local/bin
PATH: /usr/bin
PATH: /bin
PATH: /usr/local/sbin
PATH: /usr/sbin
PATH: /home/wmealing/.dotnet/tools


## ----------- ##
## Core tests. ##
## ----------- ##

configure:3056: checking build system type
configure:3070: result: none-none-none
configure:3090: checking host system type
configure:3103: result: none-none-none
configure:3140: checking for a BSD-compatible install
configure:3208: result: /usr/bin/install -c
configure:3219: checking whether build environment is sane
configure:3274: result: yes
configure:3425: checking for a thread-safe mkdir -p
configure:3464: result: /usr/bin/mkdir -p
configure:3471: checking for gawk
configure:3487: found /usr/bin/gawk
configure:3498: result: gawk
configure:3509: checking whether make sets $(MAKE)
configure:3531: result: yes
configure:3560: checking whether make supports nested variables
configure:3577: result: yes
configure:3706: checking whether to enable maintainer-specific portions of Makefiles
configure:3715: result: no
configure:5708: WARNING: the "none" host is obsolete, use --disable-assembly
User:
ABI=
CC=/home/wmealing/Projects/emsdk/upstream/emscripten/emcc
CFLAGS=(unset)
CPPFLAGS=(unset)
MPN_PATH=
GMP:
abilist=standard longlong
cclist=gcc cc
configure:5849: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c conftest.c >&5
configure:5852: $? = 0
configure:5855: checking whether /home/wmealing/Projects/emsdk/upstream/emscripten/emcc is gcc
configure:5857: result: yes
configure:5871: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc 2>&1 | grep xlc >/dev/null
configure:5874: $? = 1
configure:5928: checking compiler /home/wmealing/Projects/emsdk/upstream/emscripten/emcc  
Test compile: 
configure:5942: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
configure:5945: $? = 0
configure:5950: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:5953: $? = 0
Test compile: function pointer return
configure:5996: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
configure:5999: $? = 0
configure:6004: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6007: $? = 0
Test compile: cmov instruction
configure:6052: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
configure:6055: $? = 0
configure:6060: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6063: $? = 0
Test compile: double -> ulong conversion
configure:6109: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
configure:6112: $? = 0
configure:6117: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6120: $? = 0
Test compile: double negation
configure:6164: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
configure:6167: $? = 0
configure:6172: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6175: $? = 0
Test compile: double -> float conversion
configure:6220: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
configure:6223: $? = 0
configure:6228: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6231: $? = 0
Test compile: gnupro alpha ev6 char spilling
configure:6305: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
configure:6308: $? = 0
configure:6313: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6316: $? = 0
Test compile: __builtin_alloca availability
configure:6356: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
conftest.c:1:43: warning: non-void function does not return a value [-Wreturn-type]
int k; int foo () { __builtin_alloca (k); }
                                          ^
1 warning generated.
configure:6359: $? = 0
configure:6364: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6367: $? = 0
Test compile: alloca array
configure:6402: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
conftest.c:10:1: warning: non-void function does not return a value [-Wreturn-type]
}
^
1 warning generated.
configure:6405: $? = 0
configure:6410: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6413: $? = 0
Test compile: abs int -> double conversion
configure:6480: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
configure:6483: $? = 0
configure:6488: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6491: $? = 0
Test compile: long long reliability test 1
configure:6545: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
conftest.c:12:83: warning: too many arguments in call to 'g'
for(i=0;i<1;i++){if(e(got,got,9,d[i].n)==0)h();g(i,d[i].src,d[i].n,got,d[i].want,9);if(d[i].n)h();}}
                                               ~                                  ^
conftest.c:12:49: warning: passing arguments to 'g' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
for(i=0;i<1;i++){if(e(got,got,9,d[i].n)==0)h();g(i,d[i].src,d[i].n,got,d[i].want,9);if(d[i].n)h();}}
                                                ^
2 warnings generated.
configure:6548: $? = 0
configure:6553: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6556: $? = 0
Test compile: long long reliability test 2
configure:6606: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
configure:6609: $? = 0
configure:6614: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6617: $? = 0
Test compile: freebsd hacked gcc
configure:6667: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
configure:6670: $? = 0
configure:6675: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6678: $? = 0
Test compile: mpn_lshift_com optimization
configure:6766: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
conftest.c:12:1: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
lshift_com (rp, up, n, cnt)
^
1 warning generated.
configure:6769: $? = 0
configure:6774: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6777: $? = 0
Test compile: mpn_lshift_com optimization 2
configure:6875: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c >&5
conftest.c:10:1: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
lshift_com (rp, up, n, cnt)
^
1 warning generated.
configure:6878: $? = 0
configure:6883: ./a.out || ./b.out || ./a.exe || ./a_out.exe || ./conftest
configure:6886: $? = 0
configure:7032: result: yes
configure:8804: checking for gcc
configure:8831: result: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc
configure:9060: checking for C compiler version
configure:9069: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc --version >&5
emcc (Emscripten gcc/clang-like replacement + linker emulating GNU ld) 3.1.22 (a9981ae2a7dc3c45f833d0b2202f739d87ac05c8)
Copyright (C) 2014 the Emscripten authors (see AUTHORS.txt)
This is free and open source software under the MIT license.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:9080: $? = 0
configure:9069: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -v >&5
emcc (Emscripten gcc/clang-like replacement + linker emulating GNU ld) 3.1.22 (a9981ae2a7dc3c45f833d0b2202f739d87ac05c8)
clang version 16.0.0 (https://github.com/llvm/llvm-project 8491d01cc385d08b8b4f5dd097239ea0009ddc63)
Target: wasm32-unknown-emscripten
Thread model: posix
InstalledDir: /home/wmealing/Projects/emsdk/upstream/bin
configure:9080: $? = 0
configure:9069: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -V >&5
emcc: error: no input files
configure:9080: $? = 1
configure:9069: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -qversion >&5
emcc: error: no input files
configure:9080: $? = 1
configure:9100: checking whether the C compiler works
configure:9122: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc    conftest.c  >&5
configure:9126: $? = 0
configure:9174: result: yes
configure:9177: checking for C compiler default output file name
configure:9179: result: a.out
configure:9185: checking for suffix of executables
configure:9192: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:9196: $? = 0
configure:9218: result: 
configure:9240: checking whether we are cross compiling
configure:9248: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:9252: $? = 0
configure:9259: ./conftest
configure:9263: $? = 0
configure:9278: result: no
configure:9283: checking for suffix of object files
configure:9305: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:9309: $? = 0
configure:9330: result: o
configure:9334: checking whether we are using the GNU C compiler
configure:9353: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:9353: $? = 0
configure:9362: result: yes
configure:9371: checking whether /home/wmealing/Projects/emsdk/upstream/emscripten/emcc accepts -g
configure:9391: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c -g  conftest.c >&5
configure:9391: $? = 0
configure:9432: result: yes
configure:9449: checking for /home/wmealing/Projects/emsdk/upstream/emscripten/emcc option to accept ISO C89
configure:9512: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc  -c   conftest.c >&5
conftest.c:19:14: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
static char *e (p, i)
             ^
1 warning generated.
configure:9512: $? = 0
configure:9525: result: none needed
configure:9550: checking whether /home/wmealing/Projects/emsdk/upstream/emscripten/emcc understands -c and -o together
configure:9572: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c conftest.c -o conftest2.o
configure:9575: $? = 0
configure:9572: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c conftest.c -o conftest2.o
configure:9575: $? = 0
configure:9587: result: yes
configure:9604: checking for /home/wmealing/Projects/emsdk/upstream/emscripten/emcc option to accept ISO C99
configure:9753: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc  -c   conftest.c >&5
configure:9753: $? = 0
configure:9766: result: none needed
configure:9786: checking how to run the C preprocessor
configure:9817: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:9817: $? = 0
configure:9831: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
conftest.c:13:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.c' failed (returned 1)
configure:9831: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:9856: result: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E
configure:9876: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:9876: $? = 0
configure:9890: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
conftest.c:13:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.c' failed (returned 1)
configure:9890: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:9958: checking build system compiler /home/wmealing/Projects/emsdk/upstream/bin/clang
configure:9971: /home/wmealing/Projects/emsdk/upstream/bin/clang conftest.c
configure:9974: $? = 0
configure:9981: result: yes
configure:10033: checking for build system preprocessor
configure:10044: /home/wmealing/Projects/emsdk/upstream/bin/clang -E conftest.c
# 1 "conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 374 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "conftest.c" 2

configure:10047: $? = 0
configure:10062: result: /home/wmealing/Projects/emsdk/upstream/bin/clang -E
configure:10069: checking for build system executable suffix
configure:10083: /home/wmealing/Projects/emsdk/upstream/bin/clang conftest.c -o conftest.exe
configure:10086: $? = 0
./configure: line 10088: ./conftest: No such file or directory
configure:10083: /home/wmealing/Projects/emsdk/upstream/bin/clang conftest.c -o conftest,ff8
configure:10086: $? = 0
./configure: line 10088: ./conftest: No such file or directory
configure:10083: /home/wmealing/Projects/emsdk/upstream/bin/clang conftest.c -o conftest
configure:10086: $? = 0
configure:10100: result: 
configure:10106: checking whether build system compiler is ANSI
configure:10119: /home/wmealing/Projects/emsdk/upstream/bin/clang conftest.c
configure:10122: $? = 0
configure:10131: result: yes
configure:10141: checking for build system compiler math library
configure:10161: /home/wmealing/Projects/emsdk/upstream/bin/clang conftest.c -lm
configure:10164: $? = 0
configure:10173: result: -lm
configure:10785: checking for grep that handles long lines and -e
configure:10843: result: /usr/bin/grep
configure:10848: checking for egrep
configure:10910: result: /usr/bin/grep -E
Decided:
ABI=standard
CC=/home/wmealing/Projects/emsdk/upstream/emscripten/emcc
CFLAGS=
CPPFLAGS=
GMP_LDFLAGS=
CXX=/home/wmealing/Projects/emsdk/upstream/emscripten/em++
CXXFLAGS=
path=generic
configure:11192: checking whether assembler supports --noexecstack option
configure:11202: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc  
                     -S -o conftest.s conftest.c >/dev/null
configure:11205: $? = 0
configure:11222: result: no
configure:11275: checking for ar
configure:11302: result: /home/wmealing/Projects/emsdk/upstream/emscripten/emar
configure:11343: checking for BSD- or MS-compatible name lister (nm)
configure:11397: result: /home/wmealing/Projects/emsdk/upstream/bin/llvm-nm
configure:11527: checking the name lister (/home/wmealing/Projects/emsdk/upstream/bin/llvm-nm) interface
configure:11534: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:11537: /home/wmealing/Projects/emsdk/upstream/bin/llvm-nm "conftest.o"
configure:11540: output
00000000 D some_variable
configure:11547: result: BSD nm
configure:12241: checking how to print strings
configure:12268: result: printf
configure:12289: checking for a sed that does not truncate output
configure:12353: result: /usr/bin/sed
configure:12371: checking for fgrep
configure:12433: result: /usr/bin/grep -F
configure:12468: checking for ld used by /home/wmealing/Projects/emsdk/upstream/emscripten/emcc
emcc: error: no input files
configure:12535: result: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc
configure:12542: checking if the linker (/home/wmealing/Projects/emsdk/upstream/emscripten/emcc) is GNU ld
configure:12557: result: yes
configure:12569: checking whether ln -s works
configure:12573: result: yes
configure:12581: checking the maximum length of command line arguments
configure:12712: result: 1572864
configure:12760: checking how to convert none-none-none file names to none-none-none format
configure:12800: result: func_convert_file_noop
configure:12807: checking how to convert none-none-none file names to toolchain format
configure:12827: result: func_convert_file_noop
configure:12834: checking for /home/wmealing/Projects/emsdk/upstream/emscripten/emcc option to reload object files
configure:12841: result: -r
configure:12915: checking for objdump
configure:12942: result: objdump
configure:12971: checking how to recognize dependent libraries
configure:13171: result: unknown
configure:13256: checking for dlltool
configure:13283: result: dlltool
configure:13313: checking how to associate runtime and link libraries
configure:13340: result: printf %s\n
configure:13464: checking for archiver @FILE support
configure:13481: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:13481: $? = 0
configure:13484: /home/wmealing/Projects/emsdk/upstream/emscripten/emar cq libconftest.a @conftest.lst >&5
configure:13487: $? = 0
configure:13492: /home/wmealing/Projects/emsdk/upstream/emscripten/emar cq libconftest.a @conftest.lst >&5
/home/wmealing/Projects/emsdk/upstream/bin/llvm-ar: error: conftest.o: No such file or directory
configure:13495: $? = 1
configure:13507: result: @
configure:13565: checking for strip
configure:13581: found /usr/bin/strip
configure:13592: result: strip
configure:13664: checking for ranlib
configure:13691: result: /home/wmealing/Projects/emsdk/upstream/emscripten/emranlib
configure:13793: checking command to parse /home/wmealing/Projects/emsdk/upstream/bin/llvm-nm output from /home/wmealing/Projects/emsdk/upstream/emscripten/emcc object
configure:13946: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:13949: $? = 0
configure:13953: /home/wmealing/Projects/emsdk/upstream/bin/llvm-nm conftest.o \| sed -n -e 's/^.*[ ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[ ][ ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d' \> conftest.nm
configure:13956: $? = 0
configure:14022: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c conftstm.o >&5
configure:14025: $? = 0
configure:14063: result: ok
configure:14110: checking for sysroot
configure:14140: result: no
configure:14147: checking for a working dd
configure:14185: result: /usr/bin/dd
configure:14189: checking how to truncate binary pipes
configure:14204: result: /usr/bin/dd bs=4096 count=1
configure:14533: checking for mt
configure:14563: result: no
configure:14583: checking if : is a manifest tool
configure:14589: : '-?'
configure:14597: result: no
configure:15269: checking for ANSI C header files
configure:15289: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15289: $? = 0
configure:15362: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:15362: $? = 0
configure:15362: ./conftest
configure:15362: $? = 0
configure:15373: result: yes
configure:15386: checking for sys/types.h
configure:15386: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15386: $? = 0
configure:15386: result: yes
configure:15386: checking for sys/stat.h
configure:15386: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15386: $? = 0
configure:15386: result: yes
configure:15386: checking for stdlib.h
configure:15386: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15386: $? = 0
configure:15386: result: yes
configure:15386: checking for string.h
configure:15386: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15386: $? = 0
configure:15386: result: yes
configure:15386: checking for memory.h
configure:15386: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15386: $? = 0
configure:15386: result: yes
configure:15386: checking for strings.h
configure:15386: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15386: $? = 0
configure:15386: result: yes
configure:15386: checking for inttypes.h
configure:15386: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15386: $? = 0
configure:15386: result: yes
configure:15386: checking for stdint.h
configure:15386: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15386: $? = 0
configure:15386: result: yes
configure:15386: checking for unistd.h
configure:15386: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15386: $? = 0
configure:15386: result: yes
configure:15400: checking for dlfcn.h
configure:15400: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:15400: $? = 0
configure:15400: result: yes
configure:15665: checking for objdir
configure:15680: result: .libs
configure:15940: checking if /home/wmealing/Projects/emsdk/upstream/emscripten/emcc supports -fno-rtti -fno-exceptions
configure:15958: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   -fno-rtti -fno-exceptions conftest.c >&5
configure:15962: $? = 0
configure:15975: result: yes
configure:16333: checking for /home/wmealing/Projects/emsdk/upstream/emscripten/emcc option to produce PIC
configure:16340: result: -fPIC -DPIC
configure:16348: checking if /home/wmealing/Projects/emsdk/upstream/emscripten/emcc PIC flag -fPIC -DPIC works
configure:16366: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   -fPIC -DPIC -DPIC conftest.c >&5
configure:16370: $? = 0
configure:16383: result: yes
configure:16412: checking if /home/wmealing/Projects/emsdk/upstream/emscripten/emcc static flag -static works
configure:16440: result: yes
configure:16455: checking if /home/wmealing/Projects/emsdk/upstream/emscripten/emcc supports -c -o file.o
configure:16476: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   -o out/conftest2.o conftest.c >&5
configure:16480: $? = 0
configure:16502: result: yes
configure:16510: checking if /home/wmealing/Projects/emsdk/upstream/emscripten/emcc supports -c -o file.o
configure:16557: result: yes
configure:16590: checking whether the /home/wmealing/Projects/emsdk/upstream/emscripten/emcc linker (/home/wmealing/Projects/emsdk/upstream/emscripten/emcc) supports shared libraries
configure:17849: result: yes
configure:18089: checking dynamic linker characteristics
configure:18907: result: no
configure:19029: checking how to hardcode library paths into programs
configure:19054: result: immediate
configure:19602: checking whether stripping libraries is possible
configure:19607: result: yes
configure:19642: checking if libtool supports shared libraries
configure:19644: result: no
configure:19647: checking whether to build shared libraries
configure:19672: result: no
configure:19675: checking whether to build static libraries
configure:19679: result: yes
configure:19702: checking how to run the C++ preprocessor
configure:19729: /home/wmealing/Projects/emsdk/upstream/emscripten/em++ -E  conftest.cpp
configure:19729: $? = 0
configure:19743: /home/wmealing/Projects/emsdk/upstream/emscripten/em++ -E  conftest.cpp
conftest.cpp:26:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
em++: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang++ -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.cpp' failed (returned 1)
configure:19743: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:19768: result: /home/wmealing/Projects/emsdk/upstream/emscripten/em++ -E
configure:19788: /home/wmealing/Projects/emsdk/upstream/emscripten/em++ -E  conftest.cpp
configure:19788: $? = 0
configure:19802: /home/wmealing/Projects/emsdk/upstream/emscripten/em++ -E  conftest.cpp
conftest.cpp:26:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
em++: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang++ -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.cpp' failed (returned 1)
configure:19802: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:20108: checking whether the /home/wmealing/Projects/emsdk/upstream/emscripten/em++ linker (/home/wmealing/Projects/emsdk/upstream/emscripten/emcc) supports shared libraries
configure:21181: result: no
configure:21217: /home/wmealing/Projects/emsdk/upstream/emscripten/em++ -c   conftest.cpp >&5
configure:21220: $? = 0
configure:21701: checking for /home/wmealing/Projects/emsdk/upstream/emscripten/em++ option to produce PIC
configure:21708: result:  -DPIC
configure:21716: checking if /home/wmealing/Projects/emsdk/upstream/emscripten/em++ PIC flag  -DPIC works
configure:21734: /home/wmealing/Projects/emsdk/upstream/emscripten/em++ -c    -DPIC -DPIC conftest.cpp >&5
configure:21738: $? = 0
configure:21751: result: yes
configure:21774: checking if /home/wmealing/Projects/emsdk/upstream/emscripten/em++ static flag  works
configure:21802: result: yes
configure:21814: checking if /home/wmealing/Projects/emsdk/upstream/emscripten/em++ supports -c -o file.o
configure:21835: /home/wmealing/Projects/emsdk/upstream/emscripten/em++ -c   -o out/conftest2.o conftest.cpp >&5
configure:21839: $? = 0
configure:21861: result: yes
configure:21866: checking if /home/wmealing/Projects/emsdk/upstream/emscripten/em++ supports -c -o file.o
configure:21913: result: yes
configure:21943: checking whether the /home/wmealing/Projects/emsdk/upstream/emscripten/em++ linker (/home/wmealing/Projects/emsdk/upstream/emscripten/emcc) supports shared libraries
configure:21983: result: no
configure:22124: checking dynamic linker characteristics
configure:22869: result: no
configure:22934: checking how to hardcode library paths into programs
configure:22959: result: unsupported
configure:23046: checking for ANSI C header files
configure:23150: result: yes
configure:23158: checking whether time.h and sys/time.h may both be included
configure:23178: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23178: $? = 0
configure:23185: result: yes
configure:23222: checking fcntl.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking fcntl.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking for fcntl.h
configure:23222: result: yes
configure:23222: checking float.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking float.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking for float.h
configure:23222: result: yes
configure:23222: checking invent.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:63:10: fatal error: 'invent.h' file not found
#include <invent.h>
         ^~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <invent.h>
configure:23222: result: no
configure:23222: checking invent.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
conftest.c:30:10: fatal error: 'invent.h' file not found
#include <invent.h>
         ^~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.c' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| /* end confdefs.h.  */
| #include <invent.h>
configure:23222: result: no
configure:23222: checking for invent.h
configure:23222: result: no
configure:23222: checking langinfo.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking langinfo.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking for langinfo.h
configure:23222: result: yes
configure:23222: checking locale.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking locale.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking for locale.h
configure:23222: result: yes
configure:23222: checking nl_types.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking nl_types.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking for nl_types.h
configure:23222: result: yes
configure:23222: checking sys/attributes.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:66:10: fatal error: 'sys/attributes.h' file not found
#include <sys/attributes.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <sys/attributes.h>
configure:23222: result: no
configure:23222: checking sys/attributes.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
conftest.c:33:10: fatal error: 'sys/attributes.h' file not found
#include <sys/attributes.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.c' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| /* end confdefs.h.  */
| #include <sys/attributes.h>
configure:23222: result: no
configure:23222: checking for sys/attributes.h
configure:23222: result: no
configure:23222: checking sys/iograph.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:66:10: fatal error: 'sys/iograph.h' file not found
#include <sys/iograph.h>
         ^~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <sys/iograph.h>
configure:23222: result: no
configure:23222: checking sys/iograph.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
conftest.c:33:10: fatal error: 'sys/iograph.h' file not found
#include <sys/iograph.h>
         ^~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.c' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| /* end confdefs.h.  */
| #include <sys/iograph.h>
configure:23222: result: no
configure:23222: checking for sys/iograph.h
configure:23222: result: no
configure:23222: checking sys/mman.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking sys/mman.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking for sys/mman.h
configure:23222: result: yes
configure:23222: checking sys/param.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking sys/param.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking for sys/param.h
configure:23222: result: yes
configure:23222: checking sys/processor.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:68:10: fatal error: 'sys/processor.h' file not found
#include <sys/processor.h>
         ^~~~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <sys/processor.h>
configure:23222: result: no
configure:23222: checking sys/processor.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
conftest.c:35:10: fatal error: 'sys/processor.h' file not found
#include <sys/processor.h>
         ^~~~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.c' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| /* end confdefs.h.  */
| #include <sys/processor.h>
configure:23222: result: no
configure:23222: checking for sys/processor.h
configure:23222: result: no
configure:23222: checking sys/pstat.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:68:10: fatal error: 'sys/pstat.h' file not found
#include <sys/pstat.h>
         ^~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <sys/pstat.h>
configure:23222: result: no
configure:23222: checking sys/pstat.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
conftest.c:35:10: fatal error: 'sys/pstat.h' file not found
#include <sys/pstat.h>
         ^~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.c' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| /* end confdefs.h.  */
| #include <sys/pstat.h>
configure:23222: result: no
configure:23222: checking for sys/pstat.h
configure:23222: result: no
configure:23222: checking sys/sysinfo.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking sys/sysinfo.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking for sys/sysinfo.h
configure:23222: result: yes
configure:23222: checking sys/syssgi.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:69:10: fatal error: 'sys/syssgi.h' file not found
#include <sys/syssgi.h>
         ^~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <sys/syssgi.h>
configure:23222: result: no
configure:23222: checking sys/syssgi.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
conftest.c:36:10: fatal error: 'sys/syssgi.h' file not found
#include <sys/syssgi.h>
         ^~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.c' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| /* end confdefs.h.  */
| #include <sys/syssgi.h>
configure:23222: result: no
configure:23222: checking for sys/syssgi.h
configure:23222: result: no
configure:23222: checking sys/systemcfg.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:69:10: fatal error: 'sys/systemcfg.h' file not found
#include <sys/systemcfg.h>
         ^~~~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <sys/systemcfg.h>
configure:23222: result: no
configure:23222: checking sys/systemcfg.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
conftest.c:36:10: fatal error: 'sys/systemcfg.h' file not found
#include <sys/systemcfg.h>
         ^~~~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -E conftest.c' failed (returned 1)
configure:23222: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| /* end confdefs.h.  */
| #include <sys/systemcfg.h>
configure:23222: result: no
configure:23222: checking for sys/systemcfg.h
configure:23222: result: no
configure:23222: checking sys/time.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking sys/time.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking for sys/time.h
configure:23222: result: yes
configure:23222: checking sys/times.h usability
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking sys/times.h presence
configure:23222: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E  conftest.c
configure:23222: $? = 0
configure:23222: result: yes
configure:23222: checking for sys/times.h
configure:23222: result: yes
configure:23236: checking for sys/resource.h
configure:23236: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23236: $? = 0
configure:23236: result: yes
configure:23260: checking for sys/sysctl.h
configure:23260: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23260: $? = 0
configure:23260: result: yes
configure:23277: checking for machine/hal_sysinfo.h
configure:23277: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:44:10: fatal error: 'machine/hal_sysinfo.h' file not found
#include <machine/hal_sysinfo.h>
         ^~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23277: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| /* end confdefs.h.  */
| #if HAVE_SYS_SYSINFO_H
| # include <sys/sysinfo.h>
| #endif
| 
| #include <machine/hal_sysinfo.h>
configure:23277: result: no
configure:23302: checking whether fgetc is declared
configure:23302: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23302: $? = 0
configure:23302: result: yes
configure:23312: checking whether fscanf is declared
configure:23312: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23312: $? = 0
configure:23312: result: yes
configure:23322: checking whether optarg is declared
configure:23322: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23322: $? = 0
configure:23322: result: yes
configure:23332: checking whether ungetc is declared
configure:23332: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23332: $? = 0
configure:23332: result: yes
configure:23342: checking whether vfprintf is declared
configure:23342: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23342: $? = 0
configure:23342: result: yes
configure:23353: checking whether sys_errlist is declared
configure:23353: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:55:10: error: use of undeclared identifier 'sys_errlist'
  (void) sys_errlist;
         ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23353: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #include <errno.h>
| 
| int
| main ()
| {
| #ifndef sys_errlist
| #ifdef __cplusplus
|   (void) sys_errlist;
| #else
|   (void) sys_errlist;
| #endif
| #endif
| 
|   ;
|   return 0;
| }
configure:23353: result: no
configure:23365: checking whether sys_nerr is declared
configure:23365: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:56:10: error: use of undeclared identifier 'sys_nerr'
  (void) sys_nerr;
         ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23365: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| /* end confdefs.h.  */
| #include <stdio.h>
| #include <errno.h>
| 
| int
| main ()
| {
| #ifndef sys_nerr
| #ifdef __cplusplus
|   (void) sys_nerr;
| #else
|   (void) sys_nerr;
| #endif
| #endif
| 
|   ;
|   return 0;
| }
configure:23365: result: no
configure:23379: checking return type of signal handlers
configure:23397: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:53:8: error: indirection requires pointer operand ('void' invalid)
return *(signal (0, 0)) (0) == 1;
       ^~~~~~~~~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23397: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| /* end confdefs.h.  */
| #include <sys/types.h>
| #include <signal.h>
| 
| int
| main ()
| {
| return *(signal (0, 0)) (0) == 1;
|   ;
|   return 0;
| }
configure:23404: result: void
configure:23423: checking for intmax_t
configure:23423: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23423: $? = 0
configure:23423: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:84:23: error: expected expression
if (sizeof ((intmax_t)))
                      ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23423: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((intmax_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:23423: result: yes
configure:23432: checking for long double
configure:23432: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23432: $? = 0
configure:23432: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:85:26: error: expected expression
if (sizeof ((long double)))
                         ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23432: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((long double)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:23432: result: yes
configure:23441: checking for long long
configure:23441: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23441: $? = 0
configure:23441: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:86:24: error: expected expression
if (sizeof ((long long)))
                       ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23441: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((long long)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:23441: result: yes
configure:23450: checking for ptrdiff_t
configure:23450: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23450: $? = 0
configure:23450: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:87:24: error: expected expression
if (sizeof ((ptrdiff_t)))
                       ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23450: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((ptrdiff_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:23450: result: yes
configure:23459: checking for quad_t
configure:23459: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23459: $? = 0
configure:23459: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:88:21: error: expected expression
if (sizeof ((quad_t)))
                    ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23459: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((quad_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:23459: result: yes
configure:23468: checking for uint_least32_t
configure:23468: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23468: $? = 0
configure:23468: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:89:29: error: expected expression
if (sizeof ((uint_least32_t)))
                            ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23468: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((uint_least32_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:23468: result: yes
configure:23477: checking for intptr_t
configure:23477: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23477: $? = 0
configure:23477: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:90:23: error: expected expression
if (sizeof ((intptr_t)))
                      ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:23477: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((intptr_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:23477: result: yes
configure:23491: checking for working volatile
configure:23510: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23510: $? = 0
configure:23517: result: yes
configure:23526: checking for C/C++ restrict keyword
configure:23551: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23551: $? = 0
configure:23559: result: __restrict
configure:23574: checking whether gcc __attribute__ ((const)) works
configure:23590: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23590: $? = 0
configure:23598: result: yes
configure:23606: checking whether gcc __attribute__ ((malloc)) works
configure:23615: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   -c conftest.c >conftest.out 2>&1
configure:23618: $? = 0
configure:23632: result: yes
configure:23640: checking whether gcc __attribute__ ((mode (XX))) works
configure:23656: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23656: $? = 0
configure:23664: result: yes
configure:23672: checking whether gcc __attribute__ ((noreturn)) works
configure:23688: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23688: $? = 0
configure:23696: result: yes
configure:23704: checking whether gcc hidden aliases work
configure:23722: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23722: $? = 0
configure:23730: result: yes
configure:23739: checking for inline
configure:23755: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23755: $? = 0
configure:23763: result: inline
configure:23806: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:23806: $? = 0
configure:23910: checking for cos in -lm
configure:23935: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c -lm   >&5
conftest.c:68:6: warning: incompatible redeclaration of library function 'cos' [-Wincompatible-library-redeclaration]
char cos ();
     ^
conftest.c:68:6: note: 'cos' is a builtin with type 'double (double)'
1 warning generated.
wasm-ld: warning: function signature mismatch: cos
>>> defined as () -> i32 in /tmp/emscripten_temp_1mfwdsau/conftest_0.o
>>> defined as (f64) -> f64 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(cos.o)
configure:23935: $? = 0
configure:23944: result: yes
configure:23958: checking for working alloca.h
configure:23974: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:23974: $? = 0
configure:23982: result: yes
configure:23991: checking for alloca (via gmp-impl.h)
configure:24014: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:24014: $? = 0
configure:24022: result: yes
configure:24031: checking how to allocate temporary memory
configure:24055: result: alloca
configure:24113: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:24113: $? = 0
configure:24122: checking whether byte ordering is bigendian
configure:24137: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:65:9: error: unknown type name 'not'
               not a universal capable compiler
               ^
conftest.c:65:14: error: expected ';' after top level declarator
               not a universal capable compiler
                    ^
                    ;
2 errors generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:24137: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| /* end confdefs.h.  */
| #ifndef __APPLE_CC__
| 	       not a universal capable compiler
| 	     #endif
| 	     typedef int dummy;
| 
configure:24182: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:24182: $? = 0
configure:24200: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:71:4: error: use of undeclared identifier 'not'
                 not big endian
                 ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:24200: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| /* end confdefs.h.  */
| #include <sys/types.h>
| 		#include <sys/param.h>
| 
| int
| main ()
| {
| #if BYTE_ORDER != BIG_ENDIAN
| 		 not big endian
| 		#endif
| 
|   ;
|   return 0;
| }
configure:24328: result: no
configure:24357: checking format of `double' floating point
configure:24385: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc   conftest.c -o conftest >&5 2>&1
configure:24388: $? = 0
cannot match anything, conftest contains
0000000 043 041 057 150 157 155 145 057 167 155 145 141 154 151 156 147
0000020 057 120 162 157 152 145 143 164 163 057 145 155 163 144 153 057
0000040 156 157 144 145 057 061 064 056 061 070 056 062 137 066 064 142
0000060 151 164 057 142 151 156 057 156 157 144 145 012 012 012 057 057
0000100 040 124 150 145 040 115 157 144 165 154 145 040 157 142 152 145
0000120 143 164 072 040 117 165 162 040 151 156 164 145 162 146 141 143
0000140 145 040 164 157 040 164 150 145 040 157 165 164 163 151 144 145
0000160 040 167 157 162 154 144 056 040 127 145 040 151 155 160 157 162
0000200 164 012 057 057 040 141 156 144 040 145 170 160 157 162 164 040
0000220 166 141 154 165 145 163 040 157 156 040 151 164 056 040 124 150
0000240 145 162 145 040 141 162 145 040 166 141 162 151 157 165 163 040
0000260 167 141 171 163 040 115 157 144 165 154 145 040 143 141 156 040
0000300 142 145 040 165 163 145 144 072 012 057 057 040 061 056 040 116
0000320 157 164 040 144 145 146 151 156 145 144 056 040 127 145 040 143
0000340 162 145 141 164 145 040 151 164 040 150 145 162 145 012 057 057
0000360 040 062 056 040 101 040 146 165 156 143 164 151 157 156 040 160
0000400 141 162 141 155 145 164 145 162 054 040 146 165 156 143 164 151
0000420 157 156 050 115 157 144 165 154 145 051 040 173 040 056 056 147
0000440 145 156 145 162 141 164 145 144 040 143 157 144 145 056 056 040
0000460 175 012 057 057 040 063 056 040 160 162 145 055 162 165 156 040
0000500 141 160 160 145 156 144 145 144 040 151 164 054 040 166 141 162
0000520 040 115 157 144 165 154 145 040 075 040 173 175 073 040 056 056
0000540 147 145 156 145 162 141 164 145 144 040 143 157 144 145 056 056
0000560 012 057 057 040 064 056 040 105 170 164 145 162 156 141 154 040
0000600 163 143 162 151 160 164 040 164 141 147 040 144 145 146 151 156
0000620 145 163 040 166 141 162 040 115 157 144 165 154 145 056 012 057
0000640 057 040 127 145 040 156 145 145 144 040 164 157 040 143 150 145
0000660 143 153 040 151 146 040 115 157 144 165 154 145 040 141 154 162
0000700 145 141 144 171 040 145 170 151 163 164 163 040 050 145 056 147
0000720 056 040 143 141 163 145 040 063 040 141 142 157 166 145 051 056
0000740 012 057 057 040 123 165 142 163 164 151 164 165 164 151 157 156
0000760 040 167 151 154 154 040 142 145 040 162 145 160 154 141 143 145
0001000 144 040 167 151 164 150 040 141 143 164 165 141 154 040 143 157
0001020 144 145 040 157 156 040 154 141 164 145 162 040 163 164 141 147
0001040 145 040 157 146 040 164 150 145 040 142 165 151 154 144 054 012
0001060 057 057 040 164 150 151 163 040 167 141 171 040 103 154 157 163
0001100 165 162 145 040 103 157 155 160 151 154 145 162 040 167 151 154
0001120 154 040 156 157 164 040 155 141 156 147 154 145 040 151 164 040
0001140 050 145 056 147 056 040 143 141 163 145 040 064 056 040 141 142
0001160 157 166 145 051 056 012 057 057 040 116 157 164 145 040 164 150
0001200 141 164 040 151 146 040 171 157 165 040 167 141 156 164 040 164
0001220 157 040 162 165 156 040 143 154 157 163 165 162 145 054 040 141
0001240 156 144 040 141 154 163 157 040 164 157 040 165 163 145 040 115
0001260 157 144 165 154 145 012 057 057 040 141 146 164 145 162 040 164
0001300 150 145 040 147 145 156 145 162 141 164 145 144 040 143 157 144
0001320 145 054 040 171 157 165 040 167 151 154 154 040 156 145 145 144
0001340 040 164 157 040 144 145 146 151 156 145 040 040 040 166 141 162
0001360 040 115 157 144 165 154 145 040 075 040 173 175 073 012 057 057
0001400 040 142 145 146 157 162 145 040 164 150 145 040 143 157 144 145
0001420 056 040 124 150 145 156 040 164 150 141 164 040 157 142 152 145
0001440 143 164 040 167 151 154 154 040 142 145 040 165 163 145 144 040
0001460 151 156 040 164 150 145 040 143 157 144 145 054 040 141 156 144
0001500 040 171 157 165 012 057 057 040 143 141 156 040 143 157 156 164
0001520 151 156 165 145 040 164 157 040 165 163 145 040 115 157 144 165
0001540 154 145 040 141 146 164 145 162 167 141 162 144 163 040 141 163
0001560 040 167 145 154 154 056 012 166 141 162 040 115 157 144 165 154
0001600 145 040 075 040 164 171 160 145 157 146 040 115 157 144 165 154
0001620 145 040 041 075 040 047 165 156 144 145 146 151 156 145 144 047
0001640 040 077 040 115 157 144 165 154 145 040 072 040 173 175 073 012
0001660 012 057 057 040 123 145 145 040 150 164 164 160 163 072 057 057
0001700 143 141 156 151 165 163 145 056 143 157 155 057 155 144 156 055
0001720 152 141 166 141 163 143 162 151 160 164 137 142 165 151 154 164
0001740 151 156 163 137 157 142 152 145 143 164 137 141 163 163 151 147
0001760 156 012 012 057 057 040 123 145 145 040 150 164 164 160 163 072
0002000 057 057 143 141 156 151 165 163 145 056 143 157 155 057 155 144
0002020 156 055 152 141 166 141 163 143 162 151 160 164 137 142 165 151
0002040 154 164 151 156 163 137 142 151 147 151 156 164 066 064 141 162
0002060 162 141 171 012 012 057 057 040 055 055 160 162 145 055 152 163
0002100 145 163 040 141 162 145 040 145 155 151 164 164 145 144 040 141
0002120 146 164 145 162 040 164 150 145 040 115 157 144 165 154 145 040
0002140 151 156 164 145 147 162 141 164 151 157 156 040 143 157 144 145
0002160 054 040 163 157 040 164 150 141 164 040 164 150 145 171 040 143
0002200 141 156 012 057 057 040 162 145 146 145 162 040 164 157 040 115
0002220 157 144 165 154 145 040 050 151 146 040 164 150 145 171 040 143
0002240 150 157 157 163 145 073 040 164 150 145 171 040 143 141 156 040
0002260 141 154 163 157 040 144 145 146 151 156 145 040 115 157 144 165
0002300 154 145 051 012 057 057 040 173 173 120 122 105 137 112 123 105
0002320 123 175 175 012 012 057 057 040 123 157 155 145 164 151 155 145
0002340 163 040 141 156 040 145 170 151 163 164 151 156 147 040 115 157
0002360 144 165 154 145 040 157 142 152 145 143 164 040 145 170 151 163
0002400 164 163 040 167 151 164 150 040 160 162 157 160 145 162 164 151
0002420 145 163 012 057 057 040 155 145 141 156 164 040 164 157 040 157
0002440 166 145 162 167 162 151 164 145 040 164 150 145 040 144 145 146
0002460 141 165 154 164 040 155 157 144 165 154 145 040 146 165 156 143
0002500 164 151 157 156 141 154 151 164 171 056 040 110 145 162 145 012
0002520 057 057 040 167 145 040 143 157 154 154 145 143 164 040 164 150
0002540 157 163 145 040 160 162 157 160 145 162 164 151 145 163 040 141
0002560 156 144 040 162 145 141 160 160 154 171 040 137 141 146 164 145
0002600 162 137 040 167 145 040 143 157 156 146 151 147 165 162 145 012
0002620 057 057 040 164 150 145 040 143 165 162 162 145 156 164 040 145
0002640 156 166 151 162 157 156 155 145 156 164 047 163 040 144 145 146
0002660 141 165 154 164 163 040 164 157 040 141 166 157 151 144 040 150
0002700 141 166 151 156 147 040 164 157 040 142 145 040 163 157 012 057
0002720 057 040 144 145 146 145 156 163 151 166 145 040 144 165 162 151
0002740 156 147 040 151 156 151 164 151 141 154 151 172 141 164 151 157
0002760 156 056 012 166 141 162 040 155 157 144 165 154 145 117 166 145
0003000 162 162 151 144 145 163 040 075 040 117 142 152 145 143 164 056
0003020 141 163 163 151 147 156 050 173 175 054 040 115 157 144 165 154
0003040 145 051 073 012 012 166 141 162 040 141 162 147 165 155 145 156
0003060 164 163 137 040 075 040 133 135 073 012 166 141 162 040 164 150
0003100 151 163 120 162 157 147 162 141 155 040 075 040 047 056 057 164
0003120 150 151 163 056 160 162 157 147 162 141 155 047 073 012 166 141
0003140 162 040 161 165 151 164 137 040 075 040 050 163 164 141 164 165
0003160 163 054 040 164 157 124 150 162 157 167 051 040 075 076 040 173
0003200 012 040 040 164 150 162 157 167 040 164 157 124 150 162 157 167
0003220 073 012 175 073 012 012 057 057 040 104 145 164 145 162 155 151
0003240 156 145 040 164 150 145 040 162 165 156 164 151 155 145 040 145
0003260 156 166 151 162 157 156 155 145 156 164 040 167 145 040 141 162
0003300 145 040 151 156 056 040 131 157 165 040 143 141 156 040 143 165
0003320 163 164 157 155 151 172 145 040 164 150 151 163 040 142 171 012
0003340 057 057 040 163 145 164 164 151 156 147 040 164 150 145 040 105
0003360 116 126 111 122 117 116 115 105 116 124 040 163 145 164 164 151
0003400 156 147 040 141 164 040 143 157 155 160 151 154 145 040 164 151
0003420 155 145 040 050 163 145 145 040 163 145 164 164 151 156 147 163
0003440 056 152 163 051 056 012 012 057 057 040 101 164 164 145 155 160
0003460 164 040 164 157 040 141 165 164 157 055 144 145 164 145 143 164
0003500 040 164 150 145 040 145 156 166 151 162 157 156 155 145 156 164
0003520 012 166 141 162 040 105 116 126 111 122 117 116 115 105 116 124
0003540 137 111 123 137 127 105 102 040 075 040 164 171 160 145 157 146
0003560 040 167 151 156 144 157 167 040 075 075 040 047 157 142 152 145
0003600 143 164 047 073 012 166 141 162 040 105 116 126 111 122 117 116
0003620 115 105 116 124 137 111 123 137 127 117 122 113 105 122 040 075
0003640 040 164 171 160 145 157 146 040 151 155 160 157 162 164 123 143
0003660 162 151 160 164 163 040 075 075 040 047 146 165 156 143 164 151
0003700 157 156 047 073 012 057 057 040 116 056 142 056 040 105 154 145
0003720 143 164 162 157 156 056 152 163 040 145 156 166 151 162 157 156
0003740 155 145 156 164 040 151 163 040 163 151 155 165 154 164 141 156
0003760 145 157 165 163 154 171 040 141 040 116 117 104 105 055 145 156
0004000 166 151 162 157 156 155 145 156 164 054 040 142 165 164 012 057
0004020 057 040 141 154 163 157 040 141 040 167 145 142 040 145 156 166
0004040 151 162 157 156 155 145 156 164 056 012 166 141 162 040 105 116
0004060 126 111 122 117 116 115 105 116 124 137 111 123 137 116 117 104
0004100 105 040 075 040 164 171 160 145 157 146 040 160 162 157 143 145
0004120 163 163 040 075 075 040 047 157 142 152 145 143 164 047 040 046
0004140 046 040 164 171 160 145 157 146 040 160 162 157 143 145 163 163
0004160 056 166 145 162 163 151 157 156 163 040 075 075 040 047 157 142
0004200 152 145 143 164 047 040 046 046 040 164 171 160 145 157 146 040
0004220 160 162 157 143 145 163 163 056 166 145 162 163 151 157 156 163
0004240 056 156 157 144 145 040 075 075 040 047 163 164 162 151 156 147
0004260 047 073 012 166 141 162 040 105 116 126 111 122 117 116 115 105
0004300 116 124 137 111 123 137 123 110 105 114 114 040 075 040 041 105
0004320 116 126 111 122 117 116 115 105 116 124 137 111 123 137 127 105
0004340 102 040 046 046 040 041 105 116 126 111 122 117 116 115 105 116
0004360 124 137 111 123 137 116 117 104 105 040 046 046 040 041 105 116
0004400 126 111 122 117 116 115 105 116 124 137 111 123 137 127 117 122
0004420 113 105 122 073 012 012 151 146 040 050 115 157 144 165 154 145
0004440 133 047 105 116 126 111 122 117 116 115 105 116 124 047 135 051
0004460 040 173 012 040 040 164 150 162 157 167 040 156 145 167 040 105
0004500 162 162 157 162 050 047 115 157 144 165 154 145 056 105 116 126
0004520 111 122 117 116 115 105 116 124 040 150 141 163 040 142 145 145
0004540 156 040 144 145 160 162 145 143 141 164 145 144 056 040 124 157
0004560 040 146 157 162 143 145 040 164 150 145 040 145 156 166 151 162
0004600 157 156 155 145 156 164 054 040 165 163 145 040 164 150 145 040
0004620 105 116 126 111 122 117 116 115 105 116 124 040 143 157 155 160
0004640 151 154 145 055 164 151 155 145 040 157 160 164 151 157 156 040
0004660 050 146 157 162 040 145 170 141 155 160 154 145 054 040 055 163
0004700 105 116 126 111 122 117 116 115 105 116 124 075 167 145 142 040
0004720 157 162 040 055 163 105 116 126 111 122 117 116 115 105 116 124
0004740 075 156 157 144 145 051 047 051 073 012 175 012 012 057 057 040
0004760 140 057 140 040 163 150 157 165 154 144 040 142 145 040 160 162
0005000 145 163 145 156 164 040 141 164 040 164 150 145 040 145 156 144
0005020 040 151 146 040 140 163 143 162 151 160 164 104 151 162 145 143
0005040 164 157 162 171 140 040 151 163 040 156 157 164 040 145 155 160
0005060 164 171 012 166 141 162 040 163 143 162 151 160 164 104 151 162
0005100 145 143 164 157 162 171 040 075 040 047 047 073 012 146 165 156
0005120 143 164 151 157 156 040 154 157 143 141 164 145 106 151 154 145
0005140 050 160 141 164 150 051 040 173 012 040 040 151 146 040 050 115
0005160 157 144 165 154 145 133 047 154 157 143 141 164 145 106 151 154
0005200 145 047 135 051 040 173 012 040 040 040 040 162 145 164 165 162
0005220 156 040 115 157 144 165 154 145 133 047 154 157 143 141 164 145
0005240 106 151 154 145 047 135 050 160 141 164 150 054 040 163 143 162
0005260 151 160 164 104 151 162 145 143 164 157 162 171 051 073 012 040
0005300 040 175 012 040 040 162 145 164 165 162 156 040 163 143 162 151
0005320 160 164 104 151 162 145 143 164 157 162 171 040 053 040 160 141
0005340 164 150 073 012 175 012 012 057 057 040 110 157 157 153 163 040
0005360 164 150 141 164 040 141 162 145 040 151 155 160 154 145 155 145
0005400 156 164 145 144 040 144 151 146 146 145 162 145 156 164 154 171
0005420 040 151 156 040 144 151 146 146 145 162 145 156 164 040 162 165
0005440 156 164 151 155 145 040 145 156 166 151 162 157 156 155 145 156
0005460 164 163 056 012 166 141 162 040 162 145 141 144 137 054 012 040
0005500 040 040 040 162 145 141 144 101 163 171 156 143 054 012 040 040
0005520 040 040 162 145 141 144 102 151 156 141 162 171 054 012 040 040
0005540 040 040 163 145 164 127 151 156 144 157 167 124 151 164 154 145
0005560 073 012 012 057 057 040 116 157 162 155 141 154 154 171 040 167
0005600 145 040 144 157 156 047 164 040 154 157 147 040 145 170 143 145
0005620 160 164 151 157 156 163 040 142 165 164 040 151 156 163 164 145
0005640 141 144 040 154 145 164 040 164 150 145 155 040 142 165 142 142
0005660 154 145 040 157 165 164 040 164 150 145 040 164 157 160 012 057
0005700 057 040 154 145 166 145 154 040 167 150 145 162 145 040 164 150
0005720 145 040 145 155 142 145 144 144 151 156 147 040 145 156 166 151
0005740 162 157 156 155 145 156 164 040 050 145 056 147 056 040 164 150
0005760 145 040 142 162 157 167 163 145 162 051 040 143 141 156 040 150
0006000 141 156 144 154 145 012 057 057 040 164 150 145 155 056 012 057
0006020 057 040 110 157 167 145 166 145 162 040 165 156 144 145 162 040
0006040 166 070 040 141 156 144 040 156 157 144 145 040 167 145 040 163
0006060 157 155 145 164 151 155 145 163 040 145 170 151 164 040 164 150
0006100 145 040 160 162 157 143 145 163 163 040 144 151 162 145 143 154
0006120 171 040 151 156 040 167 150 151 143 150 040 143 141 163 145 012
0006140 057 057 040 151 164 163 040 165 160 040 164 157 040 165 163 145
0006160 040 165 163 040 164 157 040 154 157 147 040 164 150 145 040 145
0006200 170 143 145 160 164 151 157 156 040 142 145 146 157 162 145 040
0006220 145 170 151 164 151 156 147 056 012 057 057 040 111 146 040 167
0006240 145 040 146 151 170 040 150 164 164 160 163 072 057 057 147 151
0006260 164 150 165 142 056 143 157 155 057 145 155 163 143 162 151 160
0006300 164 145 156 055 143 157 162 145 057 145 155 163 143 162 151 160
0006320 164 145 156 057 151 163 163 165 145 163 057 061 065 060 070 060
0006340 012 057 057 040 164 150 151 163 040 155 141 171 040 156 157 040
0006360 154 157 156 147 145 162 040 142 145 040 156 145 145 144 145 144
0006400 040 165 156 144 145 162 040 156 157 144 145 056 012 146 165 156
0006420 143 164 151 157 156 040 154 157 147 105 170 143 145 160 164 151
0006440 157 156 117 156 105 170 151 164 050 145 051 040 173 012 040 040
0006460 151 146 040 050 145 040 151 156 163 164 141 156 143 145 157 146
0006500 040 105 170 151 164 123 164 141 164 165 163 051 040 162 145 164
0006520 165 162 156 073 012 040 040 154 145 164 040 164 157 114 157 147
0006540 040 075 040 145 073 012 040 040 151 146 040 050 145 040 046 046
0006560 040 164 171 160 145 157 146 040 145 040 075 075 040 047 157 142
0006600 152 145 143 164 047 040 046 046 040 145 056 163 164 141 143 153
0006620 051 040 173 012 040 040 040 040 164 157 114 157 147 040 075 040
0006640 133 145 054 040 145 056 163 164 141 143 153 135 073 012 040 040
0006660 175 012 040 040 145 162 162 050 047 145 170 151 164 151 156 147
0006700 040 144 165 145 040 164 157 040 145 170 143 145 160 164 151 157
0006720 156 072 040 047 040 053 040 164 157 114 157 147 051 073 012 175
0006740 012 012 151 146 040 050 105 116 126 111 122 117 116 115 105 116
0006760 124 137 111 123 137 116 117 104 105 051 040 173 012 040 040 151
0007000 146 040 050 164 171 160 145 157 146 040 160 162 157 143 145 163
0007020 163 040 075 075 040 047 165 156 144 145 146 151 156 145 144 047
0007040 040 174 174 040 041 160 162 157 143 145 163 163 056 162 145 154
0007060 145 141 163 145 040 174 174 040 160 162 157 143 145 163 163 056
0007100 162 145 154 145 141 163 145 056 156 141 155 145 040 041 075 075
0007120 040 047 156 157 144 145 047 051 040 164 150 162 157 167 040 156
0007140 145 167 040 105 162 162 157 162 050 047 156 157 164 040 143 157
0007160 155 160 151 154 145 144 040 146 157 162 040 164 150 151 163 040
0007200 145 156 166 151 162 157 156 155 145 156 164 040 050 144 151 144
0007220 040 171 157 165 040 142 165 151 154 144 040 164 157 040 110 124
0007240 115 114 040 141 156 144 040 164 162 171 040 164 157 040 162 165
0007260 156 040 151 164 040 156 157 164 040 157 156 040 164 150 145 040
0007300 167 145 142 054 040 157 162 040 163 145 164 040 105 116 126 111
0007320 122 117 116 115 105 116 124 040 164 157 040 163 157 155 145 164
0007340 150 151 156 147 040 055 040 154 151 153 145 040 156 157 144 145
0007360 040 055 040 141 156 144 040 162 165 156 040 151 164 040 163 157
0007400 155 145 160 154 141 143 145 040 145 154 163 145 040 055 040 154
0007420 151 153 145 040 157 156 040 164 150 145 040 167 145 142 077 051
0007440 047 051 073 012 040 040 151 146 040 050 105 116 126 111 122 117
0007460 116 115 105 116 124 137 111 123 137 127 117 122 113 105 122 051
0007500 040 173 012 040 040 040 040 163 143 162 151 160 164 104 151 162
0007520 145 143 164 157 162 171 040 075 040 162 145 161 165 151 162 145
0007540 050 047 160 141 164 150 047 051 056 144 151 162 156 141 155 145
0007560 050 163 143 162 151 160 164 104 151 162 145 143 164 157 162 171
0007600 051 040 053 040 047 057 047 073 012 040 040 175 040 145 154 163
0007620 145 040 173 012 040 040 040 040 163 143 162 151 160 164 104 151
0007640 162 145 143 164 157 162 171 040 075 040 137 137 144 151 162 156
0007660 141 155 145 040 053 040 047 057 047 073 012 040 040 175 012 012
0007700 057 057 040 151 156 143 154 165 144 145 072 040 156 157 144 145
0007720 137 163 150 145 154 154 137 162 145 141 144 056 152 163 012 012
0007740 012 166 141 162 040 146 163 073 012 166 141 162 040 156 157 144
0007760 145 120 141 164 150 073 012 012 166 141 162 040 162 145 161 165
0010000 151 162 145 116 157 144 145 106 123 040 075 040 050 051 040 075
0010020 076 040 173 012 040 040 057 057 040 125 163 145 040 156 157 144
0010040 145 120 141 164 150 040 141 163 040 164 150 145 040 151 156 144
0010060 151 143 141 164 157 162 040 146 157 162 040 164 150 145 163 145
0010100 040 156 157 164 040 142 145 151 156 147 040 151 156 151 164 151
0010120 141 154 151 172 145 144 054 012 040 040 057 057 040 163 151 156
0010140 143 145 040 151 156 040 163 157 155 145 040 145 156 166 151 162
0010160 157 156 155 145 156 164 163 040 141 040 147 154 157 142 141 154
0010200 040 146 163 040 155 141 171 040 150 141 166 145 040 141 154 162
0010220 145 141 144 171 040 142 145 145 156 012 040 040 057 057 040 143
0010240 162 145 141 164 145 144 056 012 040 040 151 146 040 050 041 156
0010260 157 144 145 120 141 164 150 051 040 173 012 040 040 040 040 146
0010300 163 040 075 040 162 145 161 165 151 162 145 050 047 146 163 047
0010320 051 073 012 040 040 040 040 156 157 144 145 120 141 164 150 040
0010340 075 040 162 145 161 165 151 162 145 050 047 160 141 164 150 047
0010360 051 073 012 040 040 175 012 175 073 012 012 162 145 141 144 137
0010400 040 075 040 050 146 151 154 145 156 141 155 145 054 040 142 151
0010420 156 141 162 171 051 040 075 076 040 173 012 040 040 162 145 161
0010440 165 151 162 145 116 157 144 145 106 123 050 051 073 012 040 040
0010460 146 151 154 145 156 141 155 145 040 075 040 156 157 144 145 120
0010500 141 164 150 133 047 156 157 162 155 141 154 151 172 145 047 135
0010520 050 146 151 154 145 156 141 155 145 051 073 012 040 040 162 145
0010540 164 165 162 156 040 146 163 056 162 145 141 144 106 151 154 145
0010560 123 171 156 143 050 146 151 154 145 156 141 155 145 054 040 142
0010600 151 156 141 162 171 040 077 040 165 156 144 145 146 151 156 145
0010620 144 040 072 040 047 165 164 146 070 047 051 073 012 175 073 012
0010640 012 162 145 141 144 102 151 156 141 162 171 040 075 040 050 146
0010660 151 154 145 156 141 155 145 051 040 075 076 040 173 012 040 040
0010700 166 141 162 040 162 145 164 040 075 040 162 145 141 144 137 050
0010720 146 151 154 145 156 141 155 145 054 040 164 162 165 145 051 073
0010740 012 040 040 151 146 040 050 041 162 145 164 056 142 165 146 146
0010760 145 162 051 040 173 012 040 040 040 040 162 145 164 040 075 040
0011000 156 145 167 040 125 151 156 164 070 101 162 162 141 171 050 162
0011020 145 164 051 073 012 040 040 175 012 040 040 141 163 163 145 162
0011040 164 050 162 145 164 056 142 165 146 146 145 162 051 073 012 040
0011060 040 162 145 164 165 162 156 040 162 145 164 073 012 175 073 012
0011100 012 162 145 141 144 101 163 171 156 143 040 075 040 050 146 151
0011120 154 145 156 141 155 145 054 040 157 156 154 157 141 144 054 040
0011140 157 156 145 162 162 157 162 051 040 075 076 040 173 012 040 040
0011160 162 145 161 165 151 162 145 116 157 144 145 106 123 050 051 073
0011200 012 040 040 146 151 154 145 156 141 155 145 040 075 040 156 157
0011220 144 145 120 141 164 150 133 047 156 157 162 155 141 154 151 172
0011240 145 047 135 050 146 151 154 145 156 141 155 145 051 073 012 040
0011260 040 146 163 056 162 145 141 144 106 151 154 145 050 146 151 154
0011300 145 156 141 155 145 054 040 146 165 156 143 164 151 157 156 050
0011320 145 162 162 054 040 144 141 164 141 051 040 173 012 040 040 040
0011340 040 151 146 040 050 145 162 162 051 040 157 156 145 162 162 157
0011360 162 050 145 162 162 051 073 012 040 040 040 040 145 154 163 145
0011400 040 157 156 154 157 141 144 050 144 141 164 141 056 142 165 146
0011420 146 145 162 051 073 012 040 040 175 051 073 012 175 073 012 012
0011440 057 057 040 145 156 144 040 151 156 143 154 165 144 145 072 040
0011460 156 157 144 145 137 163 150 145 154 154 137 162 145 141 144 056
0011500 152 163 012 040 040 151 146 040 050 160 162 157 143 145 163 163
0011520 133 047 141 162 147 166 047 135 056 154 145 156 147 164 150 040
0011540 076 040 061 051 040 173 012 040 040 040 040 164 150 151 163 120
0011560 162 157 147 162 141 155 040 075 040 160 162 157 143 145 163 163
0011600 133 047 141 162 147 166 047 135 133 061 135 056 162 145 160 154
0011620 141 143 145 050 057 134 134 057 147 054 040 047 057 047 051 073
0011640 012 040 040 175 012 012 040 040 141 162 147 165 155 145 156 164
0011660 163 137 040 075 040 160 162 157 143 145 163 163 133 047 141 162
0011700 147 166 047 135 056 163 154 151 143 145 050 062 051 073 012 012
0011720 040 040 151 146 040 050 164 171 160 145 157 146 040 155 157 144
0011740 165 154 145 040 041 075 040 047 165 156 144 145 146 151 156 145
0011760 144 047 051 040 173 012 040 040 040 040 155 157 144 165 154 145
0012000 133 047 145 170 160 157 162 164 163 047 135 040 075 040 115 157
0012020 144 165 154 145 073 012 040 040 175 012 012 040 040 160 162 157
0012040 143 145 163 163 133 047 157 156 047 135 050 047 165 156 143 141
0012060 165 147 150 164 105 170 143 145 160 164 151 157 156 047 054 040
0012100 146 165 156 143 164 151 157 156 050 145 170 051 040 173 012 040
0012120 040 040 040 057 057 040 163 165 160 160 162 145 163 163 040 105
0012140 170 151 164 123 164 141 164 165 163 040 145 170 143 145 160 164
0012160 151 157 156 163 040 146 162 157 155 040 163 150 157 167 151 156
0012200 147 040 141 156 040 145 162 162 157 162 012 040 040 040 040 151
0012220 146 040 050 041 050 145 170 040 151 156 163 164 141 156 143 145
0012240 157 146 040 105 170 151 164 123 164 141 164 165 163 051 051 040
0012260 173 012 040 040 040 040 040 040 164 150 162 157 167 040 145 170
0012300 073 012 040 040 040 040 175 012 040 040 175 051 073 012 012 040
0012320 040 057 057 040 127 151 164 150 157 165 164 040 164 150 151 163
0012340 040 157 154 144 145 162 040 166 145 162 163 151 157 156 163 040
0012360 157 146 040 156 157 144 145 040 050 074 040 166 061 065 051 040
0012400 167 151 154 154 040 154 157 147 040 165 156 150 141 156 144 154
0012420 145 144 040 162 145 152 145 143 164 151 157 156 163 012 040 040
0012440 057 057 040 142 165 164 040 162 145 164 165 162 156 040 060 054
0012460 040 167 150 151 143 150 040 151 163 040 156 157 164 040 156 157
0012500 162 155 141 154 154 171 040 164 150 145 040 144 145 163 151 162
0012520 145 144 040 142 145 150 141 166 151 157 165 162 056 040 040 124
0012540 150 151 163 040 151 163 012 040 040 057 057 040 156 157 164 040
0012560 142 145 040 156 145 145 144 145 144 040 167 151 164 150 040 156
0012600 157 144 145 040 166 061 065 040 141 156 144 040 141 142 157 165
0012620 164 040 142 145 143 141 165 163 145 040 151 164 040 151 163 040
0012640 156 157 167 040 164 150 145 040 144 145 146 141 165 154 164 012
0012660 040 040 057 057 040 142 145 150 141 166 151 157 165 162 072 012
0012700 040 040 057 057 040 123 145 145 040 150 164 164 160 163 072 057
0012720 057 156 157 144 145 152 163 056 157 162 147 057 141 160 151 057
0012740 143 154 151 056 150 164 155 154 043 143 154 151 137 165 156 150
0012760 141 156 144 154 145 144 137 162 145 152 145 143 164 151 157 156
0013000 163 137 155 157 144 145 012 040 040 160 162 157 143 145 163 163
0013020 133 047 157 156 047 135 050 047 165 156 150 141 156 144 154 145
0013040 144 122 145 152 145 143 164 151 157 156 047 054 040 146 165 156
0013060 143 164 151 157 156 050 162 145 141 163 157 156 051 040 173 040
0013100 164 150 162 157 167 040 162 145 141 163 157 156 073 040 175 051
0013120 073 012 012 040 040 161 165 151 164 137 040 075 040 050 163 164
0013140 141 164 165 163 054 040 164 157 124 150 162 157 167 051 040 075
0013160 076 040 173 012 040 040 040 040 151 146 040 050 153 145 145 160
0013200 122 165 156 164 151 155 145 101 154 151 166 145 050 051 051 040
0013220 173 012 040 040 040 040 040 040 160 162 157 143 145 163 163 133
0013240 047 145 170 151 164 103 157 144 145 047 135 040 075 040 163 164
0013260 141 164 165 163 073 012 040 040 040 040 040 040 164 150 162 157
0013300 167 040 164 157 124 150 162 157 167 073 012 040 040 040 040 175
0013320 012 040 040 040 040 154 157 147 105 170 143 145 160 164 151 157
0013340 156 117 156 105 170 151 164 050 164 157 124 150 162 157 167 051
0013360 073 012 040 040 040 040 160 162 157 143 145 163 163 133 047 145
0013400 170 151 164 047 135 050 163 164 141 164 165 163 051 073 012 040
0013420 040 175 073 012 012 040 040 115 157 144 165 154 145 133 047 151
0013440 156 163 160 145 143 164 047 135 040 075 040 146 165 156 143 164
0013460 151 157 156 040 050 051 040 173 040 162 145 164 165 162 156 040
0013500 047 133 105 155 163 143 162 151 160 164 145 156 040 115 157 144
0013520 165 154 145 040 157 142 152 145 143 164 135 047 073 040 175 073
0013540 012 012 175 040 145 154 163 145 012 151 146 040 050 105 116 126
0013560 111 122 117 116 115 105 116 124 137 111 123 137 123 110 105 114
0013600 114 051 040 173 012 012 040 040 151 146 040 050 050 164 171 160
0013620 145 157 146 040 160 162 157 143 145 163 163 040 075 075 040 047
0013640 157 142 152 145 143 164 047 040 046 046 040 164 171 160 145 157
0013660 146 040 162 145 161 165 151 162 145 040 075 075 075 040 047 146
0013700 165 156 143 164 151 157 156 047 051 040 174 174 040 164 171 160
0013720 145 157 146 040 167 151 156 144 157 167 040 075 075 040 047 157
0013740 142 152 145 143 164 047 040 174 174 040 164 171 160 145 157 146
0013760 040 151 155 160 157 162 164 123 143 162 151 160 164 163 040 075
0014000 075 040 047 146 165 156 143 164 151 157 156 047 051 040 164 150
0014020 162 157 167 040 156 145 167 040 105 162 162 157 162 050 047 156
0014040 157 164 040 143 157 155 160 151 154 145 144 040 146 157 162 040
0014060 164 150 151 163 040 145 156 166 151 162 157 156 155 145 156 164
0014100 040 050 144 151 144 040 171 157 165 040 142 165 151 154 144 040
0014120 164 157 040 110 124 115 114 040 141 156 144 040 164 162 171 040
0014140 164 157 040 162 165 156 040 151 164 040 156 157 164 040 157 156
0014160 040 164 150 145 040 167 145 142 054 040 157 162 040 163 145 164
0014200 040 105 116 126 111 122 117 116 115 105 116 124 040 164 157 040
0014220 163 157 155 145 164 150 151 156 147 040 055 040 154 151 153 145
0014240 040 156 157 144 145 040 055 040 141 156 144 040 162 165 156 040
0014260 151 164 040 163 157 155 145 160 154 141 143 145 040 145 154 163
0014300 145 040 055 040 154 151 153 145 040 157 156 040 164 150 145 040
0014320 167 145 142 077 051 047 051 073 012 012 040 040 151 146 040 050
0014340 164 171 160 145 157 146 040 162 145 141 144 040 041 075 040 047
0014360 165 156 144 145 146 151 156 145 144 047 051 040 173 012 040 040
0014400 040 040 162 145 141 144 137 040 075 040 146 165 156 143 164 151
0014420 157 156 040 163 150 145 154 154 137 162 145 141 144 050 146 051
0014440 040 173 012 040 040 040 040 040 040 162 145 164 165 162 156 040
0014460 162 145 141 144 050 146 051 073 012 040 040 040 040 175 073 012
0014500 040 040 175 012 012 040 040 162 145 141 144 102 151 156 141 162
0014520 171 040 075 040 146 165 156 143 164 151 157 156 040 162 145 141
0014540 144 102 151 156 141 162 171 050 146 051 040 173 012 040 040 040
0014560 040 154 145 164 040 144 141 164 141 073 012 040 040 040 040 151
0014600 146 040 050 164 171 160 145 157 146 040 162 145 141 144 142 165
0014620 146 146 145 162 040 075 075 040 047 146 165 156 143 164 151 157
0014640 156 047 051 040 173 012 040 040 040 040 040 040 162 145 164 165
0014660 162 156 040 156 145 167 040 125 151 156 164 070 101 162 162 141
0014700 171 050 162 145 141 144 142 165 146 146 145 162 050 146 051 051
0014720 073 012 040 040 040 040 175 012 040 040 040 040 144 141 164 141
0014740 040 075 040 162 145 141 144 050 146 054 040 047 142 151 156 141
0014760 162 171 047 051 073 012 040 040 040 040 141 163 163 145 162 164
0015000 050 164 171 160 145 157 146 040 144 141 164 141 040 075 075 040
0015020 047 157 142 152 145 143 164 047 051 073 012 040 040 040 040 162
0015040 145 164 165 162 156 040 144 141 164 141 073 012 040 040 175 073
0015060 012 012 040 040 162 145 141 144 101 163 171 156 143 040 075 040
0015100 146 165 156 143 164 151 157 156 040 162 145 141 144 101 163 171
0015120 156 143 050 146 054 040 157 156 154 157 141 144 054 040 157 156
0015140 145 162 162 157 162 051 040 173 012 040 040 040 040 163 145 164
0015160 124 151 155 145 157 165 164 050 050 051 040 075 076 040 157 156
0015200 154 157 141 144 050 162 145 141 144 102 151 156 141 162 171 050
0015220 146 051 051 054 040 060 051 073 012 040 040 175 073 012 012 040
0015240 040 151 146 040 050 164 171 160 145 157 146 040 163 143 162 151
0015260 160 164 101 162 147 163 040 041 075 040 047 165 156 144 145 146
0015300 151 156 145 144 047 051 040 173 012 040 040 040 040 141 162 147
0015320 165 155 145 156 164 163 137 040 075 040 163 143 162 151 160 164
0015340 101 162 147 163 073 012 040 040 175 040 145 154 163 145 040 151
0015360 146 040 050 164 171 160 145 157 146 040 141 162 147 165 155 145
0015400 156 164 163 040 041 075 040 047 165 156 144 145 146 151 156 145
0015420 144 047 051 040 173 012 040 040 040 040 141 162 147 165 155 145
0015440 156 164 163 137 040 075 040 141 162 147 165 155 145 156 164 163
0015460 073 012 040 040 175 012 012 040 040 151 146 040 050 164 171 160
0015500 145 157 146 040 161 165 151 164 040 075 075 040 047 146 165 156
0015520 143 164 151 157 156 047 051 040 173 012 040 040 040 040 161 165
0015540 151 164 137 040 075 040 050 163 164 141 164 165 163 054 040 164
0015560 157 124 150 162 157 167 051 040 075 076 040 173 012 040 040 040
0015600 040 040 040 057 057 040 125 156 154 151 153 145 040 156 157 144
0015620 145 040 167 150 151 143 150 040 150 141 163 040 160 162 157 143
0015640 145 163 163 056 145 170 151 164 103 157 144 145 054 040 144 070
0015660 040 150 141 163 040 156 157 040 163 165 143 150 040 155 145 143
0015700 150 141 156 151 163 155 056 040 123 157 040 167 145 012 040 040
0015720 040 040 040 040 057 057 040 150 141 166 145 040 156 157 040 167
0015740 141 171 040 164 157 040 163 145 164 040 164 150 145 040 145 170
0015760 151 164 040 143 157 144 145 040 141 156 144 040 164 150 145 156
0016000 040 154 145 164 040 164 150 145 040 160 162 157 147 162 141 155
0016020 040 145 170 151 164 040 167 151 164 150 012 040 040 040 040 040
0016040 040 057 057 040 164 150 141 164 040 143 157 144 145 040 167 150
0016060 145 156 040 151 164 040 156 141 164 165 162 141 154 154 171 040
0016100 163 164 157 160 163 040 162 165 156 156 151 156 147 040 050 163
0016120 141 171 054 040 167 150 145 156 040 141 154 154 040 163 145 164
0016140 124 151 155 145 157 165 164 163 012 040 040 040 040 040 040 057
0016160 057 040 150 141 166 145 040 143 157 155 160 154 145 164 145 144
0016200 051 056 040 106 157 162 040 164 150 141 164 040 162 145 141 163
0016220 157 156 040 167 145 040 155 165 163 164 040 143 141 154 154 040
0016240 140 161 165 151 164 140 040 055 040 164 150 145 040 157 156 154
0016260 171 040 167 141 171 040 164 157 012 040 040 040 040 040 040 057
0016300 057 040 163 145 164 040 164 150 145 040 145 170 151 164 040 143
0016320 157 144 145 040 055 040 142 165 164 040 161 165 151 164 040 141
0016340 154 163 157 040 150 141 154 164 163 040 151 155 155 145 144 151
0016360 141 164 145 154 171 054 040 163 157 040 167 145 040 156 145 145
0016400 144 040 164 157 040 142 145 012 040 040 040 040 040 040 057 057
0016420 040 143 141 162 145 146 165 154 040 157 146 040 167 150 145 164
0016440 150 145 162 040 164 150 145 040 162 165 156 164 151 155 145 040
0016460 151 163 040 141 154 151 166 145 040 157 162 040 156 157 164 054
0016500 040 167 150 151 143 150 040 151 163 040 167 150 171 040 164 150
0016520 151 163 040 143 157 144 145 012 040 040 040 040 040 040 057 057
0016540 040 160 141 164 150 040 154 157 157 153 163 040 144 151 146 146
0016560 145 162 145 156 164 040 164 150 141 156 040 156 157 144 145 056
0016600 040 111 164 040 141 154 163 157 040 150 141 163 040 164 150 145
0016620 040 144 157 167 156 163 151 144 145 040 164 150 141 164 040 151
0016640 164 040 167 151 154 154 012 040 040 040 040 040 040 057 057 040
0016660 150 141 154 164 040 164 150 145 040 145 156 164 151 162 145 040
0016700 160 162 157 147 162 141 155 040 167 150 145 156 040 156 157 040
0016720 143 157 144 145 040 162 145 155 141 151 156 163 040 164 157 040
0016740 162 165 156 054 040 167 150 151 143 150 040 155 145 141 156 163
0016760 040 164 150 151 163 012 040 040 040 040 040 040 057 057 040 151
0017000 163 040 156 157 164 040 146 162 151 145 156 144 154 171 040 146
0017020 157 162 040 142 165 156 144 154 151 156 147 040 164 150 151 163
0017040 040 143 157 144 145 040 151 156 164 157 040 141 040 154 141 162
0017060 147 145 162 040 143 157 144 145 142 141 163 145 054 040 141 156
0017100 144 040 146 157 162 012 040 040 040 040 040 040 057 057 040 164
0017120 150 141 164 040 162 145 141 163 157 156 040 164 150 145 040 042
0017140 163 150 145 154 154 042 040 145 156 166 151 162 157 156 155 145
0017160 156 164 040 151 163 040 155 141 151 156 154 171 040 165 163 145
0017200 146 165 154 040 146 157 162 040 164 145 163 164 151 156 147 040
0017220 167 150 157 154 145 012 040 040 040 040 040 040 057 057 040 160
0017240 162 157 147 162 141 155 163 040 142 171 040 164 150 145 155 163
0017260 145 154 166 145 163 054 040 142 141 163 151 143 141 154 154 171
0017300 056 012 040 040 040 040 040 040 151 146 040 050 162 165 156 164
0017320 151 155 145 113 145 145 160 141 154 151 166 145 103 157 165 156
0017340 164 145 162 051 040 173 012 040 040 040 040 040 040 040 040 164
0017360 150 162 157 167 040 164 157 124 150 162 157 167 073 012 040 040
0017400 040 040 040 040 175 012 040 040 040 040 040 040 154 157 147 105
0017420 170 143 145 160 164 151 157 156 117 156 105 170 151 164 050 164
0017440 157 124 150 162 157 167 051 073 012 040 040 040 040 040 040 161
0017460 165 151 164 050 163 164 141 164 165 163 051 073 012 040 040 040
0017500 040 175 073 012 040 040 175 012 012 040 040 151 146 040 050 164
0017520 171 160 145 157 146 040 160 162 151 156 164 040 041 075 040 047
0017540 165 156 144 145 146 151 156 145 144 047 051 040 173 012 040 040
0017560 040 040 057 057 040 120 162 145 146 145 162 040 164 157 040 165
0017600 163 145 040 160 162 151 156 164 057 160 162 151 156 164 105 162
0017620 162 040 167 150 145 162 145 040 164 150 145 171 040 145 170 151
0017640 163 164 054 040 141 163 040 164 150 145 171 040 165 163 165 141
0017660 154 154 171 040 167 157 162 153 040 142 145 164 164 145 162 056
0017700 012 040 040 040 040 151 146 040 050 164 171 160 145 157 146 040
0017720 143 157 156 163 157 154 145 040 075 075 040 047 165 156 144 145
0017740 146 151 156 145 144 047 051 040 143 157 156 163 157 154 145 040
0017760 075 040 057 052 052 040 100 164 171 160 145 173 041 103 157 156
0020000 163 157 154 145 175 040 052 057 050 173 175 051 073 012 040 040
0020020 040 040 143 157 156 163 157 154 145 056 154 157 147 040 075 040
0020040 057 052 052 040 100 164 171 160 145 173 041 146 165 156 143 164
0020060 151 157 156 050 164 150 151 163 072 103 157 156 163 157 154 145
0020100 054 040 056 056 056 052 051 072 040 165 156 144 145 146 151 156
0020120 145 144 175 040 052 057 040 050 160 162 151 156 164 051 073 012
0020140 040 040 040 040 143 157 156 163 157 154 145 056 167 141 162 156
0020160 040 075 040 143 157 156 163 157 154 145 056 145 162 162 157 162
0020200 040 075 040 057 052 052 040 100 164 171 160 145 173 041 146 165
0020220 156 143 164 151 157 156 050 164 150 151 163 072 103 157 156 163
0020240 157 154 145 054 040 056 056 056 052 051 072 040 165 156 144 145
0020260 146 151 156 145 144 175 040 052 057 040 050 164 171 160 145 157
0020300 146 040 160 162 151 156 164 105 162 162 040 041 075 040 047 165
0020320 156 144 145 146 151 156 145 144 047 040 077 040 160 162 151 156
0020340 164 105 162 162 040 072 040 160 162 151 156 164 051 073 012 040
0020360 040 175 012 012 175 040 145 154 163 145 012 012 057 057 040 116
0020400 157 164 145 040 164 150 141 164 040 164 150 151 163 040 151 156
0020420 143 154 165 144 145 163 040 116 157 144 145 056 152 163 040 167
0020440 157 162 153 145 162 163 040 167 150 145 156 040 162 145 154 145
0020460 166 141 156 164 040 050 160 164 150 162 145 141 144 163 040 151
0020500 163 040 145 156 141 142 154 145 144 051 056 012 057 057 040 116
0020520 157 144 145 056 152 163 040 167 157 162 153 145 162 163 040 141
0020540 162 145 040 144 145 164 145 143 164 145 144 040 141 163 040 141
0020560 040 143 157 155 142 151 156 141 164 151 157 156 040 157 146 040
0020600 105 116 126 111 122 117 116 115 105 116 124 137 111 123 137 127
0020620 117 122 113 105 122 040 141 156 144 012 057 057 040 105 116 126
0020640 111 122 117 116 115 105 116 124 137 111 123 137 116 117 104 105
0020660 056 012 151 146 040 050 105 116 126 111 122 117 116 115 105 116
0020700 124 137 111 123 137 127 105 102 040 174 174 040 105 116 126 111
0020720 122 117 116 115 105 116 124 137 111 123 137 127 117 122 113 105
0020740 122 051 040 173 012 040 040 151 146 040 050 105 116 126 111 122
0020760 117 116 115 105 116 124 137 111 123 137 127 117 122 113 105 122
0021000 051 040 173 040 057 057 040 103 150 145 143 153 040 167 157 162
0021020 153 145 162 054 040 156 157 164 040 167 145 142 054 040 163 151
0021040 156 143 145 040 167 151 156 144 157 167 040 143 157 165 154 144
0021060 040 142 145 040 160 157 154 171 146 151 154 154 145 144 012 040
0021100 040 040 040 163 143 162 151 160 164 104 151 162 145 143 164 157
0021120 162 171 040 075 040 163 145 154 146 056 154 157 143 141 164 151
0021140 157 156 056 150 162 145 146 073 012 040 040 175 040 145 154 163
0021160 145 040 151 146 040 050 164 171 160 145 157 146 040 144 157 143
0021200 165 155 145 156 164 040 041 075 040 047 165 156 144 145 146 151
0021220 156 145 144 047 040 046 046 040 144 157 143 165 155 145 156 164
0021240 056 143 165 162 162 145 156 164 123 143 162 151 160 164 051 040
0021260 173 040 057 057 040 167 145 142 012 040 040 040 040 163 143 162
0021300 151 160 164 104 151 162 145 143 164 157 162 171 040 075 040 144
0021320 157 143 165 155 145 156 164 056 143 165 162 162 145 156 164 123
0021340 143 162 151 160 164 056 163 162 143 073 012 040 040 175 012 040
0021360 040 057 057 040 142 154 157 142 040 165 162 154 163 040 154 157
0021400 157 153 040 154 151 153 145 040 142 154 157 142 072 150 164 164
0021420 160 072 057 057 163 151 164 145 056 143 157 155 057 145 164 143
0021440 057 145 164 143 040 141 156 144 040 167 145 040 143 141 156 156
0021460 157 164 040 151 156 146 145 162 040 141 156 171 164 150 151 156
0021500 147 040 146 162 157 155 040 164 150 145 155 056 012 040 040 057
0021520 057 040 157 164 150 145 162 167 151 163 145 054 040 163 154 151
0021540 143 145 040 157 146 146 040 164 150 145 040 146 151 156 141 154
0021560 040 160 141 162 164 040 157 146 040 164 150 145 040 165 162 154
0021600 040 164 157 040 146 151 156 144 040 164 150 145 040 163 143 162
0021620 151 160 164 040 144 151 162 145 143 164 157 162 171 056 012 040
0021640 040 057 057 040 151 146 040 163 143 162 151 160 164 104 151 162
0021660 145 143 164 157 162 171 040 144 157 145 163 040 156 157 164 040
0021700 143 157 156 164 141 151 156 040 141 040 163 154 141 163 150 054
0021720 040 154 141 163 164 111 156 144 145 170 117 146 040 167 151 154
0021740 154 040 162 145 164 165 162 156 040 055 061 054 012 040 040 057
0021760 057 040 141 156 144 040 163 143 162 151 160 164 104 151 162 145
0022000 143 164 157 162 171 040 167 151 154 154 040 143 157 162 162 145
0022020 143 164 154 171 040 142 145 040 162 145 160 154 141 143 145 144
0022040 040 167 151 164 150 040 141 156 040 145 155 160 164 171 040 163
0022060 164 162 151 156 147 056 012 040 040 057 057 040 111 146 040 163
0022100 143 162 151 160 164 104 151 162 145 143 164 157 162 171 040 143
0022120 157 156 164 141 151 156 163 040 141 040 161 165 145 162 171 040
0022140 050 163 164 141 162 164 151 156 147 040 167 151 164 150 040 077
0022160 051 040 157 162 040 141 040 146 162 141 147 155 145 156 164 040
0022200 050 163 164 141 162 164 151 156 147 040 167 151 164 150 040 043
0022220 051 054 012 040 040 057 057 040 164 150 145 171 040 141 162 145
0022240 040 162 145 155 157 166 145 144 040 142 145 143 141 165 163 145
0022260 040 164 150 145 171 040 143 157 165 154 144 040 143 157 156 164
0022300 141 151 156 040 141 040 163 154 141 163 150 056 012 040 040 151
0022320 146 040 050 163 143 162 151 160 164 104 151 162 145 143 164 157
0022340 162 171 056 151 156 144 145 170 117 146 050 047 142 154 157 142
0022360 072 047 051 040 041 075 075 040 060 051 040 173 012 040 040 040
0022400 040 163 143 162 151 160 164 104 151 162 145 143 164 157 162 171
0022420 040 075 040 163 143 162 151 160 164 104 151 162 145 143 164 157
0022440 162 171 056 163 165 142 163 164 162 050 060 054 040 163 143 162
0022460 151 160 164 104 151 162 145 143 164 157 162 171 056 162 145 160
0022500 154 141 143 145 050 057 133 077 043 135 056 052 057 054 040 042
0022520 042 051 056 154 141 163 164 111 156 144 145 170 117 146 050 047
0022540 057 047 051 053 061 051 073 012 040 040 175 040 145 154 163 145
0022560 040 173 012 040 040 040 040 163 143 162 151 160 164 104 151 162
0022600 145 143 164 157 162 171 040 075 040 047 047 073 012 040 040 175
0022620 012 012 040 040 151 146 040 050 041 050 164 171 160 145 157 146
0022640 040 167 151 156 144 157 167 040 075 075 040 047 157 142 152 145
0022660 143 164 047 040 174 174 040 164 171 160 145 157 146 040 151 155
0022700 160 157 162 164 123 143 162 151 160 164 163 040 075 075 040 047
0022720 146 165 156 143 164 151 157 156 047 051 051 040 164 150 162 157
0022740 167 040 156 145 167 040 105 162 162 157 162 050 047 156 157 164
0022760 040 143 157 155 160 151 154 145 144 040 146 157 162 040 164 150
0023000 151 163 040 145 156 166 151 162 157 156 155 145 156 164 040 050
0023020 144 151 144 040 171 157 165 040 142 165 151 154 144 040 164 157
0023040 040 110 124 115 114 040 141 156 144 040 164 162 171 040 164 157
0023060 040 162 165 156 040 151 164 040 156 157 164 040 157 156 040 164
0023100 150 145 040 167 145 142 054 040 157 162 040 163 145 164 040 105
0023120 116 126 111 122 117 116 115 105 116 124 040 164 157 040 163 157
0023140 155 145 164 150 151 156 147 040 055 040 154 151 153 145 040 156
0023160 157 144 145 040 055 040 141 156 144 040 162 165 156 040 151 164
0023200 040 163 157 155 145 160 154 141 143 145 040 145 154 163 145 040
0023220 055 040 154 151 153 145 040 157 156 040 164 150 145 040 167 145
0023240 142 077 051 047 051 073 012 012 040 040 057 057 040 104 151 146
0023260 146 145 162 145 156 164 151 141 164 145 040 164 150 145 040 127
0023300 145 142 040 127 157 162 153 145 162 040 146 162 157 155 040 164
0023320 150 145 040 116 157 144 145 040 127 157 162 153 145 162 040 143
0023340 141 163 145 054 040 141 163 040 162 145 141 144 151 156 147 040
0023360 155 165 163 164 012 040 040 057 057 040 142 145 040 144 157 156
0023400 145 040 144 151 146 146 145 162 145 156 164 154 171 056 012 040
0023420 040 173 012 057 057 040 151 156 143 154 165 144 145 072 040 167
0023440 145 142 137 157 162 137 167 157 162 153 145 162 137 163 150 145
0023460 154 154 137 162 145 141 144 056 152 163 012 012 012 040 040 162
0023500 145 141 144 137 040 075 040 050 165 162 154 051 040 075 076 040
0023520 173 012 040 040 040 040 040 040 166 141 162 040 170 150 162 040
0023540 075 040 156 145 167 040 130 115 114 110 164 164 160 122 145 161
0023560 165 145 163 164 050 051 073 012 040 040 040 040 040 040 170 150
0023600 162 056 157 160 145 156 050 047 107 105 124 047 054 040 165 162
0023620 154 054 040 146 141 154 163 145 051 073 012 040 040 040 040 040
0023640 040 170 150 162 056 163 145 156 144 050 156 165 154 154 051 073
0023660 012 040 040 040 040 040 040 162 145 164 165 162 156 040 170 150
0023700 162 056 162 145 163 160 157 156 163 145 124 145 170 164 073 012
0023720 040 040 175 012 012 040 040 151 146 040 050 105 116 126 111 122
0023740 117 116 115 105 116 124 137 111 123 137 127 117 122 113 105 122
0023760 051 040 173 012 040 040 040 040 162 145 141 144 102 151 156 141
0024000 162 171 040 075 040 050 165 162 154 051 040 075 076 040 173 012
0024020 040 040 040 040 040 040 040 040 166 141 162 040 170 150 162 040
0024040 075 040 156 145 167 040 130 115 114 110 164 164 160 122 145 161
0024060 165 145 163 164 050 051 073 012 040 040 040 040 040 040 040 040
0024100 170 150 162 056 157 160 145 156 050 047 107 105 124 047 054 040
0024120 165 162 154 054 040 146 141 154 163 145 051 073 012 040 040 040
0024140 040 040 040 040 040 170 150 162 056 162 145 163 160 157 156 163
0024160 145 124 171 160 145 040 075 040 047 141 162 162 141 171 142 165
0024200 146 146 145 162 047 073 012 040 040 040 040 040 040 040 040 170
0024220 150 162 056 163 145 156 144 050 156 165 154 154 051 073 012 040
0024240 040 040 040 040 040 040 040 162 145 164 165 162 156 040 156 145
0024260 167 040 125 151 156 164 070 101 162 162 141 171 050 057 052 052
0024300 040 100 164 171 160 145 173 041 101 162 162 141 171 102 165 146
0024320 146 145 162 175 040 052 057 050 170 150 162 056 162 145 163 160
0024340 157 156 163 145 051 051 073 012 040 040 040 040 175 073 012 040
0024360 040 175 012 012 040 040 162 145 141 144 101 163 171 156 143 040
0024400 075 040 050 165 162 154 054 040 157 156 154 157 141 144 054 040
0024420 157 156 145 162 162 157 162 051 040 075 076 040 173 012 040 040
0024440 040 040 166 141 162 040 170 150 162 040 075 040 156 145 167 040
0024460 130 115 114 110 164 164 160 122 145 161 165 145 163 164 050 051
0024500 073 012 040 040 040 040 170 150 162 056 157 160 145 156 050 047
0024520 107 105 124 047 054 040 165 162 154 054 040 164 162 165 145 051
0024540 073 012 040 040 040 040 170 150 162 056 162 145 163 160 157 156
0024560 163 145 124 171 160 145 040 075 040 047 141 162 162 141 171 142
0024600 165 146 146 145 162 047 073 012 040 040 040 040 170 150 162 056
0024620 157 156 154 157 141 144 040 075 040 050 051 040 075 076 040 173
0024640 012 040 040 040 040 040 040 151 146 040 050 170 150 162 056 163
0024660 164 141 164 165 163 040 075 075 040 062 060 060 040 174 174 040
0024700 050 170 150 162 056 163 164 141 164 165 163 040 075 075 040 060
0024720 040 046 046 040 170 150 162 056 162 145 163 160 157 156 163 145
0024740 051 051 040 173 040 057 057 040 146 151 154 145 040 125 122 114
0024760 163 040 143 141 156 040 162 145 164 165 162 156 040 060 012 040
0025000 040 040 040 040 040 040 040 157 156 154 157 141 144 050 170 150
0025020 162 056 162 145 163 160 157 156 163 145 051 073 012 040 040 040
0025040 040 040 040 040 040 162 145 164 165 162 156 073 012 040 040 040
0025060 040 040 040 175 012 040 040 040 040 040 040 157 156 145 162 162
0025100 157 162 050 051 073 012 040 040 040 040 175 073 012 040 040 040
0025120 040 170 150 162 056 157 156 145 162 162 157 162 040 075 040 157
0025140 156 145 162 162 157 162 073 012 040 040 040 040 170 150 162 056
0025160 163 145 156 144 050 156 165 154 154 051 073 012 040 040 175 012
0025200 012 057 057 040 145 156 144 040 151 156 143 154 165 144 145 072
0025220 040 167 145 142 137 157 162 137 167 157 162 153 145 162 137 163
0025240 150 145 154 154 137 162 145 141 144 056 152 163 012 040 040 175
0025260 012 012 040 040 163 145 164 127 151 156 144 157 167 124 151 164
0025300 154 145 040 075 040 050 164 151 164 154 145 051 040 075 076 040
0025320 144 157 143 165 155 145 156 164 056 164 151 164 154 145 040 075
0025340 040 164 151 164 154 145 073 012 175 040 145 154 163 145 012 173
0025360 012 040 040 164 150 162 157 167 040 156 145 167 040 105 162 162
0025400 157 162 050 047 145 156 166 151 162 157 156 155 145 156 164 040
0025420 144 145 164 145 143 164 151 157 156 040 145 162 162 157 162 047
0025440 051 073 012 175 012 012 166 141 162 040 157 165 164 040 075 040
0025460 115 157 144 165 154 145 133 047 160 162 151 156 164 047 135 040
0025500 174 174 040 143 157 156 163 157 154 145 056 154 157 147 056 142
0025520 151 156 144 050 143 157 156 163 157 154 145 051 073 012 166 141
0025540 162 040 145 162 162 040 075 040 115 157 144 165 154 145 133 047
0025560 160 162 151 156 164 105 162 162 047 135 040 174 174 040 143 157
0025600 156 163 157 154 145 056 167 141 162 156 056 142 151 156 144 050
0025620 143 157 156 163 157 154 145 051 073 012 012 057 057 040 115 145
0025640 162 147 145 040 142 141 143 153 040 151 156 040 164 150 145 040
0025660 157 166 145 162 162 151 144 145 163 012 117 142 152 145 143 164
0025700 056 141 163 163 151 147 156 050 115 157 144 165 154 145 054 040
0025720 155 157 144 165 154 145 117 166 145 162 162 151 144 145 163 051
0025740 073 012 057 057 040 106 162 145 145 040 164 150 145 040 157 142
0025760 152 145 143 164 040 150 151 145 162 141 162 143 150 171 040 143
0026000 157 156 164 141 151 156 145 144 040 151 156 040 164 150 145 040
0026020 157 166 145 162 162 151 144 145 163 054 040 164 150 151 163 040
0026040 154 145 164 163 040 164 150 145 040 107 103 012 057 057 040 162
0026060 145 143 154 141 151 155 040 144 141 164 141 040 165 163 145 144
0026100 040 145 056 147 056 040 151 156 040 155 145 155 157 162 171 111
0026120 156 151 164 151 141 154 151 172 145 162 122 145 161 165 145 163
0026140 164 054 040 167 150 151 143 150 040 151 163 040 141 040 154 141
0026160 162 147 145 040 164 171 160 145 144 040 141 162 162 141 171 056
0026200 012 155 157 144 165 154 145 117 166 145 162 162 151 144 145 163
0026220 040 075 040 156 165 154 154 073 012 143 150 145 143 153 111 156
0026240 143 157 155 151 156 147 115 157 144 165 154 145 101 120 111 050
0026260 051 073 012 012 057 057 040 105 155 151 164 040 143 157 144 145
0026300 040 164 157 040 150 141 156 144 154 145 040 145 170 160 145 143
0026320 164 145 144 040 166 141 154 165 145 163 040 157 156 040 164 150
0026340 145 040 115 157 144 165 154 145 040 157 142 152 145 143 164 056
0026360 040 124 150 151 163 040 141 160 160 154 151 145 163 040 115 157
0026400 144 165 154 145 056 170 012 057 057 040 164 157 040 164 150 145
0026420 040 160 162 157 160 145 162 040 154 157 143 141 154 040 170 056
0026440 040 124 150 151 163 040 150 141 163 040 164 167 157 040 142 145
0026460 156 145 146 151 164 163 072 040 146 151 162 163 164 054 040 167
0026500 145 040 157 156 154 171 040 145 155 151 164 040 151 164 040 151
0026520 146 040 151 164 040 151 163 012 057 057 040 145 170 160 145 143
0026540 164 145 144 040 164 157 040 141 162 162 151 166 145 054 040 141
0026560 156 144 040 163 145 143 157 156 144 054 040 142 171 040 165 163
0026600 151 156 147 040 141 040 154 157 143 141 154 040 145 166 145 162
0026620 171 167 150 145 162 145 040 145 154 163 145 040 164 150 141 164
0026640 040 143 141 156 040 142 145 012 057 057 040 155 151 156 151 146
0026660 151 145 144 056 012 012 151 146 040 050 115 157 144 165 154 145
0026700 133 047 141 162 147 165 155 145 156 164 163 047 135 051 040 141
0026720 162 147 165 155 145 156 164 163 137 040 075 040 115 157 144 165
0026740 154 145 133 047 141 162 147 165 155 145 156 164 163 047 135 073
0026760 154 145 147 141 143 171 115 157 144 165 154 145 120 162 157 160
0027000 050 047 141 162 147 165 155 145 156 164 163 047 054 040 047 141
0027020 162 147 165 155 145 156 164 163 137 047 051 073 012 012 151 146
0027040 040 050 115 157 144 165 154 145 133 047 164 150 151 163 120 162
0027060 157 147 162 141 155 047 135 051 040 164 150 151 163 120 162 157
0027100 147 162 141 155 040 075 040 115 157 144 165 154 145 133 047 164
0027120 150 151 163 120 162 157 147 162 141 155 047 135 073 154 145 147
0027140 141 143 171 115 157 144 165 154 145 120 162 157 160 050 047 164
0027160 150 151 163 120 162 157 147 162 141 155 047 054 040 047 164 150
0027200 151 163 120 162 157 147 162 141 155 047 051 073 012 012 151 146
0027220 040 050 115 157 144 165 154 145 133 047 161 165 151 164 047 135
0027240 051 040 161 165 151 164 137 040 075 040 115 157 144 165 154 145
0027260 133 047 161 165 151 164 047 135 073 154 145 147 141 143 171 115
0027300 157 144 165 154 145 120 162 157 160 050 047 161 165 151 164 047
0027320 054 040 047 161 165 151 164 137 047 051 073 012 012 057 057 040
0027340 160 145 162 146 157 162 155 040 141 163 163 145 162 164 151 157
0027360 156 163 040 151 156 040 163 150 145 154 154 056 152 163 040 141
0027400 146 164 145 162 040 167 145 040 163 145 164 040 165 160 040 157
0027420 165 164 050 051 040 141 156 144 040 145 162 162 050 051 054 040
0027440 141 163 040 157 164 150 145 162 167 151 163 145 040 151 146 040
0027460 141 156 040 141 163 163 145 162 164 151 157 156 040 146 141 151
0027500 154 163 040 151 164 040 143 141 156 156 157 164 040 160 162 151
0027520 156 164 040 164 150 145 040 155 145 163 163 141 147 145 012 057
0027540 057 040 101 163 163 145 162 164 151 157 156 163 040 157 156 040
0027560 162 145 155 157 166 145 144 040 151 156 143 157 155 151 156 147
0027600 040 115 157 144 165 154 145 040 112 123 040 101 120 111 163 056
0027620 012 141 163 163 145 162 164 050 164 171 160 145 157 146 040 115
0027640 157 144 165 154 145 133 047 155 145 155 157 162 171 111 156 151
0027660 164 151 141 154 151 172 145 162 120 162 145 146 151 170 125 122
0027700 114 047 135 040 075 075 040 047 165 156 144 145 146 151 156 145
0027720 144 047 054 040 047 115 157 144 165 154 145 056 155 145 155 157
0027740 162 171 111 156 151 164 151 141 154 151 172 145 162 120 162 145
0027760 146 151 170 125 122 114 040 157 160 164 151 157 156 040 167 141
0030000 163 040 162 145 155 157 166 145 144 054 040 165 163 145 040 115
0030020 157 144 165 154 145 056 154 157 143 141 164 145 106 151 154 145
0030040 040 151 156 163 164 145 141 144 047 051 073 012 141 163 163 145
0030060 162 164 050 164 171 160 145 157 146 040 115 157 144 165 154 145
0030100 133 047 160 164 150 162 145 141 144 115 141 151 156 120 162 145
0030120 146 151 170 125 122 114 047 135 040 075 075 040 047 165 156 144
0030140 145 146 151 156 145 144 047 054 040 047 115 157 144 165 154 145
0030160 056 160 164 150 162 145 141 144 115 141 151 156 120 162 145 146
0030200 151 170 125 122 114 040 157 160 164 151 157 156 040 167 141 163
0030220 040 162 145 155 157 166 145 144 054 040 165 163 145 040 115 157
0030240 144 165 154 145 056 154 157 143 141 164 145 106 151 154 145 040
0030260 151 156 163 164 145 141 144 047 051 073 012 141 163 163 145 162
0030300 164 050 164 171 160 145 157 146 040 115 157 144 165 154 145 133
0030320 047 143 144 111 156 151 164 151 141 154 151 172 145 162 120 162
0030340 145 146 151 170 125 122 114 047 135 040 075 075 040 047 165 156
0030360 144 145 146 151 156 145 144 047 054 040 047 115 157 144 165 154
0030400 145 056 143 144 111 156 151 164 151 141 154 151 172 145 162 120
0030420 162 145 146 151 170 125 122 114 040 157 160 164 151 157 156 040
0030440 167 141 163 040 162 145 155 157 166 145 144 054 040 165 163 145
0030460 040 115 157 144 165 154 145 056 154 157 143 141 164 145 106 151
0030500 154 145 040 151 156 163 164 145 141 144 047 051 073 012 141 163
0030520 163 145 162 164 050 164 171 160 145 157 146 040 115 157 144 165
0030540 154 145 133 047 146 151 154 145 120 141 143 153 141 147 145 120
0030560 162 145 146 151 170 125 122 114 047 135 040 075 075 040 047 165
0030600 156 144 145 146 151 156 145 144 047 054 040 047 115 157 144 165
0030620 154 145 056 146 151 154 145 120 141 143 153 141 147 145 120 162
0030640 145 146 151 170 125 122 114 040 157 160 164 151 157 156 040 167
0030660 141 163 040 162 145 155 157 166 145 144 054 040 165 163 145 040
0030700 115 157 144 165 154 145 056 154 157 143 141 164 145 106 151 154
0030720 145 040 151 156 163 164 145 141 144 047 051 073 012 141 163 163
0030740 145 162 164 050 164 171 160 145 157 146 040 115 157 144 165 154
0030760 145 133 047 162 145 141 144 047 135 040 075 075 040 047 165 156
0031000 144 145 146 151 156 145 144 047 054 040 047 115 157 144 165 154
0031020 145 056 162 145 141 144 040 157 160 164 151 157 156 040 167 141
0031040 163 040 162 145 155 157 166 145 144 040 050 155 157 144 151 146
0031060 171 040 162 145 141 144 137 040 151 156 040 112 123 051 047 051
0031100 073 012 141 163 163 145 162 164 050 164 171 160 145 157 146 040
0031120 115 157 144 165 154 145 133 047 162 145 141 144 101 163 171 156
0031140 143 047 135 040 075 075 040 047 165 156 144 145 146 151 156 145
0031160 144 047 054 040 047 115 157 144 165 154 145 056 162 145 141 144
0031200 101 163 171 156 143 040 157 160 164 151 157 156 040 167 141 163
0031220 040 162 145 155 157 166 145 144 040 050 155 157 144 151 146 171
0031240 040 162 145 141 144 101 163 171 156 143 040 151 156 040 112 123
0031260 051 047 051 073 012 141 163 163 145 162 164 050 164 171 160 145
0031300 157 146 040 115 157 144 165 154 145 133 047 162 145 141 144 102
0031320 151 156 141 162 171 047 135 040 075 075 040 047 165 156 144 145
0031340 146 151 156 145 144 047 054 040 047 115 157 144 165 154 145 056
0031360 162 145 141 144 102 151 156 141 162 171 040 157 160 164 151 157
0031400 156 040 167 141 163 040 162 145 155 157 166 145 144 040 050 155
0031420 157 144 151 146 171 040 162 145 141 144 102 151 156 141 162 171
0031440 040 151 156 040 112 123 051 047 051 073 012 141 163 163 145 162
0031460 164 050 164 171 160 145 157 146 040 115 157 144 165 154 145 133
0031500 047 163 145 164 127 151 156 144 157 167 124 151 164 154 145 047
0031520 135 040 075 075 040 047 165 156 144 145 146 151 156 145 144 047
0031540 054 040 047 115 157 144 165 154 145 056 163 145 164 127 151 156
0031560 144 157 167 124 151 164 154 145 040 157 160 164 151 157 156 040
0031600 167 141 163 040 162 145 155 157 166 145 144 040 050 155 157 144
0031620 151 146 171 040 163 145 164 127 151 156 144 157 167 124 151 164
0031640 154 145 040 151 156 040 112 123 051 047 051 073 012 141 163 163
0031660 145 162 164 050 164 171 160 145 157 146 040 115 157 144 165 154
0031700 145 133 047 124 117 124 101 114 137 115 105 115 117 122 131 047
0031720 135 040 075 075 040 047 165 156 144 145 146 151 156 145 144 047
0031740 054 040 047 115 157 144 165 154 145 056 124 117 124 101 114 137
0031760 115 105 115 117 122 131 040 150 141 163 040 142 145 145 156 040
0032000 162 145 156 141 155 145 144 040 115 157 144 165 154 145 056 111
0032020 116 111 124 111 101 114 137 115 105 115 117 122 131 047 051 073
0032040 012 154 145 147 141 143 171 115 157 144 165 154 145 120 162 157
0032060 160 050 047 162 145 141 144 047 054 040 047 162 145 141 144 137
0032100 047 051 073 012 154 145 147 141 143 171 115 157 144 165 154 145
0032120 120 162 157 160 050 047 162 145 141 144 101 163 171 156 143 047
0032140 054 040 047 162 145 141 144 101 163 171 156 143 047 051 073 012
0032160 154 145 147 141 143 171 115 157 144 165 154 145 120 162 157 160
0032200 050 047 162 145 141 144 102 151 156 141 162 171 047 054 040 047
0032220 162 145 141 144 102 151 156 141 162 171 047 051 073 012 154 145
0032240 147 141 143 171 115 157 144 165 154 145 120 162 157 160 050 047
0032260 163 145 164 127 151 156 144 157 167 124 151 164 154 145 047 054
0032300 040 047 163 145 164 127 151 156 144 157 167 124 151 164 154 145
0032320 047 051 073 012 166 141 162 040 111 104 102 106 123 040 075 040
0032340 047 111 104 102 106 123 040 151 163 040 156 157 040 154 157 156
0032360 147 145 162 040 151 156 143 154 165 144 145 144 040 142 171 040
0032400 144 145 146 141 165 154 164 073 040 142 165 151 154 144 040 167
0032420 151 164 150 040 055 154 151 144 142 146 163 056 152 163 047 073
0032440 012 166 141 162 040 120 122 117 130 131 106 123 040 075 040 047
0032460 120 122 117 130 131 106 123 040 151 163 040 156 157 040 154 157
0032500 156 147 145 162 040 151 156 143 154 165 144 145 144 040 142 171
0032520 040 144 145 146 141 165 154 164 073 040 142 165 151 154 144 040
0032540 167 151 164 150 040 055 154 160 162 157 170 171 146 163 056 152
0032560 163 047 073 012 166 141 162 040 127 117 122 113 105 122 106 123
0032600 040 075 040 047 127 117 122 113 105 122 106 123 040 151 163 040
0032620 156 157 040 154 157 156 147 145 162 040 151 156 143 154 165 144
0032640 145 144 040 142 171 040 144 145 146 141 165 154 164 073 040 142
0032660 165 151 154 144 040 167 151 164 150 040 055 154 167 157 162 153
0032700 145 162 146 163 056 152 163 047 073 012 012 141 163 163 145 162
0032720 164 050 041 105 116 126 111 122 117 116 115 105 116 124 137 111
0032740 123 137 123 110 105 114 114 054 040 042 163 150 145 154 154 040
0032760 145 156 166 151 162 157 156 155 145 156 164 040 144 145 164 145
0033000 143 164 145 144 040 142 165 164 040 156 157 164 040 145 156 141
0033020 142 154 145 144 040 141 164 040 142 165 151 154 144 040 164 151
0033040 155 145 056 040 040 101 144 144 040 047 163 150 145 154 154 047
0033060 040 164 157 040 140 055 163 105 116 126 111 122 117 116 115 105
0033100 116 124 140 040 164 157 040 145 156 141 142 154 145 056 042 051
0033120 073 012 012 012 012 012 166 141 162 040 123 124 101 103 113 137
0033140 101 114 111 107 116 040 075 040 061 066 073 012 166 141 162 040
0033160 120 117 111 116 124 105 122 137 123 111 132 105 040 075 040 064
0033200 073 012 012 146 165 156 143 164 151 157 156 040 147 145 164 116
0033220 141 164 151 166 145 124 171 160 145 123 151 172 145 050 164 171
0033240 160 145 051 040 173 012 040 040 163 167 151 164 143 150 040 050
0033260 164 171 160 145 051 040 173 012 040 040 040 040 143 141 163 145
0033300 040 047 151 061 047 072 040 143 141 163 145 040 047 151 070 047
0033320 072 040 143 141 163 145 040 047 165 070 047 072 040 162 145 164
0033340 165 162 156 040 061 073 012 040 040 040 040 143 141 163 145 040
0033360 047 151 061 066 047 072 040 143 141 163 145 040 047 165 061 066
0033400 047 072 040 162 145 164 165 162 156 040 062 073 012 040 040 040
0033420 040 143 141 163 145 040 047 151 063 062 047 072 040 143 141 163
0033440 145 040 047 165 063 062 047 072 040 162 145 164 165 162 156 040
0033460 064 073 012 040 040 040 040 143 141 163 145 040 047 151 066 064
0033500 047 072 040 143 141 163 145 040 047 165 066 064 047 072 040 162
0033520 145 164 165 162 156 040 070 073 012 040 040 040 040 143 141 163
0033540 145 040 047 146 154 157 141 164 047 072 040 162 145 164 165 162
0033560 156 040 064 073 012 040 040 040 040 143 141 163 145 040 047 144
0033600 157 165 142 154 145 047 072 040 162 145 164 165 162 156 040 070
0033620 073 012 040 040 040 040 144 145 146 141 165 154 164 072 040 173
0033640 012 040 040 040 040 040 040 151 146 040 050 164 171 160 145 133
0033660 164 171 160 145 056 154 145 156 147 164 150 040 055 040 061 135
0033700 040 075 075 075 040 047 052 047 051 040 173 012 040 040 040 040
0033720 040 040 040 040 162 145 164 165 162 156 040 120 117 111 116 124
0033740 105 122 137 123 111 132 105 073 012 040 040 040 040 040 040 175
0033760 012 040 040 040 040 040 040 151 146 040 050 164 171 160 145 133
0034000 060 135 040 075 075 075 040 047 151 047 051 040 173 012 040 040
0034020 040 040 040 040 040 040 143 157 156 163 164 040 142 151 164 163
0034040 040 075 040 116 165 155 142 145 162 050 164 171 160 145 056 163
0034060 165 142 163 164 162 050 061 051 051 073 012 040 040 040 040 040
0034100 040 040 040 141 163 163 145 162 164 050 142 151 164 163 040 045
0034120 040 070 040 075 075 075 040 060 054 040 047 147 145 164 116 141
0034140 164 151 166 145 124 171 160 145 123 151 172 145 040 151 156 166
0034160 141 154 151 144 040 142 151 164 163 040 047 040 053 040 142 151
0034200 164 163 040 053 040 047 054 040 164 171 160 145 040 047 040 053
0034220 040 164 171 160 145 051 073 012 040 040 040 040 040 040 040 040
0034240 162 145 164 165 162 156 040 142 151 164 163 040 057 040 070 073
0034260 012 040 040 040 040 040 040 175 012 040 040 040 040 040 040 162
0034300 145 164 165 162 156 040 060 073 012 040 040 040 040 175 012 040
0034320 040 175 012 175 012 012 057 057 040 151 156 143 154 165 144 145
0034340 072 040 162 165 156 164 151 155 145 137 144 145 142 165 147 056
0034360 152 163 012 012 012 146 165 156 143 164 151 157 156 040 154 145
0034400 147 141 143 171 115 157 144 165 154 145 120 162 157 160 050 160
0034420 162 157 160 054 040 156 145 167 116 141 155 145 051 040 173 012
0034440 040 040 151 146 040 050 041 117 142 152 145 143 164 056 147 145
0034460 164 117 167 156 120 162 157 160 145 162 164 171 104 145 163 143
0034500 162 151 160 164 157 162 050 115 157 144 165 154 145 054 040 160
0034520 162 157 160 051 051 040 173 012 040 040 040 040 117 142 152 145
0034540 143 164 056 144 145 146 151 156 145 120 162 157 160 145 162 164
0034560 171 050 115 157 144 165 154 145 054 040 160 162 157 160 054 040
0034600 173 012 040 040 040 040 040 040 143 157 156 146 151 147 165 162
0034620 141 142 154 145 072 040 164 162 165 145 054 012 040 040 040 040
0034640 040 040 147 145 164 072 040 146 165 156 143 164 151 157 156 050
0034660 051 040 173 012 040 040 040 040 040 040 040 040 141 142 157 162
0034700 164 050 047 115 157 144 165 154 145 056 047 040 053 040 160 162
0034720 157 160 040 053 040 047 040 150 141 163 040 142 145 145 156 040
0034740 162 145 160 154 141 143 145 144 040 167 151 164 150 040 160 154
0034760 141 151 156 040 047 040 053 040 156 145 167 116 141 155 145 040
0035000 053 040 047 040 050 164 150 145 040 151 156 151 164 151 141 154
0035020 040 166 141 154 165 145 040 143 141 156 040 142 145 040 160 162
0035040 157 166 151 144 145 144 040 157 156 040 115 157 144 165 154 145
0035060 054 040 142 165 164 040 141 146 164 145 162 040 163 164 141 162
0035100 164 165 160 040 164 150 145 040 166 141 154 165 145 040 151 163
0035120 040 157 156 154 171 040 154 157 157 153 145 144 040 146 157 162
0035140 040 157 156 040 141 040 154 157 143 141 154 040 166 141 162 151
0035160 141 142 154 145 040 157 146 040 164 150 141 164 040 156 141 155
0035200 145 051 047 051 073 012 040 040 040 040 040 040 175 012 040 040
0035220 040 040 175 051 073 012 040 040 175 012 175 012 012 146 165 156
0035240 143 164 151 157 156 040 151 147 156 157 162 145 144 115 157 144
0035260 165 154 145 120 162 157 160 050 160 162 157 160 051 040 173 012
0035300 040 040 151 146 040 050 117 142 152 145 143 164 056 147 145 164
0035320 117 167 156 120 162 157 160 145 162 164 171 104 145 163 143 162
0035340 151 160 164 157 162 050 115 157 144 165 154 145 054 040 160 162
0035360 157 160 051 051 040 173 012 040 040 040 040 141 142 157 162 164
0035400 050 047 140 115 157 144 165 154 145 056 047 040 053 040 160 162
0035420 157 160 040 053 040 047 140 040 167 141 163 040 163 165 160 160
0035440 154 151 145 144 040 142 165 164 040 140 047 040 053 040 160 162
0035460 157 160 040 053 040 047 140 040 156 157 164 040 151 156 143 154
0035500 165 144 145 144 040 151 156 040 111 116 103 117 115 111 116 107
0035520 137 115 117 104 125 114 105 137 112 123 137 101 120 111 047 051
0035540 073 012 040 040 175 012 175 012 012 057 057 040 146 157 162 143
0035560 151 156 147 040 164 150 145 040 146 151 154 145 163 171 163 164
0035600 145 155 040 145 170 160 157 162 164 163 040 141 040 146 145 167
0035620 040 164 150 151 156 147 163 040 142 171 040 144 145 146 141 165
0035640 154 164 012 146 165 156 143 164 151 157 156 040 151 163 105 170
0035660 160 157 162 164 145 144 102 171 106 157 162 143 145 106 151 154
0035700 145 163 171 163 164 145 155 050 156 141 155 145 051 040 173 012
0035720 040 040 162 145 164 165 162 156 040 156 141 155 145 040 075 075
0035740 075 040 047 106 123 137 143 162 145 141 164 145 120 141 164 150
0035760 047 040 174 174 012 040 040 040 040 040 040 040 040 040 156 141
0036000 155 145 040 075 075 075 040 047 106 123 137 143 162 145 141 164
0036020 145 104 141 164 141 106 151 154 145 047 040 174 174 012 040 040
0036040 040 040 040 040 040 040 040 156 141 155 145 040 075 075 075 040
0036060 047 106 123 137 143 162 145 141 164 145 120 162 145 154 157 141
0036100 144 145 144 106 151 154 145 047 040 174 174 012 040 040 040 040
0036120 040 040 040 040 040 156 141 155 145 040 075 075 075 040 047 106
0036140 123 137 165 156 154 151 156 153 047 040 174 174 012 040 040 040
0036160 040 040 040 040 040 040 156 141 155 145 040 075 075 075 040 047
0036200 141 144 144 122 165 156 104 145 160 145 156 144 145 156 143 171
0036220 047 040 174 174 012 040 040 040 040 040 040 040 040 040 057 057
0036240 040 124 150 145 040 157 154 144 040 106 123 040 150 141 163 040
0036260 163 157 155 145 040 146 165 156 143 164 151 157 156 141 154 151
0036300 164 171 040 164 150 141 164 040 127 141 163 155 106 123 040 154
0036320 141 143 153 163 056 012 040 040 040 040 040 040 040 040 040 156
0036340 141 155 145 040 075 075 075 040 047 106 123 137 143 162 145 141
0036360 164 145 114 141 172 171 106 151 154 145 047 040 174 174 012 040
0036400 040 040 040 040 040 040 040 040 156 141 155 145 040 075 075 075
0036420 040 047 106 123 137 143 162 145 141 164 145 104 145 166 151 143
0036440 145 047 040 174 174 012 040 040 040 040 040 040 040 040 040 156
0036460 141 155 145 040 075 075 075 040 047 162 145 155 157 166 145 122
0036500 165 156 104 145 160 145 156 144 145 156 143 171 047 073 012 175
0036520 012 012 146 165 156 143 164 151 157 156 040 155 151 163 163 151
0036540 156 147 114 151 142 162 141 162 171 123 171 155 142 157 154 050
0036560 163 171 155 051 040 173 012 040 040 151 146 040 050 164 171 160
0036600 145 157 146 040 147 154 157 142 141 154 124 150 151 163 040 041
0036620 075 075 040 047 165 156 144 145 146 151 156 145 144 047 040 046
0036640 046 040 041 117 142 152 145 143 164 056 147 145 164 117 167 156
0036660 120 162 157 160 145 162 164 171 104 145 163 143 162 151 160 164
0036700 157 162 050 147 154 157 142 141 154 124 150 151 163 054 040 163
0036720 171 155 051 051 040 173 012 040 040 040 040 117 142 152 145 143
0036740 164 056 144 145 146 151 156 145 120 162 157 160 145 162 164 171
0036760 050 147 154 157 142 141 154 124 150 151 163 054 040 163 171 155
0037000 054 040 173 012 040 040 040 040 040 040 143 157 156 146 151 147
0037020 165 162 141 142 154 145 072 040 164 162 165 145 054 012 040 040
0037040 040 040 040 040 147 145 164 072 040 146 165 156 143 164 151 157
0037060 156 050 051 040 173 012 040 040 040 040 040 040 040 040 057 057
0037100 040 103 141 156 047 164 040 140 141 142 157 162 164 050 051 140
0037120 040 150 145 162 145 040 142 145 143 141 165 163 145 040 151 164
0037140 040 167 157 165 154 144 040 142 162 145 141 153 040 143 157 144
0037160 145 040 164 150 141 164 040 144 157 145 163 040 162 165 156 164
0037200 151 155 145 012 040 040 040 040 040 040 040 040 057 057 040 143
0037220 150 145 143 153 163 056 040 040 145 056 147 056 040 140 151 146
0037240 040 050 164 171 160 145 157 146 040 123 104 114 040 075 075 075
0037260 040 047 165 156 144 145 146 151 156 145 144 047 051 140 056 012
0037300 040 040 040 040 040 040 040 040 166 141 162 040 155 163 147 040
0037320 075 040 047 140 047 040 053 040 163 171 155 040 053 040 047 140
0037340 040 151 163 040 141 040 154 151 142 162 141 162 171 040 163 171
0037360 155 142 157 154 040 141 156 144 040 156 157 164 040 151 156 143
0037400 154 165 144 145 144 040 142 171 040 144 145 146 141 165 154 164
0037420 073 040 141 144 144 040 151 164 040 164 157 040 171 157 165 162
0037440 040 154 151 142 162 141 162 171 056 152 163 040 137 137 144 145
0037460 160 163 040 157 162 040 164 157 040 104 105 106 101 125 114 124
0037500 137 114 111 102 122 101 122 131 137 106 125 116 103 123 137 124
0037520 117 137 111 116 103 114 125 104 105 040 157 156 040 164 150 145
0037540 040 143 157 155 155 141 156 144 040 154 151 156 145 047 073 012
0037560 040 040 040 040 040 040 040 040 151 146 040 050 151 163 105 170
0037600 160 157 162 164 145 144 102 171 106 157 162 143 145 106 151 154
0037620 145 163 171 163 164 145 155 050 163 171 155 051 051 040 173 012
0037640 040 040 040 040 040 040 040 040 040 040 155 163 147 040 053 075
0037660 040 047 056 040 101 154 164 145 162 156 141 164 151 166 145 154
0037700 171 054 040 146 157 162 143 151 156 147 040 146 151 154 145 163
0037720 171 163 164 145 155 040 163 165 160 160 157 162 164 040 050 055
0037740 163 106 117 122 103 105 137 106 111 114 105 123 131 123 124 105
0037760 115 051 040 143 141 156 040 145 170 160 157 162 164 040 164 150
0040000 151 163 040 146 157 162 040 171 157 165 047 073 012 040 040 040
0040020 040 040 040 040 040 175 012 040 040 040 040 040 040 040 040 167
0040040 141 162 156 117 156 143 145 050 155 163 147 051 073 012 040 040
0040060 040 040 040 040 040 040 162 145 164 165 162 156 040 165 156 144
0040100 145 146 151 156 145 144 073 012 040 040 040 040 040 040 175 012
0040120 040 040 040 040 175 051 073 012 040 040 175 012 175 012 012 146
0040140 165 156 143 164 151 157 156 040 165 156 145 170 160 157 162 164
0040160 145 144 122 165 156 164 151 155 145 123 171 155 142 157 154 050
0040200 163 171 155 051 040 173 012 040 040 151 146 040 050 041 117 142
0040220 152 145 143 164 056 147 145 164 117 167 156 120 162 157 160 145
0040240 162 164 171 104 145 163 143 162 151 160 164 157 162 050 115 157
0040260 144 165 154 145 054 040 163 171 155 051 051 040 173 012 040 040
0040300 040 040 117 142 152 145 143 164 056 144 145 146 151 156 145 120
0040320 162 157 160 145 162 164 171 050 115 157 144 165 154 145 054 040
0040340 163 171 155 054 040 173 012 040 040 040 040 040 040 143 157 156
0040360 146 151 147 165 162 141 142 154 145 072 040 164 162 165 145 054
0040400 012 040 040 040 040 040 040 147 145 164 072 040 146 165 156 143
0040420 164 151 157 156 050 051 040 173 012 040 040 040 040 040 040 040
0040440 040 166 141 162 040 155 163 147 040 075 040 042 047 042 040 053
0040460 040 163 171 155 040 053 040 042 047 040 167 141 163 040 156 157
0040500 164 040 145 170 160 157 162 164 145 144 056 040 141 144 144 040
0040520 151 164 040 164 157 040 105 130 120 117 122 124 105 104 137 122
0040540 125 116 124 111 115 105 137 115 105 124 110 117 104 123 040 050
0040560 163 145 145 040 164 150 145 040 106 101 121 051 042 073 012 040
0040600 040 040 040 040 040 040 040 151 146 040 050 151 163 105 170 160
0040620 157 162 164 145 144 102 171 106 157 162 143 145 106 151 154 145
0040640 163 171 163 164 145 155 050 163 171 155 051 051 040 173 012 040
0040660 040 040 040 040 040 040 040 040 040 155 163 147 040 053 075 040
0040700 047 056 040 101 154 164 145 162 156 141 164 151 166 145 154 171
0040720 054 040 146 157 162 143 151 156 147 040 146 151 154 145 163 171
0040740 163 164 145 155 040 163 165 160 160 157 162 164 040 050 055 163
0040760 106 117 122 103 105 137 106 111 114 105 123 131 123 124 105 115
0041000 051 040 143 141 156 040 145 170 160 157 162 164 040 164 150 151
0041020 163 040 146 157 162 040 171 157 165 047 073 012 040 040 040 040
0041040 040 040 040 040 175 012 040 040 040 040 040 040 040 040 141 142
0041060 157 162 164 050 155 163 147 051 073 012 040 040 040 040 040 040
0041100 175 012 040 040 040 040 175 051 073 012 040 040 175 012 175 012
0041120 012 057 057 040 145 156 144 040 151 156 143 154 165 144 145 072
0041140 040 162 165 156 164 151 155 145 137 144 145 142 165 147 056 152
0041160 163 012 012 012 057 057 040 075 075 075 040 120 162 145 141 155
0041200 142 154 145 040 154 151 142 162 141 162 171 040 163 164 165 146
0041220 146 040 075 075 075 012 012 057 057 040 104 157 143 165 155 145
0041240 156 164 141 164 151 157 156 040 146 157 162 040 164 150 145 040
0041260 160 165 142 154 151 143 040 101 120 111 163 040 144 145 146 151
0041300 156 145 144 040 151 156 040 164 150 151 163 040 146 151 154 145
0041320 040 155 165 163 164 040 142 145 040 165 160 144 141 164 145 144
0041340 040 151 156 072 012 057 057 040 040 040 040 163 151 164 145 057
0041360 163 157 165 162 143 145 057 144 157 143 163 057 141 160 151 137
0041400 162 145 146 145 162 145 156 143 145 057 160 162 145 141 155 142
0041420 154 145 056 152 163 056 162 163 164 012 057 057 040 101 040 160
0041440 162 145 142 165 151 154 164 040 154 157 143 141 154 040 166 145
0041460 162 163 151 157 156 040 157 146 040 164 150 145 040 144 157 143
0041500 165 155 145 156 164 141 164 151 157 156 040 151 163 040 141 166
0041520 141 151 154 141 142 154 145 040 141 164 072 012 057 057 040 040
0041540 040 040 163 151 164 145 057 142 165 151 154 144 057 164 145 170
0041560 164 057 144 157 143 163 057 141 160 151 137 162 145 146 145 162
0041600 145 156 143 145 057 160 162 145 141 155 142 154 145 056 152 163
0041620 056 164 170 164 012 057 057 040 131 157 165 040 143 141 156 040
0041640 141 154 163 157 040 142 165 151 154 144 040 144 157 143 163 040
0041660 154 157 143 141 154 154 171 040 141 163 040 110 124 115 114 040
0041700 157 162 040 157 164 150 145 162 040 146 157 162 155 141 164 163
0041720 040 151 156 040 163 151 164 145 057 012 057 057 040 101 156 040
0041740 157 156 154 151 156 145 040 110 124 115 114 040 166 145 162 163
0041760 151 157 156 040 050 167 150 151 143 150 040 155 141 171 040 142
0042000 145 040 157 146 040 141 040 144 151 146 146 145 162 145 156 164
0042020 040 166 145 162 163 151 157 156 040 157 146 040 105 155 163 143
0042040 162 151 160 164 145 156 051 012 057 057 040 040 040 040 151 163
0042060 040 165 160 040 141 164 040 150 164 164 160 072 057 057 153 162
0042100 151 160 153 145 156 056 147 151 164 150 165 142 056 151 157 057
0042120 145 155 163 143 162 151 160 164 145 156 055 163 151 164 145 057
0042140 144 157 143 163 057 141 160 151 137 162 145 146 145 162 145 156
0042160 143 145 057 160 162 145 141 155 142 154 145 056 152 163 056 150
0042200 164 155 154 012 012 166 141 162 040 167 141 163 155 102 151 156
0042220 141 162 171 073 012 151 146 040 050 115 157 144 165 154 145 133
0042240 047 167 141 163 155 102 151 156 141 162 171 047 135 051 040 167
0042260 141 163 155 102 151 156 141 162 171 040 075 040 115 157 144 165
0042300 154 145 133 047 167 141 163 155 102 151 156 141 162 171 047 135
0042320 073 154 145 147 141 143 171 115 157 144 165 154 145 120 162 157
0042340 160 050 047 167 141 163 155 102 151 156 141 162 171 047 054 040
0042360 047 167 141 163 155 102 151 156 141 162 171 047 051 073 012 166
0042400 141 162 040 156 157 105 170 151 164 122 165 156 164 151 155 145
0042420 040 075 040 115 157 144 165 154 145 133 047 156 157 105 170 151
0042440 164 122 165 156 164 151 155 145 047 135 040 174 174 040 146 141
0042460 154 163 145 073 154 145 147 141 143 171 115 157 144 165 154 145
0042500 120 162 157 160 050 047 156 157 105 170 151 164 122 165 156 164
0042520 151 155 145 047 054 040 047 156 157 105 170 151 164 122 165 156
0042540 164 151 155 145 047 051 073 012 012 151 146 040 050 164 171 160
0042560 145 157 146 040 127 145 142 101 163 163 145 155 142 154 171 040
0042600 041 075 040 047 157 142 152 145 143 164 047 051 040 173 012 040
0042620 040 141 142 157 162 164 050 047 156 157 040 156 141 164 151 166
0042640 145 040 167 141 163 155 040 163 165 160 160 157 162 164 040 144
0042660 145 164 145 143 164 145 144 047 051 073 012 175 012 012 057 057
0042700 040 127 141 163 155 040 147 154 157 142 141 154 163 012 012 166
0042720 141 162 040 167 141 163 155 115 145 155 157 162 171 073 012 012
0042740 057 057 075 075 075 075 075 075 075 075 075 075 075 075 075 075
0042760 075 075 075 075 075 075 075 075 075 075 075 075 075 075 075 075
0043000 075 075 075 075 075 075 075 075 075 075 012 057 057 040 122 165
0043020 156 164 151 155 145 040 145 163 163 145 156 164 151 141 154 163
0043040 012 057 057 075 075 075 075 075 075 075 075 075 075 075 075 075
0043060 075 075 075 075 075 075 075 075 075 075 075 075 075 075 075 075
0043100 075 075 075 075 075 075 075 075 075 075 075 012 012 057 057 040
0043120 167 150 145 164 150 145 162 040 167 145 040 141 162 145 040 161
0043140 165 151 164 164 151 156 147 040 164 150 145 040 141 160 160 154
0043160 151 143 141 164 151 157 156 056 040 156 157 040 143 157 144 145
0043200 040 163 150 157 165 154 144 040 162 165 156 040 141 146 164 145
0043220 162 040 164 150 151 163 056 012 057 057 040 163 145 164 040 151
0043240 156 040 145 170 151 164 050 051 040 141 156 144 040 141 142 157
0043260 162 164 050 051 012 166 141 162 040 101 102 117 122 124 040 075
0043300 040 146 141 154 163 145 073 012 012 057 057 040 163 145 164 040
0043320 142 171 040 145 170 151 164 050 051 040 141 156 144 040 141 142
0043340 157 162 164 050 051 056 040 040 120 141 163 163 145 144 040 164
0043360 157 040 047 157 156 105 170 151 164 047 040 150 141 156 144 154
0043400 145 162 056 012 057 057 040 116 117 124 105 072 040 124 150 151
0043420 163 040 151 163 040 141 154 163 157 040 165 163 145 144 040 141
0043440 163 040 164 150 145 040 160 162 157 143 145 163 163 040 162 145
0043460 164 165 162 156 040 143 157 144 145 040 143 157 144 145 040 151
0043500 156 040 163 150 145 154 154 040 145 156 166 151 162 157 156 155
0043520 145 156 164 163 012 057 057 040 142 165 164 040 157 156 154 171
0043540 040 167 150 145 156 040 156 157 105 170 151 164 122 165 156 164
0043560 151 155 145 040 151 163 040 146 141 154 163 145 056 012 166 141
0043600 162 040 105 130 111 124 123 124 101 124 125 123 073 012 012 057
0043620 052 052 040 100 164 171 160 145 040 173 146 165 156 143 164 151
0043640 157 156 050 052 054 040 163 164 162 151 156 147 075 051 175 040
0043660 052 057 012 146 165 156 143 164 151 157 156 040 141 163 163 145
0043700 162 164 050 143 157 156 144 151 164 151 157 156 054 040 164 145
0043720 170 164 051 040 173 012 040 040 151 146 040 050 041 143 157 156
0043740 144 151 164 151 157 156 051 040 173 012 040 040 040 040 141 142
0043760 157 162 164 050 047 101 163 163 145 162 164 151 157 156 040 146
0044000 141 151 154 145 144 047 040 053 040 050 164 145 170 164 040 077
0044020 040 047 072 040 047 040 053 040 164 145 170 164 040 072 040 047
0044040 047 051 051 073 012 040 040 175 012 175 012 012 057 057 040 127
0044060 145 040 165 163 145 144 040 164 157 040 151 156 143 154 165 144
0044100 145 040 155 141 154 154 157 143 057 146 162 145 145 040 142 171
0044120 040 144 145 146 141 165 154 164 040 151 156 040 164 150 145 040
0044140 160 141 163 164 056 040 123 150 157 167 040 141 040 150 145 154
0044160 160 146 165 154 040 145 162 162 157 162 040 151 156 012 057 057
0044200 040 142 165 151 154 144 163 040 167 151 164 150 040 141 163 163
0044220 145 162 164 151 157 156 163 056 012 146 165 156 143 164 151 157
0044240 156 040 137 155 141 154 154 157 143 050 051 040 173 012 040 040
0044260 141 142 157 162 164 050 042 155 141 154 154 157 143 050 051 040
0044300 143 141 154 154 145 144 040 142 165 164 040 156 157 164 040 151
0044320 156 143 154 165 144 145 144 040 151 156 040 164 150 145 040 142
0044340 165 151 154 144 040 055 040 141 144 144 040 047 137 155 141 154
0044360 154 157 143 047 040 164 157 040 105 130 120 117 122 124 105 104
0044400 137 106 125 116 103 124 111 117 116 123 042 051 073 012 175 012
0044420 146 165 156 143 164 151 157 156 040 137 146 162 145 145 050 051
0044440 040 173 012 040 040 057 057 040 123 150 157 167 040 141 040 150
0044460 145 154 160 146 165 154 040 145 162 162 157 162 040 163 151 156
0044500 143 145 040 167 145 040 165 163 145 144 040 164 157 040 151 156
0044520 143 154 165 144 145 040 146 162 145 145 040 142 171 040 144 145
0044540 146 141 165 154 164 040 151 156 040 164 150 145 040 160 141 163
0044560 164 056 012 040 040 141 142 157 162 164 050 042 146 162 145 145
0044600 050 051 040 143 141 154 154 145 144 040 142 165 164 040 156 157
0044620 164 040 151 156 143 154 165 144 145 144 040 151 156 040 164 150
0044640 145 040 142 165 151 154 144 040 055 040 141 144 144 040 047 137
0044660 146 162 145 145 047 040 164 157 040 105 130 120 117 122 124 105
0044700 104 137 106 125 116 103 124 111 117 116 123 042 051 073 012 175
0044720 012 012 057 057 040 151 156 143 154 165 144 145 072 040 162 165
0044740 156 164 151 155 145 137 163 164 162 151 156 147 163 056 152 163
0044760 012 012 012 057 057 040 162 165 156 164 151 155 145 137 163 164
0045000 162 151 156 147 163 056 152 163 072 040 123 164 162 151 156 147
0045020 163 040 162 145 154 141 164 145 144 040 162 165 156 164 151 155
0045040 145 040 146 165 156 143 164 151 157 156 163 040 164 150 141 164
0045060 040 141 162 145 040 160 141 162 164 040 157 146 040 142 157 164
0045100 150 040 115 111 116 111 115 101 114 137 122 125 116 124 111 115
0045120 105 040 141 156 144 040 162 145 147 165 154 141 162 040 162 165
0045140 156 164 151 155 145 056 012 012 166 141 162 040 125 124 106 070
0045160 104 145 143 157 144 145 162 040 075 040 164 171 160 145 157 146
0045200 040 124 145 170 164 104 145 143 157 144 145 162 040 041 075 040
0045220 047 165 156 144 145 146 151 156 145 144 047 040 077 040 156 145
0045240 167 040 124 145 170 164 104 145 143 157 144 145 162 050 047 165
0045260 164 146 070 047 051 040 072 040 165 156 144 145 146 151 156 145
0045300 144 073 012 012 057 057 040 107 151 166 145 156 040 141 040 160
0045320 157 151 156 164 145 162 040 047 160 164 162 047 040 164 157 040
0045340 141 040 156 165 154 154 055 164 145 162 155 151 156 141 164 145
0045360 144 040 125 124 106 070 055 145 156 143 157 144 145 144 040 163
0045400 164 162 151 156 147 040 151 156 040 164 150 145 040 147 151 166
0045420 145 156 040 141 162 162 141 171 040 164 150 141 164 040 143 157
0045440 156 164 141 151 156 163 040 165 151 156 164 070 040 166 141 154
0045460 165 145 163 054 040 162 145 164 165 162 156 163 012 057 057 040
0045500 141 040 143 157 160 171 040 157 146 040 164 150 141 164 040 163
0045520 164 162 151 156 147 040 141 163 040 141 040 112 141 166 141 163
0045540 143 162 151 160 164 040 123 164 162 151 156 147 040 157 142 152
0045560 145 143 164 056 012 057 052 052 012 040 052 040 150 145 141 160
0045600 117 162 101 162 162 141 171 040 151 163 040 145 151 164 150 145
0045620 162 040 141 040 162 145 147 165 154 141 162 040 141 162 162 141
0045640 171 054 040 157 162 040 141 040 112 141 166 141 123 143 162 151
0045660 160 164 040 164 171 160 145 144 040 141 162 162 141 171 040 166
0045700 151 145 167 056 012 040 052 040 100 160 141 162 141 155 040 173
0045720 156 165 155 142 145 162 175 040 151 144 170 012 040 052 040 100
0045740 160 141 162 141 155 040 173 156 165 155 142 145 162 075 175 040
0045760 155 141 170 102 171 164 145 163 124 157 122 145 141 144 012 040
0046000 052 040 100 162 145 164 165 162 156 040 173 163 164 162 151 156
0046020 147 175 012 040 052 057 012 146 165 156 143 164 151 157 156 040
0046040 125 124 106 070 101 162 162 141 171 124 157 123 164 162 151 156
0046060 147 050 150 145 141 160 117 162 101 162 162 141 171 054 040 151
0046100 144 170 054 040 155 141 170 102 171 164 145 163 124 157 122 145
0046120 141 144 051 040 173 012 040 040 166 141 162 040 145 156 144 111
0046140 144 170 040 075 040 151 144 170 040 053 040 155 141 170 102 171
0046160 164 145 163 124 157 122 145 141 144 073 012 040 040 166 141 162
0046200 040 145 156 144 120 164 162 040 075 040 151 144 170 073 012 040
0046220 040 057 057 040 124 145 170 164 104 145 143 157 144 145 162 040
0046240 156 145 145 144 163 040 164 157 040 153 156 157 167 040 164 150
0046260 145 040 142 171 164 145 040 154 145 156 147 164 150 040 151 156
0046300 040 141 144 166 141 156 143 145 054 040 151 164 040 144 157 145
0046320 163 156 047 164 040 163 164 157 160 040 157 156 040 156 165 154
0046340 154 040 164 145 162 155 151 156 141 164 157 162 040 142 171 040
0046360 151 164 163 145 154 146 056 012 040 040 057 057 040 101 154 163
0046400 157 054 040 165 163 145 040 164 150 145 040 154 145 156 147 164
0046420 150 040 151 156 146 157 040 164 157 040 141 166 157 151 144 040
0046440 162 165 156 156 151 156 147 040 164 151 156 171 040 163 164 162
0046460 151 156 147 163 040 164 150 162 157 165 147 150 040 124 145 170
0046500 164 104 145 143 157 144 145 162 054 040 163 151 156 143 145 040
0046520 056 163 165 142 141 162 162 141 171 050 051 040 141 154 154 157
0046540 143 141 164 145 163 040 147 141 162 142 141 147 145 056 012 040
0046560 040 057 057 040 050 101 163 040 141 040 164 151 156 171 040 143
0046600 157 144 145 040 163 141 166 145 040 164 162 151 143 153 054 040
0046620 143 157 155 160 141 162 145 040 145 156 144 120 164 162 040 141
0046640 147 141 151 156 163 164 040 145 156 144 111 144 170 040 165 163
0046660 151 156 147 040 141 040 156 145 147 141 164 151 157 156 054 040
0046700 163 157 040 164 150 141 164 040 165 156 144 145 146 151 156 145
0046720 144 040 155 145 141 156 163 040 111 156 146 151 156 151 164 171
0046740 051 012 040 040 167 150 151 154 145 040 050 150 145 141 160 117
0046760 162 101 162 162 141 171 133 145 156 144 120 164 162 135 040 046
0047000 046 040 041 050 145 156 144 120 164 162 040 076 075 040 145 156
0047020 144 111 144 170 051 051 040 053 053 145 156 144 120 164 162 073
0047040 012 012 040 040 151 146 040 050 145 156 144 120 164 162 040 055
0047060 040 151 144 170 040 076 040 061 066 040 046 046 040 150 145 141
0047100 160 117 162 101 162 162 141 171 056 142 165 146 146 145 162 040
0047120 046 046 040 125 124 106 070 104 145 143 157 144 145 162 051 040
0047140 173 012 040 040 040 040 162 145 164 165 162 156 040 125 124 106
0047160 070 104 145 143 157 144 145 162 056 144 145 143 157 144 145 050
0047200 150 145 141 160 117 162 101 162 162 141 171 056 163 165 142 141
0047220 162 162 141 171 050 151 144 170 054 040 145 156 144 120 164 162
0047240 051 051 073 012 040 040 175 012 040 040 166 141 162 040 163 164
0047260 162 040 075 040 047 047 073 012 040 040 057 057 040 111 146 040
0047300 142 165 151 154 144 151 156 147 040 167 151 164 150 040 124 145
0047320 170 164 104 145 143 157 144 145 162 054 040 167 145 040 150 141
0047340 166 145 040 141 154 162 145 141 144 171 040 143 157 155 160 165
0047360 164 145 144 040 164 150 145 040 163 164 162 151 156 147 040 154
0047400 145 156 147 164 150 040 141 142 157 166 145 054 040 163 157 040
0047420 164 145 163 164 040 154 157 157 160 040 145 156 144 040 143 157
0047440 156 144 151 164 151 157 156 040 141 147 141 151 156 163 164 040
0047460 164 150 141 164 012 040 040 167 150 151 154 145 040 050 151 144
0047500 170 040 074 040 145 156 144 120 164 162 051 040 173 012 040 040
0047520 040 040 057 057 040 106 157 162 040 125 124 106 070 040 142 171
0047540 164 145 040 163 164 162 165 143 164 165 162 145 054 040 163 145
0047560 145 072 012 040 040 040 040 057 057 040 150 164 164 160 072 057
0047600 057 145 156 056 167 151 153 151 160 145 144 151 141 056 157 162
0047620 147 057 167 151 153 151 057 125 124 106 055 070 043 104 145 163
0047640 143 162 151 160 164 151 157 156 012 040 040 040 040 057 057 040
0047660 150 164 164 160 163 072 057 057 167 167 167 056 151 145 164 146
0047700 056 157 162 147 057 162 146 143 057 162 146 143 062 062 067 071
0047720 056 164 170 164 012 040 040 040 040 057 057 040 150 164 164 160
0047740 163 072 057 057 164 157 157 154 163 056 151 145 164 146 056 157
0047760 162 147 057 150 164 155 154 057 162 146 143 063 066 062 071 012
0050000 040 040 040 040 166 141 162 040 165 060 040 075 040 150 145 141
0050020 160 117 162 101 162 162 141 171 133 151 144 170 053 053 135 073
0050040 012 040 040 040 040 151 146 040 050 041 050 165 060 040 046 040
0050060 060 170 070 060 051 051 040 173 040 163 164 162 040 053 075 040
0050100 123 164 162 151 156 147 056 146 162 157 155 103 150 141 162 103
0050120 157 144 145 050 165 060 051 073 040 143 157 156 164 151 156 165
0050140 145 073 040 175 012 040 040 040 040 166 141 162 040 165 061 040
0050160 075 040 150 145 141 160 117 162 101 162 162 141 171 133 151 144
0050200 170 053 053 135 040 046 040 066 063 073 012 040 040 040 040 151
0050220 146 040 050 050 165 060 040 046 040 060 170 105 060 051 040 075
0050240 075 040 060 170 103 060 051 040 173 040 163 164 162 040 053 075
0050260 040 123 164 162 151 156 147 056 146 162 157 155 103 150 141 162
0050300 103 157 144 145 050 050 050 165 060 040 046 040 063 061 051 040
0050320 074 074 040 066 051 040 174 040 165 061 051 073 040 143 157 156
0050340 164 151 156 165 145 073 040 175 012 040 040 040 040 166 141 162
0050360 040 165 062 040 075 040 150 145 141 160 117 162 101 162 162 141
0050400 171 133 151 144 170 053 053 135 040 046 040 066 063 073 012 040
0050420 040 040 040 151 146 040 050 050 165 060 040 046 040 060 170 106
0050440 060 051 040 075 075 040 060 170 105 060 051 040 173 012 040 040
0050460 040 040 040 040 165 060 040 075 040 050 050 165 060 040 046 040
0050500 061 065 051 040 074 074 040 061 062 051 040 174 040 050 165 061
0050520 040 074 074 040 066 051 040 174 040 165 062 073 012 040 040 040
0050540 040 175 040 145 154 163 145 040 173 012 040 040 040 040 040 040
0050560 151 146 040 050 050 165 060 040 046 040 060 170 106 070 051 040
0050600 041 075 040 060 170 106 060 051 040 167 141 162 156 117 156 143
0050620 145 050 047 111 156 166 141 154 151 144 040 125 124 106 055 070
0050640 040 154 145 141 144 151 156 147 040 142 171 164 145 040 060 170
0050660 047 040 053 040 165 060 056 164 157 123 164 162 151 156 147 050
0050700 061 066 051 040 053 040 047 040 145 156 143 157 165 156 164 145
0050720 162 145 144 040 167 150 145 156 040 144 145 163 145 162 151 141
0050740 154 151 172 151 156 147 040 141 040 125 124 106 055 070 040 163
0050760 164 162 151 156 147 040 151 156 040 167 141 163 155 040 155 145
0051000 155 157 162 171 040 164 157 040 141 040 112 123 040 163 164 162
0051020 151 156 147 041 047 051 073 012 040 040 040 040 040 040 165 060
0051040 040 075 040 050 050 165 060 040 046 040 067 051 040 074 074 040
0051060 061 070 051 040 174 040 050 165 061 040 074 074 040 061 062 051
0051100 040 174 040 050 165 062 040 074 074 040 066 051 040 174 040 050
0051120 150 145 141 160 117 162 101 162 162 141 171 133 151 144 170 053
0051140 053 135 040 046 040 066 063 051 073 012 040 040 040 040 175 012
0051160 012 040 040 040 040 151 146 040 050 165 060 040 074 040 060 170
0051200 061 060 060 060 060 051 040 173 012 040 040 040 040 040 040 163
0051220 164 162 040 053 075 040 123 164 162 151 156 147 056 146 162 157
0051240 155 103 150 141 162 103 157 144 145 050 165 060 051 073 012 040
0051260 040 040 040 175 040 145 154 163 145 040 173 012 040 040 040 040
0051300 040 040 166 141 162 040 143 150 040 075 040 165 060 040 055 040
0051320 060 170 061 060 060 060 060 073 012 040 040 040 040 040 040 163
0051340 164 162 040 053 075 040 123 164 162 151 156 147 056 146 162 157
0051360 155 103 150 141 162 103 157 144 145 050 060 170 104 070 060 060
0051400 040 174 040 050 143 150 040 076 076 040 061 060 051 054 040 060
0051420 170 104 103 060 060 040 174 040 050 143 150 040 046 040 060 170
0051440 063 106 106 051 051 073 012 040 040 040 040 175 012 040 040 175
0051460 012 040 040 162 145 164 165 162 156 040 163 164 162 073 012 175
0051500 012 012 057 057 040 107 151 166 145 156 040 141 040 160 157 151
0051520 156 164 145 162 040 047 160 164 162 047 040 164 157 040 141 040
0051540 156 165 154 154 055 164 145 162 155 151 156 141 164 145 144 040
0051560 125 124 106 070 055 145 156 143 157 144 145 144 040 163 164 162
0051600 151 156 147 040 151 156 040 164 150 145 040 145 155 163 143 162
0051620 151 160 164 145 156 040 110 105 101 120 054 040 162 145 164 165
0051640 162 156 163 040 141 012 057 057 040 143 157 160 171 040 157 146
0051660 040 164 150 141 164 040 163 164 162 151 156 147 040 141 163 040
0051700 141 040 112 141 166 141 163 143 162 151 160 164 040 123 164 162
0051720 151 156 147 040 157 142 152 145 143 164 056 012 057 057 040 155
0051740 141 170 102 171 164 145 163 124 157 122 145 141 144 072 040 141
0051760 156 040 157 160 164 151 157 156 141 154 040 154 145 156 147 164
0052000 150 040 164 150 141 164 040 163 160 145 143 151 146 151 145 163
0052020 040 164 150 145 040 155 141 170 151 155 165 155 040 156 165 155
0052040 142 145 162 040 157 146 040 142 171 164 145 163 040 164 157 040
0052060 162 145 141 144 056 040 131 157 165 040 143 141 156 040 157 155
0052100 151 164 012 057 057 040 040 040 040 040 040 040 040 040 040 040
0052120 040 040 040 040 040 040 164 150 151 163 040 160 141 162 141 155
0052140 145 164 145 162 040 164 157 040 163 143 141 156 040 164 150 145
0052160 040 163 164 162 151 156 147 040 165 156 164 151 154 040 164 150
0052200 145 040 146 151 162 163 164 040 134 060 040 142 171 164 145 056
0052220 040 111 146 040 155 141 170 102 171 164 145 163 124 157 122 145
0052240 141 144 040 151 163 012 057 057 040 040 040 040 040 040 040 040
0052260 040 040 040 040 040 040 040 040 040 160 141 163 163 145 144 054
0052300 040 141 156 144 040 164 150 145 040 163 164 162 151 156 147 040
0052320 141 164 040 133 160 164 162 054 040 160 164 162 053 155 141 170
0052340 102 171 164 145 163 124 157 122 145 141 144 162 133 040 143 157
0052360 156 164 141 151 156 163 040 141 040 156 165 154 154 040 142 171
0052400 164 145 040 151 156 040 164 150 145 012 057 057 040 040 040 040
0052420 040 040 040 040 040 040 040 040 040 040 040 040 040 155 151 144
0052440 144 154 145 054 040 164 150 145 156 040 164 150 145 040 163 164
0052460 162 151 156 147 040 167 151 154 154 040 143 165 164 040 163 150
0052500 157 162 164 040 141 164 040 164 150 141 164 040 142 171 164 145
0052520 040 151 156 144 145 170 040 050 151 056 145 056 040 155 141 170
0052540 102 171 164 145 163 124 157 122 145 141 144 040 167 151 154 154
0052560 012 057 057 040 040 040 040 040 040 040 040 040 040 040 040 040
0052600 040 040 040 040 156 157 164 040 160 162 157 144 165 143 145 040
0052620 141 040 163 164 162 151 156 147 040 157 146 040 145 170 141 143
0052640 164 040 154 145 156 147 164 150 040 133 160 164 162 054 040 160
0052660 164 162 053 155 141 170 102 171 164 145 163 124 157 122 145 141
0052700 144 133 051 012 057 057 040 040 040 040 040 040 040 040 040 040
0052720 040 040 040 040 040 040 040 116 056 102 056 040 155 151 170 151
0052740 156 147 040 146 162 145 161 165 145 156 164 040 165 163 145 163
0052760 040 157 146 040 125 124 106 070 124 157 123 164 162 151 156 147
0053000 050 051 040 167 151 164 150 040 141 156 144 040 167 151 164 150
0053020 157 165 164 040 155 141 170 102 171 164 145 163 124 157 122 145
0053040 141 144 040 155 141 171 012 057 057 040 040 040 040 040 040 040
0053060 040 040 040 040 040 040 040 040 040 040 164 150 162 157 167 040
0053100 112 123 040 112 111 124 040 157 160 164 151 155 151 172 141 164
0053120 151 157 156 163 040 157 146 146 054 040 163 157 040 151 164 040
0053140 151 163 040 167 157 162 164 150 040 164 157 040 143 157 156 163
0053160 151 144 145 162 040 143 157 156 163 151 163 164 145 156 164 154
0053200 171 040 165 163 151 156 147 040 157 156 145 012 057 057 040 040
0053220 040 040 040 040 040 040 040 040 040 040 040 040 040 040 040 163
0053240 164 171 154 145 040 157 162 040 164 150 145 040 157 164 150 145
0053260 162 056 012 057 052 052 012 040 052 040 100 160 141 162 141 155
0053300 040 173 156 165 155 142 145 162 175 040 160 164 162 012 040 052
0053320 040 100 160 141 162 141 155 040 173 156 165 155 142 145 162 075
0053340 175 040 155 141 170 102 171 164 145 163 124 157 122 145 141 144
0053360 012 040 052 040 100 162 145 164 165 162 156 040 173 163 164 162
0053400 151 156 147 175 012 040 052 057 012 146 165 156 143 164 151 157
0053420 156 040 125 124 106 070 124 157 123 164 162 151 156 147 050 160
0053440 164 162 054 040 155 141 170 102 171 164 145 163 124 157 122 145
0053460 141 144 051 040 173 012 040 040 162 145 164 165 162 156 040 160
0053500 164 162 040 077 040 125 124 106 070 101 162 162 141 171 124 157
0053520 123 164 162 151 156 147 050 110 105 101 120 125 070 054 040 160
0053540 164 162 054 040 155 141 170 102 171 164 145 163 124 157 122 145
0053560 141 144 051 040 072 040 047 047 073 012 175 012 012 057 057 040
0053600 103 157 160 151 145 163 040 164 150 145 040 147 151 166 145 156
0053620 040 112 141 166 141 163 143 162 151 160 164 040 123 164 162 151
0053640 156 147 040 157 142 152 145 143 164 040 047 163 164 162 047 040
0053660 164 157 040 164 150 145 040 147 151 166 145 156 040 142 171 164
0053700 145 040 141 162 162 141 171 040 141 164 040 141 144 144 162 145
0053720 163 163 040 047 157 165 164 111 144 170 047 054 012 057 057 040
0053740 145 156 143 157 144 145 144 040 151 156 040 125 124 106 070 040
0053760 146 157 162 155 040 141 156 144 040 156 165 154 154 055 164 145
0054000 162 155 151 156 141 164 145 144 056 040 124 150 145 040 143 157
0054020 160 171 040 167 151 154 154 040 162 145 161 165 151 162 145 040
0054040 141 164 040 155 157 163 164 040 163 164 162 056 154 145 156 147
0054060 164 150 052 064 053 061 040 142 171 164 145 163 040 157 146 040
0054100 163 160 141 143 145 040 151 156 040 164 150 145 040 110 105 101
0054120 120 056 012 057 057 040 125 163 145 040 164 150 145 040 146 165
0054140 156 143 164 151 157 156 040 154 145 156 147 164 150 102 171 164
0054160 145 163 125 124 106 070 040 164 157 040 143 157 155 160 165 164
0054200 145 040 164 150 145 040 145 170 141 143 164 040 156 165 155 142
0054220 145 162 040 157 146 040 142 171 164 145 163 040 050 145 170 143
0054240 154 165 144 151 156 147 040 156 165 154 154 040 164 145 162 155
0054260 151 156 141 164 157 162 051 040 164 150 141 164 040 164 150 151
0054300 163 040 146 165 156 143 164 151 157 156 040 167 151 154 154 040
0054320 167 162 151 164 145 056 012 057 057 040 120 141 162 141 155 145
0054340 164 145 162 163 072 012 057 057 040 040 040 163 164 162 072 040
0054360 164 150 145 040 112 141 166 141 163 143 162 151 160 164 040 163
0054400 164 162 151 156 147 040 164 157 040 143 157 160 171 056 012 057
0054420 057 040 040 040 150 145 141 160 072 040 164 150 145 040 141 162
0054440 162 141 171 040 164 157 040 143 157 160 171 040 164 157 056 040
0054460 105 141 143 150 040 151 156 144 145 170 040 151 156 040 164 150
0054500 151 163 040 141 162 162 141 171 040 151 163 040 141 163 163 165
0054520 155 145 144 040 164 157 040 142 145 040 157 156 145 040 070 055
0054540 142 171 164 145 040 145 154 145 155 145 156 164 056 012 057 057
0054560 040 040 040 157 165 164 111 144 170 072 040 124 150 145 040 163
0054600 164 141 162 164 151 156 147 040 157 146 146 163 145 164 040 151
0054620 156 040 164 150 145 040 141 162 162 141 171 040 164 157 040 142
0054640 145 147 151 156 040 164 150 145 040 143 157 160 171 151 156 147
0054660 056 012 057 057 040 040 040 155 141 170 102 171 164 145 163 124
0054700 157 127 162 151 164 145 072 040 124 150 145 040 155 141 170 151
0054720 155 165 155 040 156 165 155 142 145 162 040 157 146 040 142 171
0054740 164 145 163 040 164 150 151 163 040 146 165 156 143 164 151 157
0054760 156 040 143 141 156 040 167 162 151 164 145 040 164 157 040 164
0055000 150 145 040 141 162 162 141 171 056 012 057 057 040 040 040 040
0055020 040 040 040 040 040 040 040 040 040 040 040 040 040 040 040 040
0055040 124 150 151 163 040 143 157 165 156 164 040 163 150 157 165 154
0055060 144 040 151 156 143 154 165 144 145 040 164 150 145 040 156 165
0055100 154 154 040 164 145 162 155 151 156 141 164 157 162 054 012 057
0055120 057 040 040 040 040 040 040 040 040 040 040 040 040 040 040 040
0055140 040 040 040 040 040 151 056 145 056 040 151 146 040 155 141 170
0055160 102 171 164 145 163 124 157 127 162 151 164 145 075 061 054 040
0055200 157 156 154 171 040 164 150 145 040 156 165 154 154 040 164 145
0055220 162 155 151 156 141 164 157 162 040 167 151 154 154 040 142 145
0055240 040 167 162 151 164 164 145 156 040 141 156 144 040 156 157 164
0055260 150 151 156 147 040 145 154 163 145 056 012 057 057 040 040 040
0055300 040 040 040 040 040 040 040 040 040 040 040 040 040 040 040 040
0055320 040 155 141 170 102 171 164 145 163 124 157 127 162 151 164 145
0055340 075 060 040 144 157 145 163 040 156 157 164 040 167 162 151 164
0055360 145 040 141 156 171 040 142 171 164 145 163 040 164 157 040 164
0055400 150 145 040 157 165 164 160 165 164 054 040 156 157 164 040 145
0055420 166 145 156 040 164 150 145 040 156 165 154 154 040 164 145 162
0055440 155 151 156 141 164 157 162 056 012 057 057 040 122 145 164 165
0055460 162 156 163 040 164 150 145 040 156 165 155 142 145 162 040 157
0055500 146 040 142 171 164 145 163 040 167 162 151 164 164 145 156 054
0055520 040 105 130 103 114 125 104 111 116 107 040 164 150 145 040 156
0055540 165 154 154 040 164 145 162 155 151 156 141 164 157 162 056 012
0055560 012 146 165 156 143 164 151 157 156 040 163 164 162 151 156 147
0055600 124 157 125 124 106 070 101 162 162 141 171 050 163 164 162 054
0055620 040 150 145 141 160 054 040 157 165 164 111 144 170 054 040 155
0055640 141 170 102 171 164 145 163 124 157 127 162 151 164 145 051 040
0055660 173 012 040 040 151 146 040 050 041 050 155 141 170 102 171 164
0055700 145 163 124 157 127 162 151 164 145 040 076 040 060 051 051 040
0055720 057 057 040 120 141 162 141 155 145 164 145 162 040 155 141 170
0055740 102 171 164 145 163 124 157 127 162 151 164 145 040 151 163 040
0055760 156 157 164 040 157 160 164 151 157 156 141 154 056 040 116 145
0056000 147 141 164 151 166 145 040 166 141 154 165 145 163 054 040 060
0056020 054 040 156 165 154 154 054 040 165 156 144 145 146 151 156 145
0056040 144 040 141 156 144 040 146 141 154 163 145 040 145 141 143 150
0056060 040 144 157 156 047 164 040 167 162 151 164 145 040 157 165 164
0056100 040 141 156 171 040 142 171 164 145 163 056 012 040 040 040 040
0056120 162 145 164 165 162 156 040 060 073 012 012 040 040 166 141 162
0056140 040 163 164 141 162 164 111 144 170 040 075 040 157 165 164 111
0056160 144 170 073 012 040 040 166 141 162 040 145 156 144 111 144 170
0056200 040 075 040 157 165 164 111 144 170 040 053 040 155 141 170 102
0056220 171 164 145 163 124 157 127 162 151 164 145 040 055 040 061 073
0056240 040 057 057 040 055 061 040 146 157 162 040 163 164 162 151 156
0056260 147 040 156 165 154 154 040 164 145 162 155 151 156 141 164 157
0056300 162 056 012 040 040 146 157 162 040 050 166 141 162 040 151 040
0056320 075 040 060 073 040 151 040 074 040 163 164 162 056 154 145 156
0056340 147 164 150 073 040 053 053 151 051 040 173 012 040 040 040 040
0056360 057 057 040 107 157 164 143 150 141 072 040 143 150 141 162 103
0056400 157 144 145 101 164 040 162 145 164 165 162 156 163 040 141 040
0056420 061 066 055 142 151 164 040 167 157 162 144 040 164 150 141 164
0056440 040 151 163 040 141 040 125 124 106 055 061 066 040 145 156 143
0056460 157 144 145 144 040 143 157 144 145 040 165 156 151 164 054 040
0056500 156 157 164 040 141 040 125 156 151 143 157 144 145 040 143 157
0056520 144 145 040 160 157 151 156 164 040 157 146 040 164 150 145 040
0056540 143 150 141 162 141 143 164 145 162 041 040 123 157 040 144 145
0056560 143 157 144 145 040 125 124 106 061 066 055 076 125 124 106 063
0056600 062 055 076 125 124 106 070 056 012 040 040 040 040 057 057 040
0056620 123 145 145 040 150 164 164 160 072 057 057 165 156 151 143 157
0056640 144 145 056 157 162 147 057 146 141 161 057 165 164 146 137 142
0056660 157 155 056 150 164 155 154 043 165 164 146 061 066 055 063 012
0056700 040 040 040 040 057 057 040 106 157 162 040 125 124 106 070 040
0056720 142 171 164 145 040 163 164 162 165 143 164 165 162 145 054 040
0056740 163 145 145 040 150 164 164 160 072 057 057 145 156 056 167 151
0056760 153 151 160 145 144 151 141 056 157 162 147 057 167 151 153 151
0057000 057 125 124 106 055 070 043 104 145 163 143 162 151 160 164 151
0057020 157 156 040 141 156 144 040 150 164 164 160 163 072 057 057 167
0057040 167 167 056 151 145 164 146 056 157 162 147 057 162 146 143 057
0057060 162 146 143 062 062 067 071 056 164 170 164 040 141 156 144 040
0057100 150 164 164 160 163 072 057 057 164 157 157 154 163 056 151 145
0057120 164 146 056 157 162 147 057 150 164 155 154 057 162 146 143 063
0057140 066 062 071 012 040 040 040 040 166 141 162 040 165 040 075 040
0057160 163 164 162 056 143 150 141 162 103 157 144 145 101 164 050 151
0057200 051 073 040 057 057 040 160 157 163 163 151 142 154 171 040 141
0057220 040 154 145 141 144 040 163 165 162 162 157 147 141 164 145 012
0057240 040 040 040 040 151 146 040 050 165 040 076 075 040 060 170 104
0057260 070 060 060 040 046 046 040 165 040 074 075 040 060 170 104 106
0057300 106 106 051 040 173 012 040 040 040 040 040 040 166 141 162 040
0057320 165 061 040 075 040 163 164 162 056 143 150 141 162 103 157 144
0057340 145 101 164 050 053 053 151 051 073 012 040 040 040 040 040 040
0057360 165 040 075 040 060 170 061 060 060 060 060 040 053 040 050 050
0057400 165 040 046 040 060 170 063 106 106 051 040 074 074 040 061 060
0057420 051 040 174 040 050 165 061 040 046 040 060 170 063 106 106 051
0057440 073 012 040 040 040 040 175 012 040 040 040 040 151 146 040 050
0057460 165 040 074 075 040 060 170 067 106 051 040 173 012 040 040 040
0057500 040 040 040 151 146 040 050 157 165 164 111 144 170 040 076 075
0057520 040 145 156 144 111 144 170 051 040 142 162 145 141 153 073 012
0057540 040 040 040 040 040 040 150 145 141 160 133 157 165 164 111 144
0057560 170 053 053 135 040 075 040 165 073 012 040 040 040 040 175 040
0057600 145 154 163 145 040 151 146 040 050 165 040 074 075 040 060 170
0057620 067 106 106 051 040 173 012 040 040 040 040 040 040 151 146 040
0057640 050 157 165 164 111 144 170 040 053 040 061 040 076 075 040 145
0057660 156 144 111 144 170 051 040 142 162 145 141 153 073 012 040 040
0057700 040 040 040 040 150 145 141 160 133 157 165 164 111 144 170 053
0057720 053 135 040 075 040 060 170 103 060 040 174 040 050 165 040 076
0057740 076 040 066 051 073 012 040 040 040 040 040 040 150 145 141 160
0057760 133 157 165 164 111 144 170 053 053 135 040 075 040 060 170 070
0060000 060 040 174 040 050 165 040 046 040 066 063 051 073 012 040 040
0060020 040 040 175 040 145 154 163 145 040 151 146 040 050 165 040 074
0060040 075 040 060 170 106 106 106 106 051 040 173 012 040 040 040 040
0060060 040 040 151 146 040 050 157 165 164 111 144 170 040 053 040 062
0060100 040 076 075 040 145 156 144 111 144 170 051 040 142 162 145 141
0060120 153 073 012 040 040 040 040 040 040 150 145 141 160 133 157 165
0060140 164 111 144 170 053 053 135 040 075 040 060 170 105 060 040 174
0060160 040 050 165 040 076 076 040 061 062 051 073 012 040 040 040 040
0060200 040 040 150 145 141 160 133 157 165 164 111 144 170 053 053 135
0060220 040 075 040 060 170 070 060 040 174 040 050 050 165 040 076 076
0060240 040 066 051 040 046 040 066 063 051 073 012 040 040 040 040 040
0060260 040 150 145 141 160 133 157 165 164 111 144 170 053 053 135 040
0060300 075 040 060 170 070 060 040 174 040 050 165 040 046 040 066 063
0060320 051 073 012 040 040 040 040 175 040 145 154 163 145 040 173 012
0060340 040 040 040 040 040 040 151 146 040 050 157 165 164 111 144 170
0060360 040 053 040 063 040 076 075 040 145 156 144 111 144 170 051 040
0060400 142 162 145 141 153 073 012 040 040 040 040 040 040 151 146 040
0060420 050 165 040 076 040 060 170 061 060 106 106 106 106 051 040 167
0060440 141 162 156 117 156 143 145 050 047 111 156 166 141 154 151 144
0060460 040 125 156 151 143 157 144 145 040 143 157 144 145 040 160 157
0060500 151 156 164 040 060 170 047 040 053 040 165 056 164 157 123 164
0060520 162 151 156 147 050 061 066 051 040 053 040 047 040 145 156 143
0060540 157 165 156 164 145 162 145 144 040 167 150 145 156 040 163 145
0060560 162 151 141 154 151 172 151 156 147 040 141 040 112 123 040 163
0060600 164 162 151 156 147 040 164 157 040 141 040 125 124 106 055 070
0060620 040 163 164 162 151 156 147 040 151 156 040 167 141 163 155 040
0060640 155 145 155 157 162 171 041 040 050 126 141 154 151 144 040 165
0060660 156 151 143 157 144 145 040 143 157 144 145 040 160 157 151 156
0060700 164 163 040 163 150 157 165 154 144 040 142 145 040 151 156 040
0060720 162 141 156 147 145 040 060 055 060 170 061 060 106 106 106 106
0060740 051 056 047 051 073 012 040 040 040 040 040 040 150 145 141 160
0060760 133 157 165 164 111 144 170 053 053 135 040 075 040 060 170 106
0061000 060 040 174 040 050 165 040 076 076 040 061 070 051 073 012 040
0061020 040 040 040 040 040 150 145 141 160 133 157 165 164 111 144 170
0061040 053 053 135 040 075 040 060 170 070 060 040 174 040 050 050 165
0061060 040 076 076 040 061 062 051 040 046 040 066 063 051 073 012 040
0061100 040 040 040 040 040 150 145 141 160 133 157 165 164 111 144 170
0061120 053 053 135 040 075 040 060 170 070 060 040 174 040 050 050 165
0061140 040 076 076 040 066 051 040 046 040 066 063 051 073 012 040 040
0061160 040 040 040 040 150 145 141 160 133 157 165 164 111 144 170 053
0061200 053 135 040 075 040 060 170 070 060 040 174 040 050 165 040 046
0061220 040 066 063 051 073 012 040 040 040 040 175 012 040 040 175 012
0061240 040 040 057 057 040 116 165 154 154 055 164 145 162 155 151 156
0061260 141 164 145 040 164 150 145 040 160 157 151 156 164 145 162 040
0061300 164 157 040 164 150 145 040 142 165 146 146 145 162 056 012 040
0061320 040 150 145 141 160 133 157 165 164 111 144 170 135 040 075 040
0061340 060 073 012 040 040 162 145 164 165 162 156 040 157 165 164 111
0061360 144 170 040 055 040 163 164 141 162 164 111 144 170 073 012 175
0061400 012 012 057 057 040 103 157 160 151 145 163 040 164 150 145 040
0061420 147 151 166 145 156 040 112 141 166 141 163 143 162 151 160 164
0061440 040 123 164 162 151 156 147 040 157 142 152 145 143 164 040 047
0061460 163 164 162 047 040 164 157 040 164 150 145 040 145 155 163 143
0061500 162 151 160 164 145 156 040 110 105 101 120 040 141 164 040 141
0061520 144 144 162 145 163 163 040 047 157 165 164 120 164 162 047 054
0061540 012 057 057 040 156 165 154 154 055 164 145 162 155 151 156 141
0061560 164 145 144 040 141 156 144 040 145 156 143 157 144 145 144 040
0061600 151 156 040 125 124 106 070 040 146 157 162 155 056 040 124 150
0061620 145 040 143 157 160 171 040 167 151 154 154 040 162 145 161 165
0061640 151 162 145 040 141 164 040 155 157 163 164 040 163 164 162 056
0061660 154 145 156 147 164 150 052 064 053 061 040 142 171 164 145 163
0061700 040 157 146 040 163 160 141 143 145 040 151 156 040 164 150 145
0061720 040 110 105 101 120 056 012 057 057 040 125 163 145 040 164 150
0061740 145 040 146 165 156 143 164 151 157 156 040 154 145 156 147 164
0061760 150 102 171 164 145 163 125 124 106 070 040 164 157 040 143 157
0062000 155 160 165 164 145 040 164 150 145 040 145 170 141 143 164 040
0062020 156 165 155 142 145 162 040 157 146 040 142 171 164 145 163 040
0062040 050 145 170 143 154 165 144 151 156 147 040 156 165 154 154 040
0062060 164 145 162 155 151 156 141 164 157 162 051 040 164 150 141 164
0062100 040 164 150 151 163 040 146 165 156 143 164 151 157 156 040 167
0062120 151 154 154 040 167 162 151 164 145 056 012 057 057 040 122 145
0062140 164 165 162 156 163 040 164 150 145 040 156 165 155 142 145 162
0062160 040 157 146 040 142 171 164 145 163 040 167 162 151 164 164 145
0062200 156 054 040 105 130 103 114 125 104 111 116 107 040 164 150 145
0062220 040 156 165 154 154 040 164 145 162 155 151 156 141 164 157 162
0062240 056 012 012 146 165 156 143 164 151 157 156 040 163 164 162 151
0062260 156 147 124 157 125 124 106 070 050 163 164 162 054 040 157 165
0062300 164 120 164 162 054 040 155 141 170 102 171 164 145 163 124 157
0062320 127 162 151 164 145 051 040 173 012 040 040 141 163 163 145 162
0062340 164 050 164 171 160 145 157 146 040 155 141 170 102 171 164 145
0062360 163 124 157 127 162 151 164 145 040 075 075 040 047 156 165 155
0062400 142 145 162 047 054 040 047 163 164 162 151 156 147 124 157 125
0062420 124 106 070 050 163 164 162 054 040 157 165 164 120 164 162 054
0062440 040 155 141 170 102 171 164 145 163 124 157 127 162 151 164 145
0062460 051 040 151 163 040 155 151 163 163 151 156 147 040 164 150 145
0062500 040 164 150 151 162 144 040 160 141 162 141 155 145 164 145 162
0062520 040 164 150 141 164 040 163 160 145 143 151 146 151 145 163 040
0062540 164 150 145 040 154 145 156 147 164 150 040 157 146 040 164 150
0062560 145 040 157 165 164 160 165 164 040 142 165 146 146 145 162 041
0062600 047 051 073 012 040 040 162 145 164 165 162 156 040 163 164 162
0062620 151 156 147 124 157 125 124 106 070 101 162 162 141 171 050 163
0062640 164 162 054 040 110 105 101 120 125 070 054 157 165 164 120 164
0062660 162 054 040 155 141 170 102 171 164 145 163 124 157 127 162 151
0062700 164 145 051 073 012 175 012 012 057 057 040 122 145 164 165 162
0062720 156 163 040 164 150 145 040 156 165 155 142 145 162 040 157 146
0062740 040 142 171 164 145 163 040 164 150 145 040 147 151 166 145 156
0062760 040 112 141 166 141 163 143 162 151 160 164 040 163 164 162 151
0063000 156 147 040 164 141 153 145 163 040 151 146 040 145 156 143 157
0063020 144 145 144 040 141 163 040 141 040 125 124 106 070 040 142 171
0063040 164 145 040 141 162 162 141 171 054 040 105 130 103 114 125 104
0063060 111 116 107 040 164 150 145 040 156 165 154 154 040 164 145 162
0063100 155 151 156 141 164 157 162 040 142 171 164 145 056 012 146 165
0063120 156 143 164 151 157 156 040 154 145 156 147 164 150 102 171 164
0063140 145 163 125 124 106 070 050 163 164 162 051 040 173 012 040 040
0063160 166 141 162 040 154 145 156 040 075 040 060 073 012 040 040 146
0063200 157 162 040 050 166 141 162 040 151 040 075 040 060 073 040 151
0063220 040 074 040 163 164 162 056 154 145 156 147 164 150 073 040 053
0063240 053 151 051 040 173 012 040 040 040 040 057 057 040 107 157 164
0063260 143 150 141 072 040 143 150 141 162 103 157 144 145 101 164 040
0063300 162 145 164 165 162 156 163 040 141 040 061 066 055 142 151 164
0063320 040 167 157 162 144 040 164 150 141 164 040 151 163 040 141 040
0063340 125 124 106 055 061 066 040 145 156 143 157 144 145 144 040 143
0063360 157 144 145 040 165 156 151 164 054 040 156 157 164 040 141 040
0063400 125 156 151 143 157 144 145 040 143 157 144 145 040 160 157 151
0063420 156 164 040 157 146 040 164 150 145 040 143 150 141 162 141 143
0063440 164 145 162 041 040 123 157 040 144 145 143 157 144 145 040 125
0063460 124 106 061 066 055 076 125 124 106 063 062 055 076 125 124 106
0063500 070 056 012 040 040 040 040 057 057 040 123 145 145 040 150 164
0063520 164 160 072 057 057 165 156 151 143 157 144 145 056 157 162 147
0063540 057 146 141 161 057 165 164 146 137 142 157 155 056 150 164 155
0063560 154 043 165 164 146 061 066 055 063 012 040 040 040 040 166 141
0063600 162 040 143 040 075 040 163 164 162 056 143 150 141 162 103 157
0063620 144 145 101 164 050 151 051 073 040 057 057 040 160 157 163 163
0063640 151 142 154 171 040 141 040 154 145 141 144 040 163 165 162 162
0063660 157 147 141 164 145 012 040 040 040 040 151 146 040 050 143 040
0063700 074 075 040 060 170 067 106 051 040 173 012 040 040 040 040 040
0063720 040 154 145 156 053 053 073 012 040 040 040 040 175 040 145 154
0063740 163 145 040 151 146 040 050 143 040 074 075 040 060 170 067 106
0063760 106 051 040 173 012 040 040 040 040 040 040 154 145 156 040 053
0064000 075 040 062 073 012 040 040 040 040 175 040 145 154 163 145 040
0064020 151 146 040 050 143 040 076 075 040 060 170 104 070 060 060 040
0064040 046 046 040 143 040 074 075 040 060 170 104 106 106 106 051 040
0064060 173 012 040 040 040 040 040 040 154 145 156 040 053 075 040 064
0064100 073 040 053 053 151 073 012 040 040 040 040 175 040 145 154 163
0064120 145 040 173 012 040 040 040 040 040 040 154 145 156 040 053 075
0064140 040 063 073 012 040 040 040 040 175 012 040 040 175 012 040 040
0064160 162 145 164 165 162 156 040 154 145 156 073 012 175 012 012 057
0064200 057 040 145 156 144 040 151 156 143 154 165 144 145 072 040 162
0064220 165 156 164 151 155 145 137 163 164 162 151 156 147 163 056 152
0064240 163 012 057 057 040 115 145 155 157 162 171 040 155 141 156 141
0064260 147 145 155 145 156 164 012 012 166 141 162 040 110 105 101 120
0064300 054 012 057 052 052 040 100 164 171 160 145 040 173 041 101 162
0064320 162 141 171 102 165 146 146 145 162 175 040 052 057 012 040 040
0064340 142 165 146 146 145 162 054 012 057 052 052 040 100 164 171 160
0064360 145 040 173 041 111 156 164 070 101 162 162 141 171 175 040 052
0064400 057 012 040 040 110 105 101 120 070 054 012 057 052 052 040 100
0064420 164 171 160 145 040 173 041 125 151 156 164 070 101 162 162 141
0064440 171 175 040 052 057 012 040 040 110 105 101 120 125 070 054 012
0064460 057 052 052 040 100 164 171 160 145 040 173 041 111 156 164 061
0064500 066 101 162 162 141 171 175 040 052 057 012 040 040 110 105 101
0064520 120 061 066 054 012 057 052 052 040 100 164 171 160 145 040 173
0064540 041 125 151 156 164 061 066 101 162 162 141 171 175 040 052 057
0064560 012 040 040 110 105 101 120 125 061 066 054 012 057 052 052 040
0064600 100 164 171 160 145 040 173 041 111 156 164 063 062 101 162 162
0064620 141 171 175 040 052 057 012 040 040 110 105 101 120 063 062 054
0064640 012 057 052 052 040 100 164 171 160 145 040 173 041 125 151 156
0064660 164 063 062 101 162 162 141 171 175 040 052 057 012 040 040 110
0064700 105 101 120 125 063 062 054 012 057 052 052 040 100 164 171 160
0064720 145 040 173 041 106 154 157 141 164 063 062 101 162 162 141 171
0064740 175 040 052 057 012 040 040 110 105 101 120 106 063 062 054 012
0064760 057 052 052 040 100 164 171 160 145 040 173 041 106 154 157 141
0065000 164 066 064 101 162 162 141 171 175 040 052 057 012 040 040 110
0065020 105 101 120 106 066 064 073 012 012 146 165 156 143 164 151 157
0065040 156 040 165 160 144 141 164 145 107 154 157 142 141 154 102 165
0065060 146 146 145 162 101 156 144 126 151 145 167 163 050 142 165 146
0065100 051 040 173 012 040 040 142 165 146 146 145 162 040 075 040 142
0065120 165 146 073 012 040 040 115 157 144 165 154 145 133 047 110 105
0065140 101 120 070 047 135 040 075 040 110 105 101 120 070 040 075 040
0065160 156 145 167 040 111 156 164 070 101 162 162 141 171 050 142 165
0065200 146 051 073 012 040 040 115 157 144 165 154 145 133 047 110 105
0065220 101 120 061 066 047 135 040 075 040 110 105 101 120 061 066 040
0065240 075 040 156 145 167 040 111 156 164 061 066 101 162 162 141 171
0065260 050 142 165 146 051 073 012 040 040 115 157 144 165 154 145 133
0065300 047 110 105 101 120 063 062 047 135 040 075 040 110 105 101 120
0065320 063 062 040 075 040 156 145 167 040 111 156 164 063 062 101 162
0065340 162 141 171 050 142 165 146 051 073 012 040 040 115 157 144 165
0065360 154 145 133 047 110 105 101 120 125 070 047 135 040 075 040 110
0065400 105 101 120 125 070 040 075 040 156 145 167 040 125 151 156 164
0065420 070 101 162 162 141 171 050 142 165 146 051 073 012 040 040 115
0065440 157 144 165 154 145 133 047 110 105 101 120 125 061 066 047 135
0065460 040 075 040 110 105 101 120 125 061 066 040 075 040 156 145 167
0065500 040 125 151 156 164 061 066 101 162 162 141 171 050 142 165 146
0065520 051 073 012 040 040 115 157 144 165 154 145 133 047 110 105 101
0065540 120 125 063 062 047 135 040 075 040 110 105 101 120 125 063 062
0065560 040 075 040 156 145 167 040 125 151 156 164 063 062 101 162 162
0065600 141 171 050 142 165 146 051 073 012 040 040 115 157 144 165 154
0065620 145 133 047 110 105 101 120 106 063 062 047 135 040 075 040 110
0065640 105 101 120 106 063 062 040 075 040 156 145 167 040 106 154 157
0065660 141 164 063 062 101 162 162 141 171 050 142 165 146 051 073 012
0065700 040 040 115 157 144 165 154 145 133 047 110 105 101 120 106 066
0065720 064 047 135 040 075 040 110 105 101 120 106 066 064 040 075 040
0065740 156 145 167 040 106 154 157 141 164 066 064 101 162 162 141 171
0065760 050 142 165 146 051 073 012 175 012 012 166 141 162 040 124 117
0066000 124 101 114 137 123 124 101 103 113 040 075 040 065 062 064 062
0066020 070 070 060 073 012 151 146 040 050 115 157 144 165 154 145 133
0066040 047 124 117 124 101 114 137 123 124 101 103 113 047 135 051 040
0066060 141 163 163 145 162 164 050 124 117 124 101 114 137 123 124 101
0066100 103 113 040 075 075 075 040 115 157 144 165 154 145 133 047 124
0066120 117 124 101 114 137 123 124 101 103 113 047 135 054 040 047 164
0066140 150 145 040 163 164 141 143 153 040 163 151 172 145 040 143 141
0066160 156 040 156 157 040 154 157 156 147 145 162 040 142 145 040 144
0066200 145 164 145 162 155 151 156 145 144 040 141 164 040 162 165 156
0066220 164 151 155 145 047 051 012 012 166 141 162 040 111 116 111 124
0066240 111 101 114 137 115 105 115 117 122 131 040 075 040 115 157 144
0066260 165 154 145 133 047 111 116 111 124 111 101 114 137 115 105 115
0066300 117 122 131 047 135 040 174 174 040 061 066 067 067 067 062 061
0066320 066 073 154 145 147 141 143 171 115 157 144 165 154 145 120 162
0066340 157 160 050 047 111 116 111 124 111 101 114 137 115 105 115 117
0066360 122 131 047 054 040 047 111 116 111 124 111 101 114 137 115 105
0066400 115 117 122 131 047 051 073 012 012 141 163 163 145 162 164 050
0066420 111 116 111 124 111 101 114 137 115 105 115 117 122 131 040 076
0066440 075 040 124 117 124 101 114 137 123 124 101 103 113 054 040 047
0066460 111 116 111 124 111 101 114 137 115 105 115 117 122 131 040 163
0066500 150 157 165 154 144 040 142 145 040 154 141 162 147 145 162 040
0066520 164 150 141 156 040 124 117 124 101 114 137 123 124 101 103 113
0066540 054 040 167 141 163 040 047 040 053 040 111 116 111 124 111 101
0066560 114 137 115 105 115 117 122 131 040 053 040 047 041 040 050 124
0066600 117 124 101 114 137 123 124 101 103 113 075 047 040 053 040 124
0066620 117 124 101 114 137 123 124 101 103 113 040 053 040 047 051 047
0066640 051 073 012 012 057 057 040 143 150 145 143 153 040 146 157 162
0066660 040 146 165 154 154 040 145 156 147 151 156 145 040 163 165 160
0066700 160 157 162 164 040 050 165 163 145 040 163 164 162 151 156 147
0066720 040 047 163 165 142 141 162 162 141 171 047 040 164 157 040 141
0066740 166 157 151 144 040 143 154 157 163 165 162 145 040 143 157 155
0066760 160 151 154 145 162 040 143 157 156 146 165 163 151 157 156 051
0067000 012 141 163 163 145 162 164 050 164 171 160 145 157 146 040 111
0067020 156 164 063 062 101 162 162 141 171 040 041 075 040 047 165 156
0067040 144 145 146 151 156 145 144 047 040 046 046 040 164 171 160 145
0067060 157 146 040 106 154 157 141 164 066 064 101 162 162 141 171 040
0067100 041 075 075 040 047 165 156 144 145 146 151 156 145 144 047 040
0067120 046 046 040 111 156 164 063 062 101 162 162 141 171 056 160 162
0067140 157 164 157 164 171 160 145 056 163 165 142 141 162 162 141 171
0067160 040 041 075 040 165 156 144 145 146 151 156 145 144 040 046 046
0067200 040 111 156 164 063 062 101 162 162 141 171 056 160 162 157 164
0067220 157 164 171 160 145 056 163 145 164 040 041 075 040 165 156 144
0067240 145 146 151 156 145 144 054 012 040 040 040 040 040 040 040 047
0067260 112 123 040 145 156 147 151 156 145 040 144 157 145 163 040 156
0067300 157 164 040 160 162 157 166 151 144 145 040 146 165 154 154 040
0067320 164 171 160 145 144 040 141 162 162 141 171 040 163 165 160 160
0067340 157 162 164 047 051 073 012 012 057 057 040 111 146 040 155 145
0067360 155 157 162 171 040 151 163 040 144 145 146 151 156 145 144 040
0067400 151 156 040 167 141 163 155 054 040 164 150 145 040 165 163 145
0067420 162 040 143 141 156 047 164 040 160 162 157 166 151 144 145 040
0067440 151 164 056 012 141 163 163 145 162 164 050 041 115 157 144 165
0067460 154 145 133 047 167 141 163 155 115 145 155 157 162 171 047 135
0067500 054 040 047 125 163 145 040 157 146 040 140 167 141 163 155 115
0067520 145 155 157 162 171 140 040 144 145 164 145 143 164 145 144 056
0067540 040 040 125 163 145 040 055 163 111 115 120 117 122 124 105 104
0067560 137 115 105 115 117 122 131 040 164 157 040 144 145 146 151 156
0067600 145 040 167 141 163 155 115 145 155 157 162 171 040 145 170 164
0067620 145 162 156 141 154 154 171 047 051 073 012 141 163 163 145 162
0067640 164 050 111 116 111 124 111 101 114 137 115 105 115 117 122 131
0067660 040 075 075 040 061 066 067 067 067 062 061 066 054 040 047 104
0067700 145 164 145 143 164 145 144 040 162 165 156 164 151 155 145 040
0067720 111 116 111 124 111 101 114 137 115 105 115 117 122 131 040 163
0067740 145 164 164 151 156 147 056 040 040 125 163 145 040 055 163 111
0067760 115 120 117 122 124 105 104 137 115 105 115 117 122 131 040 164
0070000 157 040 144 145 146 151 156 145 040 167 141 163 155 115 145 155
0070020 157 162 171 040 144 171 156 141 155 151 143 141 154 154 171 047
0070040 051 073 012 012 057 057 040 151 156 143 154 165 144 145 072 040
0070060 162 165 156 164 151 155 145 137 151 156 151 164 137 164 141 142
0070100 154 145 056 152 163 012 057 057 040 111 156 040 162 145 147 165
0070120 154 141 162 040 156 157 156 055 122 105 114 117 103 101 124 101
0070140 102 114 105 040 155 157 144 145 040 164 150 145 040 164 141 142
0070160 154 145 040 151 163 040 145 170 160 157 162 164 145 144 012 057
0070200 057 040 146 162 157 155 040 164 150 145 040 167 141 163 155 040
0070220 155 157 144 165 154 145 040 141 156 144 040 164 150 151 163 040
0070240 167 151 154 154 040 142 145 040 141 163 163 151 147 156 145 144
0070260 040 157 156 143 145 012 057 057 040 164 150 145 040 145 170 160
0070300 157 162 164 163 040 141 162 145 040 141 166 141 151 154 141 142
0070320 154 145 056 012 166 141 162 040 167 141 163 155 124 141 142 154
0070340 145 073 012 012 057 057 040 145 156 144 040 151 156 143 154 165
0070360 144 145 072 040 162 165 156 164 151 155 145 137 151 156 151 164
0070400 137 164 141 142 154 145 056 152 163 012 057 057 040 151 156 143
0070420 154 165 144 145 072 040 162 165 156 164 151 155 145 137 163 164
0070440 141 143 153 137 143 150 145 143 153 056 152 163 012 012 012 057
0070460 057 040 111 156 151 164 151 141 154 151 172 145 163 040 164 150
0070500 145 040 163 164 141 143 153 040 143 157 157 153 151 145 056 040
0070520 103 141 154 154 145 144 040 141 164 040 164 150 145 040 163 164
0070540 141 162 164 165 160 040 157 146 040 155 141 151 156 040 141 156
0070560 144 040 141 164 040 164 150 145 040 163 164 141 162 164 165 160
0070600 040 157 146 040 145 141 143 150 040 164 150 162 145 141 144 040
0070620 151 156 040 160 164 150 162 145 141 144 163 040 155 157 144 145
0070640 056 012 146 165 156 143 164 151 157 156 040 167 162 151 164 145
0070660 123 164 141 143 153 103 157 157 153 151 145 050 051 040 173 012
0070700 040 040 166 141 162 040 155 141 170 040 075 040 137 145 155 163
0070720 143 162 151 160 164 145 156 137 163 164 141 143 153 137 147 145
0070740 164 137 145 156 144 050 051 073 012 040 040 141 163 163 145 162
0070760 164 050 050 155 141 170 040 046 040 063 051 040 075 075 040 060
0071000 051 073 012 040 040 057 057 040 124 150 145 040 163 164 141 143
0071020 153 040 147 162 157 167 040 144 157 167 156 167 141 162 144 163
0071040 040 164 157 167 141 162 144 163 040 137 145 155 163 143 162 151
0071060 160 164 145 156 137 163 164 141 143 153 137 147 145 164 137 145
0071100 156 144 056 012 040 040 057 057 040 127 145 040 167 162 151 164
0071120 145 040 143 157 157 153 151 145 163 040 164 157 040 164 150 145
0071140 040 146 151 156 141 154 040 164 167 157 040 167 157 162 144 163
0071160 040 151 156 040 164 150 145 040 163 164 141 143 153 040 141 156
0071200 144 040 144 145 164 145 143 164 040 151 146 040 164 150 145 171
0071220 040 141 162 145 012 040 040 057 057 040 145 166 145 162 040 157
0071240 166 145 162 167 162 151 164 164 145 156 056 012 040 040 110 105
0071260 101 120 125 063 062 133 050 050 155 141 170 051 076 076 062 051
0071300 135 040 075 040 060 170 062 061 063 065 064 066 067 073 012 040
0071320 040 110 105 101 120 125 063 062 133 050 050 050 155 141 170 051
0071340 053 050 064 051 051 076 076 062 051 135 040 075 040 060 170 070
0071360 071 102 101 103 104 106 105 073 012 040 040 057 057 040 101 154
0071400 163 157 040 164 145 163 164 040 164 150 145 040 147 154 157 142
0071420 141 154 040 141 144 144 162 145 163 163 040 060 040 146 157 162
0071440 040 151 156 164 145 147 162 151 164 171 056 012 040 040 110 105
0071460 101 120 125 063 062 133 060 135 040 075 040 060 170 066 063 067
0071500 063 066 144 066 065 073 040 057 052 040 047 145 155 163 143 047
0071520 040 052 057 012 175 012 012 146 165 156 143 164 151 157 156 040
0071540 143 150 145 143 153 123 164 141 143 153 103 157 157 153 151 145
0071560 050 051 040 173 012 040 040 151 146 040 050 101 102 117 122 124
0071600 051 040 162 145 164 165 162 156 073 012 040 040 166 141 162 040
0071620 155 141 170 040 075 040 137 145 155 163 143 162 151 160 164 145
0071640 156 137 163 164 141 143 153 137 147 145 164 137 145 156 144 050
0071660 051 073 012 040 040 166 141 162 040 143 157 157 153 151 145 061
0071700 040 075 040 110 105 101 120 125 063 062 133 050 050 155 141 170
0071720 051 076 076 062 051 135 073 012 040 040 166 141 162 040 143 157
0071740 157 153 151 145 062 040 075 040 110 105 101 120 125 063 062 133
0071760 050 050 050 155 141 170 051 053 050 064 051 051 076 076 062 051
0072000 135 073 012 040 040 151 146 040 050 143 157 157 153 151 145 061
0072020 040 041 075 040 060 170 062 061 063 065 064 066 067 040 174 174
0072040 040 143 157 157 153 151 145 062 040 041 075 040 060 170 070 071
0072060 102 101 103 104 106 105 051 040 173 012 040 040 040 040 141 142
0072100 157 162 164 050 047 123 164 141 143 153 040 157 166 145 162 146
0072120 154 157 167 041 040 123 164 141 143 153 040 143 157 157 153 151
0072140 145 040 150 141 163 040 142 145 145 156 040 157 166 145 162 167
0072160 162 151 164 164 145 156 040 141 164 040 060 170 047 040 053 040
0072200 155 141 170 056 164 157 123 164 162 151 156 147 050 061 066 051
0072220 040 053 040 047 054 040 145 170 160 145 143 164 145 144 040 150
0072240 145 170 040 144 167 157 162 144 163 040 060 170 070 071 102 101
0072260 103 104 106 105 040 141 156 144 040 060 170 062 061 063 065 064
0072300 066 067 054 040 142 165 164 040 162 145 143 145 151 166 145 144
0072320 040 060 170 047 040 053 040 143 157 157 153 151 145 062 056 164
0072340 157 123 164 162 151 156 147 050 061 066 051 040 053 040 047 040
0072360 060 170 047 040 053 040 143 157 157 153 151 145 061 056 164 157
0072400 123 164 162 151 156 147 050 061 066 051 051 073 012 040 040 175
0072420 012 040 040 057 057 040 101 154 163 157 040 164 145 163 164 040
0072440 164 150 145 040 147 154 157 142 141 154 040 141 144 144 162 145
0072460 163 163 040 060 040 146 157 162 040 151 156 164 145 147 162 151
0072500 164 171 056 012 040 040 151 146 040 050 110 105 101 120 125 063
0072520 062 133 060 135 040 041 075 075 040 060 170 066 063 067 063 066
0072540 144 066 065 040 057 052 040 047 145 155 163 143 047 040 052 057
0072560 051 040 141 142 157 162 164 050 047 122 165 156 164 151 155 145
0072600 040 145 162 162 157 162 072 040 124 150 145 040 141 160 160 154
0072620 151 143 141 164 151 157 156 040 150 141 163 040 143 157 162 162
0072640 165 160 164 145 144 040 151 164 163 040 150 145 141 160 040 155
0072660 145 155 157 162 171 040 141 162 145 141 040 050 141 144 144 162
0072700 145 163 163 040 172 145 162 157 051 041 047 051 073 012 175 012
0072720 012 057 057 040 145 156 144 040 151 156 143 154 165 144 145 072
0072740 040 162 165 156 164 151 155 145 137 163 164 141 143 153 137 143
0072760 150 145 143 153 056 152 163 012 057 057 040 151 156 143 154 165
0073000 144 145 072 040 162 165 156 164 151 155 145 137 141 163 163 145
0073020 162 164 151 157 156 163 056 152 163 012 012 012 057 057 040 105
0073040 156 144 151 141 156 156 145 163 163 040 143 150 145 143 153 012
0073060 050 146 165 156 143 164 151 157 156 050 051 040 173 012 040 040
0073100 166 141 162 040 150 061 066 040 075 040 156 145 167 040 111 156
0073120 164 061 066 101 162 162 141 171 050 061 051 073 012 040 040 166
0073140 141 162 040 150 070 040 075 040 156 145 167 040 111 156 164 070
0073160 101 162 162 141 171 050 150 061 066 056 142 165 146 146 145 162
0073200 051 073 012 040 040 150 061 066 133 060 135 040 075 040 060 170
0073220 066 063 067 063 073 012 040 040 151 146 040 050 150 070 133 060
0073240 135 040 041 075 075 040 060 170 067 063 040 174 174 040 150 070
0073260 133 061 135 040 041 075 075 040 060 170 066 063 051 040 164 150
0073300 162 157 167 040 047 122 165 156 164 151 155 145 040 145 162 162
0073320 157 162 072 040 145 170 160 145 143 164 145 144 040 164 150 145
0073340 040 163 171 163 164 145 155 040 164 157 040 142 145 040 154 151
0073360 164 164 154 145 055 145 156 144 151 141 156 041 040 050 122 165
0073400 156 040 167 151 164 150 040 055 163 123 125 120 120 117 122 124
0073420 137 102 111 107 137 105 116 104 111 101 116 040 164 157 040 142
0073440 171 160 141 163 163 051 047 073 012 175 051 050 051 073 012 012
0073460 057 057 040 145 156 144 040 151 156 143 154 165 144 145 072 040
0073500 162 165 156 164 151 155 145 137 141 163 163 145 162 164 151 157
0073520 156 163 056 152 163 012 166 141 162 040 137 137 101 124 120 122
0073540 105 122 125 116 137 137 040 040 075 040 133 135 073 040 057 057
0073560 040 146 165 156 143 164 151 157 156 163 040 143 141 154 154 145
0073600 144 040 142 145 146 157 162 145 040 164 150 145 040 162 165 156
0073620 164 151 155 145 040 151 163 040 151 156 151 164 151 141 154 151
0073640 172 145 144 012 166 141 162 040 137 137 101 124 111 116 111 124
0073660 137 137 040 040 040 040 075 040 133 135 073 040 057 057 040 146
0073700 165 156 143 164 151 157 156 163 040 143 141 154 154 145 144 040
0073720 144 165 162 151 156 147 040 163 164 141 162 164 165 160 012 166
0073740 141 162 040 137 137 101 124 115 101 111 116 137 137 040 040 040
0073760 040 075 040 133 135 073 040 057 057 040 146 165 156 143 164 151
0074000 157 156 163 040 143 141 154 154 145 144 040 167 150 145 156 040
0074020 155 141 151 156 050 051 040 151 163 040 164 157 040 142 145 040
0074040 162 165 156 012 166 141 162 040 137 137 101 124 105 130 111 124
0074060 137 137 040 040 040 040 075 040 133 135 073 040 057 057 040 146
0074100 165 156 143 164 151 157 156 163 040 143 141 154 154 145 144 040
0074120 144 165 162 151 156 147 040 163 150 165 164 144 157 167 156 012
0074140 166 141 162 040 137 137 101 124 120 117 123 124 122 125 116 137
0074160 137 040 075 040 133 135 073 040 057 057 040 146 165 156 143 164
0074200 151 157 156 163 040 143 141 154 154 145 144 040 141 146 164 145
0074220 162 040 164 150 145 040 155 141 151 156 050 051 040 151 163 040
0074240 143 141 154 154 145 144 012 012 166 141 162 040 162 165 156 164
0074260 151 155 145 111 156 151 164 151 141 154 151 172 145 144 040 075
0074300 040 146 141 154 163 145 073 012 012 166 141 162 040 162 165 156
0074320 164 151 155 145 105 170 151 164 145 144 040 075 040 146 141 154
0074340 163 145 073 012 166 141 162 040 162 165 156 164 151 155 145 113
0074360 145 145 160 141 154 151 166 145 103 157 165 156 164 145 162 040
0074400 075 040 060 073 012 012 146 165 156 143 164 151 157 156 040 153
0074420 145 145 160 122 165 156 164 151 155 145 101 154 151 166 145 050
0074440 051 040 173 012 040 040 162 145 164 165 162 156 040 156 157 105
0074460 170 151 164 122 165 156 164 151 155 145 040 174 174 040 162 165
0074500 156 164 151 155 145 113 145 145 160 141 154 151 166 145 103 157
0074520 165 156 164 145 162 040 076 040 060 073 012 175 012 012 146 165
0074540 156 143 164 151 157 156 040 160 162 145 122 165 156 050 051 040
0074560 173 012 012 040 040 151 146 040 050 115 157 144 165 154 145 133
0074600 047 160 162 145 122 165 156 047 135 051 040 173 012 040 040 040
0074620 040 151 146 040 050 164 171 160 145 157 146 040 115 157 144 165
0074640 154 145 133 047 160 162 145 122 165 156 047 135 040 075 075 040
0074660 047 146 165 156 143 164 151 157 156 047 051 040 115 157 144 165
0074700 154 145 133 047 160 162 145 122 165 156 047 135 040 075 040 133
0074720 115 157 144 165 154 145 133 047 160 162 145 122 165 156 047 135
0074740 135 073 012 040 040 040 040 167 150 151 154 145 040 050 115 157
0074760 144 165 154 145 133 047 160 162 145 122 165 156 047 135 056 154
0075000 145 156 147 164 150 051 040 173 012 040 040 040 040 040 040 141
0075020 144 144 117 156 120 162 145 122 165 156 050 115 157 144 165 154
0075040 145 133 047 160 162 145 122 165 156 047 135 056 163 150 151 146
0075060 164 050 051 051 073 012 040 040 040 040 175 012 040 040 175 012
0075100 012 040 040 143 141 154 154 122 165 156 164 151 155 145 103 141
0075120 154 154 142 141 143 153 163 050 137 137 101 124 120 122 105 122
0075140 125 116 137 137 051 073 012 175 012 012 146 165 156 143 164 151
0075160 157 156 040 151 156 151 164 122 165 156 164 151 155 145 050 051
0075200 040 173 012 040 040 141 163 163 145 162 164 050 041 162 165 156
0075220 164 151 155 145 111 156 151 164 151 141 154 151 172 145 144 051
0075240 073 012 040 040 162 165 156 164 151 155 145 111 156 151 164 151
0075260 141 154 151 172 145 144 040 075 040 164 162 165 145 073 012 012
0075300 040 040 143 150 145 143 153 123 164 141 143 153 103 157 157 153
0075320 151 145 050 051 073 012 012 040 040 012 040 040 143 141 154 154
0075340 122 165 156 164 151 155 145 103 141 154 154 142 141 143 153 163
0075360 050 137 137 101 124 111 116 111 124 137 137 051 073 012 175 012
0075400 012 146 165 156 143 164 151 157 156 040 160 162 145 115 141 151
0075420 156 050 051 040 173 012 040 040 143 150 145 143 153 123 164 141
0075440 143 153 103 157 157 153 151 145 050 051 073 012 040 040 012 040
0075460 040 143 141 154 154 122 165 156 164 151 155 145 103 141 154 154
0075500 142 141 143 153 163 050 137 137 101 124 115 101 111 116 137 137
0075520 051 073 012 175 012 012 146 165 156 143 164 151 157 156 040 145
0075540 170 151 164 122 165 156 164 151 155 145 050 051 040 173 012 040
0075560 040 143 150 145 143 153 123 164 141 143 153 103 157 157 153 151
0075600 145 050 051 073 012 040 040 137 137 137 146 165 156 143 163 137
0075620 157 156 137 145 170 151 164 050 051 073 040 057 057 040 116 141
0075640 164 151 166 145 040 141 164 145 170 151 164 050 051 040 146 165
0075660 156 143 164 151 157 156 163 012 040 040 143 141 154 154 122 165
0075700 156 164 151 155 145 103 141 154 154 142 141 143 153 163 050 137
0075720 137 101 124 105 130 111 124 137 137 051 073 012 040 040 146 154
0075740 165 163 150 137 116 117 137 106 111 114 105 123 131 123 124 105
0075760 115 050 051 012 040 040 162 165 156 164 151 155 145 105 170 151
0076000 164 145 144 040 075 040 164 162 165 145 073 012 175 012 012 146
0076020 165 156 143 164 151 157 156 040 160 157 163 164 122 165 156 050
0076040 051 040 173 012 040 040 143 150 145 143 153 123 164 141 143 153
0076060 103 157 157 153 151 145 050 051 073 012 012 040 040 151 146 040
0076100 050 115 157 144 165 154 145 133 047 160 157 163 164 122 165 156
0076120 047 135 051 040 173 012 040 040 040 040 151 146 040 050 164 171
0076140 160 145 157 146 040 115 157 144 165 154 145 133 047 160 157 163
0076160 164 122 165 156 047 135 040 075 075 040 047 146 165 156 143 164
0076200 151 157 156 047 051 040 115 157 144 165 154 145 133 047 160 157
0076220 163 164 122 165 156 047 135 040 075 040 133 115 157 144 165 154
0076240 145 133 047 160 157 163 164 122 165 156 047 135 135 073 012 040
0076260 040 040 040 167 150 151 154 145 040 050 115 157 144 165 154 145
0076300 133 047 160 157 163 164 122 165 156 047 135 056 154 145 156 147
0076320 164 150 051 040 173 012 040 040 040 040 040 040 141 144 144 117
0076340 156 120 157 163 164 122 165 156 050 115 157 144 165 154 145 133
0076360 047 160 157 163 164 122 165 156 047 135 056 163 150 151 146 164
0076400 050 051 051 073 012 040 040 040 040 175 012 040 040 175 012 012
0076420 040 040 143 141 154 154 122 165 156 164 151 155 145 103 141 154
0076440 154 142 141 143 153 163 050 137 137 101 124 120 117 123 124 122
0076460 125 116 137 137 051 073 012 175 012 012 146 165 156 143 164 151
0076500 157 156 040 141 144 144 117 156 120 162 145 122 165 156 050 143
0076520 142 051 040 173 012 040 040 137 137 101 124 120 122 105 122 125
0076540 116 137 137 056 165 156 163 150 151 146 164 050 143 142 051 073
0076560 012 175 012 012 146 165 156 143 164 151 157 156 040 141 144 144
0076600 117 156 111 156 151 164 050 143 142 051 040 173 012 040 040 137
0076620 137 101 124 111 116 111 124 137 137 056 165 156 163 150 151 146
0076640 164 050 143 142 051 073 012 175 012 012 146 165 156 143 164 151
0076660 157 156 040 141 144 144 117 156 120 162 145 115 141 151 156 050
0076700 143 142 051 040 173 012 040 040 137 137 101 124 115 101 111 116
0076720 137 137 056 165 156 163 150 151 146 164 050 143 142 051 073 012
0076740 175 012 012 146 165 156 143 164 151 157 156 040 141 144 144 117
0076760 156 105 170 151 164 050 143 142 051 040 173 012 040 040 137 137
0077000 101 124 105 130 111 124 137 137 056 165 156 163 150 151 146 164
0077020 050 143 142 051 073 012 175 012 012 146 165 156 143 164 151 157
0077040 156 040 141 144 144 117 156 120 157 163 164 122 165 156 050 143
0077060 142 051 040 173 012 040 040 137 137 101 124 120 117 123 124 122
0077100 125 116 137 137 056 165 156 163 150 151 146 164 050 143 142 051
0077120 073 012 175 012 012 057 057 040 151 156 143 154 165 144 145 072
0077140 040 162 165 156 164 151 155 145 137 155 141 164 150 056 152 163
0077160 012 012 012 057 057 040 150 164 164 160 163 072 057 057 144 145
0077200 166 145 154 157 160 145 162 056 155 157 172 151 154 154 141 056
0077220 157 162 147 057 145 156 055 125 123 057 144 157 143 163 057 127
0077240 145 142 057 112 141 166 141 123 143 162 151 160 164 057 122 145
0077260 146 145 162 145 156 143 145 057 107 154 157 142 141 154 137 117
0077300 142 152 145 143 164 163 057 115 141 164 150 057 151 155 165 154
0077320 012 012 057 057 040 150 164 164 160 163 072 057 057 144 145 166
0077340 145 154 157 160 145 162 056 155 157 172 151 154 154 141 056 157
0077360 162 147 057 145 156 055 125 123 057 144 157 143 163 057 127 145
0077400 142 057 112 141 166 141 123 143 162 151 160 164 057 122 145 146
0077420 145 162 145 156 143 145 057 107 154 157 142 141 154 137 117 142
0077440 152 145 143 164 163 057 115 141 164 150 057 146 162 157 165 156
0077460 144 012 012 057 057 040 150 164 164 160 163 072 057 057 144 145
0077500 166 145 154 157 160 145 162 056 155 157 172 151 154 154 141 056
0077520 157 162 147 057 145 156 055 125 123 057 144 157 143 163 057 127
0077540 145 142 057 112 141 166 141 123 143 162 151 160 164 057 122 145
0077560 146 145 162 145 156 143 145 057 107 154 157 142 141 154 137 117
0077600 142 152 145 143 164 163 057 115 141 164 150 057 143 154 172 063
0077620 062 012 012 057 057 040 150 164 164 160 163 072 057 057 144 145
0077640 166 145 154 157 160 145 162 056 155 157 172 151 154 154 141 056
0077660 157 162 147 057 145 156 055 125 123 057 144 157 143 163 057 127
0077700 145 142 057 112 141 166 141 123 143 162 151 160 164 057 122 145
0077720 146 145 162 145 156 143 145 057 107 154 157 142 141 154 137 117
0077740 142 152 145 143 164 163 057 115 141 164 150 057 164 162 165 156
0077760 143 012 012 141 163 163 145 162 164 050 115 141 164 150 056 151
0100000 155 165 154 054 040 047 124 150 151 163 040 142 162 157 167 163
0100020 145 162 040 144 157 145 163 040 156 157 164 040 163 165 160 160
0100040 157 162 164 040 115 141 164 150 056 151 155 165 154 050 051 054
0100060 040 142 165 151 154 144 040 167 151 164 150 040 114 105 107 101
0100100 103 131 137 126 115 137 123 125 120 120 117 122 124 040 157 162
0100120 040 120 117 114 131 106 111 114 114 137 117 114 104 137 115 101
0100140 124 110 137 106 125 116 103 124 111 117 116 123 040 164 157 040
0100160 141 144 144 040 151 156 040 141 040 160 157 154 171 146 151 154
0100200 154 047 051 073 012 141 163 163 145 162 164 050 115 141 164 150
0100220 056 146 162 157 165 156 144 054 040 047 124 150 151 163 040 142
0100240 162 157 167 163 145 162 040 144 157 145 163 040 156 157 164 040
0100260 163 165 160 160 157 162 164 040 115 141 164 150 056 146 162 157
0100300 165 156 144 050 051 054 040 142 165 151 154 144 040 167 151 164
0100320 150 040 114 105 107 101 103 131 137 126 115 137 123 125 120 120
0100340 117 122 124 040 157 162 040 120 117 114 131 106 111 114 114 137
0100360 117 114 104 137 115 101 124 110 137 106 125 116 103 124 111 117
0100400 116 123 040 164 157 040 141 144 144 040 151 156 040 141 040 160
0100420 157 154 171 146 151 154 154 047 051 073 012 141 163 163 145 162
0100440 164 050 115 141 164 150 056 143 154 172 063 062 054 040 047 124
0100460 150 151 163 040 142 162 157 167 163 145 162 040 144 157 145 163
0100500 040 156 157 164 040 163 165 160 160 157 162 164 040 115 141 164
0100520 150 056 143 154 172 063 062 050 051 054 040 142 165 151 154 144
0100540 040 167 151 164 150 040 114 105 107 101 103 131 137 126 115 137
0100560 123 125 120 120 117 122 124 040 157 162 040 120 117 114 131 106
0100600 111 114 114 137 117 114 104 137 115 101 124 110 137 106 125 116
0100620 103 124 111 117 116 123 040 164 157 040 141 144 144 040 151 156
0100640 040 141 040 160 157 154 171 146 151 154 154 047 051 073 012 141
0100660 163 163 145 162 164 050 115 141 164 150 056 164 162 165 156 143
0100700 054 040 047 124 150 151 163 040 142 162 157 167 163 145 162 040
0100720 144 157 145 163 040 156 157 164 040 163 165 160 160 157 162 164
0100740 040 115 141 164 150 056 164 162 165 156 143 050 051 054 040 142
0100760 165 151 154 144 040 167 151 164 150 040 114 105 107 101 103 131
0101000 137 126 115 137 123 125 120 120 117 122 124 040 157 162 040 120
0101020 117 114 131 106 111 114 114 137 117 114 104 137 115 101 124 110
0101040 137 106 125 116 103 124 111 117 116 123 040 164 157 040 141 144
0101060 144 040 151 156 040 141 040 160 157 154 171 146 151 154 154 047
0101100 051 073 012 012 057 057 040 145 156 144 040 151 156 143 154 165
0101120 144 145 072 040 162 165 156 164 151 155 145 137 155 141 164 150
0101140 056 152 163 012 057 057 040 101 040 143 157 165 156 164 145 162
0101160 040 157 146 040 144 145 160 145 156 144 145 156 143 151 145 163
0101200 040 146 157 162 040 143 141 154 154 151 156 147 040 162 165 156
0101220 050 051 056 040 111 146 040 167 145 040 156 145 145 144 040 164
0101240 157 012 057 057 040 144 157 040 141 163 171 156 143 150 162 157
0101260 156 157 165 163 040 167 157 162 153 040 142 145 146 157 162 145
0101300 040 162 165 156 156 151 156 147 054 040 151 156 143 162 145 155
0101320 145 156 164 040 164 150 151 163 040 141 156 144 012 057 057 040
0101340 144 145 143 162 145 155 145 156 164 040 151 164 056 040 111 156
0101360 143 162 145 155 145 156 164 151 156 147 040 155 165 163 164 040
0101400 150 141 160 160 145 156 040 151 156 040 141 040 160 154 141 143
0101420 145 040 154 151 153 145 012 057 057 040 115 157 144 165 154 145
0101440 056 160 162 145 122 165 156 040 050 165 163 145 144 040 142 171
0101460 040 145 155 143 143 040 164 157 040 141 144 144 040 146 151 154
0101500 145 040 160 162 145 154 157 141 144 151 156 147 051 056 012 057
0101520 057 040 116 157 164 145 040 164 150 141 164 040 171 157 165 040
0101540 143 141 156 040 141 144 144 040 144 145 160 145 156 144 145 156
0101560 143 151 145 163 040 151 156 040 160 162 145 122 165 156 054 040
0101600 145 166 145 156 040 164 150 157 165 147 150 012 057 057 040 151
0101620 164 040 150 141 160 160 145 156 163 040 162 151 147 150 164 040
0101640 142 145 146 157 162 145 040 162 165 156 040 055 040 162 165 156
0101660 040 167 151 154 154 040 142 145 040 160 157 163 164 160 157 156
0101700 145 144 040 165 156 164 151 154 012 057 057 040 164 150 145 040
0101720 144 145 160 145 156 144 145 156 143 151 145 163 040 141 162 145
0101740 040 155 145 164 056 012 166 141 162 040 162 165 156 104 145 160
0101760 145 156 144 145 156 143 151 145 163 040 075 040 060 073 012 166
0102000 141 162 040 162 165 156 104 145 160 145 156 144 145 156 143 171
0102020 127 141 164 143 150 145 162 040 075 040 156 165 154 154 073 012
0102040 166 141 162 040 144 145 160 145 156 144 145 156 143 151 145 163
0102060 106 165 154 146 151 154 154 145 144 040 075 040 156 165 154 154
0102100 073 040 057 057 040 157 166 145 162 162 151 144 144 145 156 040
0102120 164 157 040 164 141 153 145 040 144 151 146 146 145 162 145 156
0102140 164 040 141 143 164 151 157 156 163 040 167 150 145 156 040 141
0102160 154 154 040 162 165 156 040 144 145 160 145 156 144 145 156 143
0102200 151 145 163 040 141 162 145 040 146 165 154 146 151 154 154 145
0102220 144 012 166 141 162 040 162 165 156 104 145 160 145 156 144 145
0102240 156 143 171 124 162 141 143 153 151 156 147 040 075 040 173 175
0102260 073 012 012 146 165 156 143 164 151 157 156 040 147 145 164 125
0102300 156 151 161 165 145 122 165 156 104 145 160 145 156 144 145 156
0102320 143 171 050 151 144 051 040 173 012 040 040 166 141 162 040 157
0102340 162 151 147 040 075 040 151 144 073 012 040 040 167 150 151 154
0102360 145 040 050 061 051 040 173 012 040 040 040 040 151 146 040 050
0102400 041 162 165 156 104 145 160 145 156 144 145 156 143 171 124 162
0102420 141 143 153 151 156 147 133 151 144 135 051 040 162 145 164 165
0102440 162 156 040 151 144 073 012 040 040 040 040 151 144 040 075 040
0102460 157 162 151 147 040 053 040 115 141 164 150 056 162 141 156 144
0102500 157 155 050 051 073 012 040 040 175 012 175 012 012 146 165 156
0102520 143 164 151 157 156 040 141 144 144 122 165 156 104 145 160 145
0102540 156 144 145 156 143 171 050 151 144 051 040 173 012 040 040 162
0102560 165 156 104 145 160 145 156 144 145 156 143 151 145 163 053 053
0102600 073 012 012 040 040 151 146 040 050 115 157 144 165 154 145 133
0102620 047 155 157 156 151 164 157 162 122 165 156 104 145 160 145 156
0102640 144 145 156 143 151 145 163 047 135 051 040 173 012 040 040 040
0102660 040 115 157 144 165 154 145 133 047 155 157 156 151 164 157 162
0102700 122 165 156 104 145 160 145 156 144 145 156 143 151 145 163 047
0102720 135 050 162 165 156 104 145 160 145 156 144 145 156 143 151 145
0102740 163 051 073 012 040 040 175 012 012 040 040 151 146 040 050 151
0102760 144 051 040 173 012 040 040 040 040 141 163 163 145 162 164 050
0103000 041 162 165 156 104 145 160 145 156 144 145 156 143 171 124 162
0103020 141 143 153 151 156 147 133 151 144 135 051 073 012 040 040 040
0103040 040 162 165 156 104 145 160 145 156 144 145 156 143 171 124 162
0103060 141 143 153 151 156 147 133 151 144 135 040 075 040 061 073 012
0103100 040 040 040 040 151 146 040 050 162 165 156 104 145 160 145 156
0103120 144 145 156 143 171 127 141 164 143 150 145 162 040 075 075 075
0103140 040 156 165 154 154 040 046 046 040 164 171 160 145 157 146 040
0103160 163 145 164 111 156 164 145 162 166 141 154 040 041 075 040 047
0103200 165 156 144 145 146 151 156 145 144 047 051 040 173 012 040 040
0103220 040 040 040 040 057 057 040 103 150 145 143 153 040 146 157 162
0103240 040 155 151 163 163 151 156 147 040 144 145 160 145 156 144 145
0103260 156 143 151 145 163 040 145 166 145 162 171 040 146 145 167 040
0103300 163 145 143 157 156 144 163 012 040 040 040 040 040 040 162 165
0103320 156 104 145 160 145 156 144 145 156 143 171 127 141 164 143 150
0103340 145 162 040 075 040 163 145 164 111 156 164 145 162 166 141 154
0103360 050 146 165 156 143 164 151 157 156 050 051 040 173 012 040 040
0103400 040 040 040 040 040 040 151 146 040 050 101 102 117 122 124 051
0103420 040 173 012 040 040 040 040 040 040 040 040 040 040 143 154 145
0103440 141 162 111 156 164 145 162 166 141 154 050 162 165 156 104 145
0103460 160 145 156 144 145 156 143 171 127 141 164 143 150 145 162 051
0103500 073 012 040 040 040 040 040 040 040 040 040 040 162 165 156 104
0103520 145 160 145 156 144 145 156 143 171 127 141 164 143 150 145 162
0103540 040 075 040 156 165 154 154 073 012 040 040 040 040 040 040 040
0103560 040 040 040 162 145 164 165 162 156 073 012 040 040 040 040 040
0103600 040 040 040 175 012 040 040 040 040 040 040 040 040 166 141 162
0103620 040 163 150 157 167 156 040 075 040 146 141 154 163 145 073 012
0103640 040 040 040 040 040 040 040 040 146 157 162 040 050 166 141 162
0103660 040 144 145 160 040 151 156 040 162 165 156 104 145 160 145 156
0103700 144 145 156 143 171 124 162 141 143 153 151 156 147 051 040 173
0103720 012 040 040 040 040 040 040 040 040 040 040 151 146 040 050 041
0103740 163 150 157 167 156 051 040 173 012 040 040 040 040 040 040 040
0103760 040 040 040 040 040 163 150 157 167 156 040 075 040 164 162 165
0104000 145 073 012 040 040 040 040 040 040 040 040 040 040 040 040 145
0104020 162 162 050 047 163 164 151 154 154 040 167 141 151 164 151 156
0104040 147 040 157 156 040 162 165 156 040 144 145 160 145 156 144 145
0104060 156 143 151 145 163 072 047 051 073 012 040 040 040 040 040 040
0104100 040 040 040 040 175 012 040 040 040 040 040 040 040 040 040 040
0104120 145 162 162 050 047 144 145 160 145 156 144 145 156 143 171 072
0104140 040 047 040 053 040 144 145 160 051 073 012 040 040 040 040 040
0104160 040 040 040 175 012 040 040 040 040 040 040 040 040 151 146 040
0104200 050 163 150 157 167 156 051 040 173 012 040 040 040 040 040 040
0104220 040 040 040 040 145 162 162 050 047 050 145 156 144 040 157 146
0104240 040 154 151 163 164 051 047 051 073 012 040 040 040 040 040 040
0104260 040 040 175 012 040 040 040 040 040 040 175 054 040 061 060 060
0104300 060 060 051 073 012 040 040 040 040 175 012 040 040 175 040 145
0104320 154 163 145 040 173 012 040 040 040 040 145 162 162 050 047 167
0104340 141 162 156 151 156 147 072 040 162 165 156 040 144 145 160 145
0104360 156 144 145 156 143 171 040 141 144 144 145 144 040 167 151 164
0104400 150 157 165 164 040 111 104 047 051 073 012 040 040 175 012 175
0104420 012 012 146 165 156 143 164 151 157 156 040 162 145 155 157 166
0104440 145 122 165 156 104 145 160 145 156 144 145 156 143 171 050 151
0104460 144 051 040 173 012 040 040 162 165 156 104 145 160 145 156 144
0104500 145 156 143 151 145 163 055 055 073 012 012 040 040 151 146 040
0104520 050 115 157 144 165 154 145 133 047 155 157 156 151 164 157 162
0104540 122 165 156 104 145 160 145 156 144 145 156 143 151 145 163 047
0104560 135 051 040 173 012 040 040 040 040 115 157 144 165 154 145 133
0104600 047 155 157 156 151 164 157 162 122 165 156 104 145 160 145 156
0104620 144 145 156 143 151 145 163 047 135 050 162 165 156 104 145 160
0104640 145 156 144 145 156 143 151 145 163 051 073 012 040 040 175 012
0104660 012 040 040 151 146 040 050 151 144 051 040 173 012 040 040 040
0104700 040 141 163 163 145 162 164 050 162 165 156 104 145 160 145 156
0104720 144 145 156 143 171 124 162 141 143 153 151 156 147 133 151 144
0104740 135 051 073 012 040 040 040 040 144 145 154 145 164 145 040 162
0104760 165 156 104 145 160 145 156 144 145 156 143 171 124 162 141 143
0105000 153 151 156 147 133 151 144 135 073 012 040 040 175 040 145 154
0105020 163 145 040 173 012 040 040 040 040 145 162 162 050 047 167 141
0105040 162 156 151 156 147 072 040 162 165 156 040 144 145 160 145 156
0105060 144 145 156 143 171 040 162 145 155 157 166 145 144 040 167 151
0105100 164 150 157 165 164 040 111 104 047 051 073 012 040 040 175 012
0105120 040 040 151 146 040 050 162 165 156 104 145 160 145 156 144 145
0105140 156 143 151 145 163 040 075 075 040 060 051 040 173 012 040 040
0105160 040 040 151 146 040 050 162 165 156 104 145 160 145 156 144 145
0105200 156 143 171 127 141 164 143 150 145 162 040 041 075 075 040 156
0105220 165 154 154 051 040 173 012 040 040 040 040 040 040 143 154 145
0105240 141 162 111 156 164 145 162 166 141 154 050 162 165 156 104 145
0105260 160 145 156 144 145 156 143 171 127 141 164 143 150 145 162 051
0105300 073 012 040 040 040 040 040 040 162 165 156 104 145 160 145 156
0105320 144 145 156 143 171 127 141 164 143 150 145 162 040 075 040 156
0105340 165 154 154 073 012 040 040 040 040 175 012 040 040 040 040 151
0105360 146 040 050 144 145 160 145 156 144 145 156 143 151 145 163 106
0105400 165 154 146 151 154 154 145 144 051 040 173 012 040 040 040 040
0105420 040 040 166 141 162 040 143 141 154 154 142 141 143 153 040 075
0105440 040 144 145 160 145 156 144 145 156 143 151 145 163 106 165 154
0105460 146 151 154 154 145 144 073 012 040 040 040 040 040 040 144 145
0105500 160 145 156 144 145 156 143 151 145 163 106 165 154 146 151 154
0105520 154 145 144 040 075 040 156 165 154 154 073 012 040 040 040 040
0105540 040 040 143 141 154 154 142 141 143 153 050 051 073 040 057 057
0105560 040 143 141 156 040 141 144 144 040 141 156 157 164 150 145 162
0105600 040 144 145 160 145 156 144 145 156 143 151 145 163 106 165 154
0105620 146 151 154 154 145 144 012 040 040 040 040 175 012 040 040 175
0105640 012 175 012 012 057 052 052 040 100 160 141 162 141 155 040 173
0105660 163 164 162 151 156 147 174 156 165 155 142 145 162 075 175 040
0105700 167 150 141 164 040 052 057 012 146 165 156 143 164 151 157 156
0105720 040 141 142 157 162 164 050 167 150 141 164 051 040 173 012 040
0105740 040 173 012 040 040 040 040 151 146 040 050 115 157 144 165 154
0105760 145 133 047 157 156 101 142 157 162 164 047 135 051 040 173 012
0106000 040 040 040 040 040 040 115 157 144 165 154 145 133 047 157 156
0106020 101 142 157 162 164 047 135 050 167 150 141 164 051 073 012 040
0106040 040 040 040 175 012 040 040 175 012 012 040 040 167 150 141 164
0106060 040 075 040 047 101 142 157 162 164 145 144 050 047 040 053 040
0106100 167 150 141 164 040 053 040 047 051 047 073 012 040 040 057 057
0106120 040 124 117 104 117 050 163 142 143 051 072 040 123 150 157 165
0106140 154 144 040 167 145 040 162 145 155 157 166 145 040 160 162 151
0106160 156 164 151 156 147 040 141 156 144 040 154 145 141 166 145 040
0106200 151 164 040 165 160 040 164 157 040 167 150 157 145 166 145 162
0106220 012 040 040 057 057 040 143 141 164 143 150 145 163 040 164 150
0106240 145 040 145 170 143 145 160 164 151 157 156 077 012 040 040 145
0106260 162 162 050 167 150 141 164 051 073 012 012 040 040 101 102 117
0106300 122 124 040 075 040 164 162 165 145 073 012 040 040 105 130 111
0106320 124 123 124 101 124 125 123 040 075 040 061 073 012 012 040 040
0106340 057 057 040 125 163 145 040 141 040 167 141 163 155 040 162 165
0106360 156 164 151 155 145 040 145 162 162 157 162 054 040 142 145 143
0106400 141 165 163 145 040 141 040 112 123 040 145 162 162 157 162 040
0106420 155 151 147 150 164 040 142 145 040 163 145 145 156 040 141 163
0106440 040 141 040 146 157 162 145 151 147 156 012 040 040 057 057 040
0106460 145 170 143 145 160 164 151 157 156 054 040 167 150 151 143 150
0106500 040 155 145 141 156 163 040 167 145 047 144 040 162 165 156 040
0106520 144 145 163 164 162 165 143 164 157 162 163 040 157 156 040 151
0106540 164 056 040 127 145 040 156 145 145 144 040 164 150 145 040 145
0106560 162 162 157 162 040 164 157 012 040 040 057 057 040 163 151 155
0106600 160 154 171 040 155 141 153 145 040 164 150 145 040 160 162 157
0106620 147 162 141 155 040 163 164 157 160 056 012 040 040 057 057 040
0106640 106 111 130 115 105 040 124 150 151 163 040 141 160 160 162 157
0106660 141 143 150 040 144 157 145 163 040 156 157 164 040 167 157 162
0106700 153 040 151 156 040 127 141 163 155 040 105 110 040 142 145 143
0106720 141 165 163 145 040 151 164 040 143 165 162 162 145 156 164 154
0106740 171 040 144 157 145 163 040 156 157 164 040 141 163 163 165 155
0106760 145 012 040 040 057 057 040 141 154 154 040 122 165 156 164 151
0107000 155 145 105 162 162 157 162 163 040 141 162 145 040 146 162 157
0107020 155 040 164 162 141 160 163 073 040 151 164 040 144 145 143 151
0107040 144 145 163 040 167 150 145 164 150 145 162 040 141 040 122 165
0107060 156 164 151 155 145 105 162 162 157 162 040 151 163 040 146 162
0107100 157 155 012 040 040 057 057 040 141 040 164 162 141 160 040 157
0107120 162 040 156 157 164 040 142 141 163 145 144 040 157 156 040 141
0107140 040 150 151 144 144 145 156 040 146 151 145 154 144 040 167 151
0107160 164 150 151 156 040 164 150 145 040 157 142 152 145 143 164 056
0107200 040 123 157 040 141 164 040 164 150 145 040 155 157 155 145 156
0107220 164 012 040 040 057 057 040 167 145 040 144 157 156 047 164 040
0107240 150 141 166 145 040 141 040 167 141 171 040 157 146 040 164 150
0107260 162 157 167 151 156 147 040 141 040 167 141 163 155 040 164 162
0107300 141 160 040 146 162 157 155 040 112 123 056 040 124 117 104 117
0107320 040 115 141 153 145 040 141 040 112 123 040 101 120 111 040 164
0107340 150 141 164 012 040 040 057 057 040 141 154 154 157 167 163 040
0107360 164 150 151 163 040 151 156 040 164 150 145 040 167 141 163 155
0107400 040 163 160 145 143 056 012 012 040 040 057 057 040 123 165 160
0107420 160 162 145 163 163 040 143 154 157 163 165 162 145 040 143 157
0107440 155 160 151 154 145 162 040 167 141 162 156 151 156 147 040 150
0107460 145 162 145 056 040 103 154 157 163 165 162 145 040 143 157 155
0107500 160 151 154 145 162 047 163 040 142 165 151 154 164 151 156 040
0107520 145 170 164 145 162 156 012 040 040 057 057 040 144 145 146 151
0107540 156 164 151 157 156 040 146 157 162 040 127 145 142 101 163 163
0107560 145 155 142 154 171 056 122 165 156 164 151 155 145 105 162 162
0107600 157 162 040 143 154 141 151 155 163 040 151 164 040 164 141 153
0107620 145 163 040 156 157 040 141 162 147 165 155 145 156 164 163 040
0107640 145 166 145 156 012 040 040 057 057 040 164 150 157 165 147 150
0107660 040 151 164 040 143 141 156 056 012 040 040 057 057 040 124 117
0107700 104 117 050 150 164 164 160 163 072 057 057 147 151 164 150 165
0107720 142 056 143 157 155 057 147 157 157 147 154 145 057 143 154 157
0107740 163 165 162 145 055 143 157 155 160 151 154 145 162 057 160 165
0107760 154 154 057 063 071 061 063 051 072 040 122 145 155 157 166 145
0110000 040 151 146 057 167 150 145 156 040 165 160 163 164 162 145 141
0110020 155 040 143 154 157 163 165 162 145 040 147 145 164 163 040 146
0110040 151 170 145 144 056 012 040 040 057 052 052 040 100 163 165 160
0110060 160 162 145 163 163 040 173 143 150 145 143 153 124 171 160 145
0110100 163 175 040 052 057 012 040 040 166 141 162 040 145 040 075 040
0110120 156 145 167 040 127 145 142 101 163 163 145 155 142 154 171 056
0110140 122 165 156 164 151 155 145 105 162 162 157 162 050 167 150 141
0110160 164 051 073 012 012 040 040 057 057 040 124 150 162 157 167 040
0110200 164 150 145 040 145 162 162 157 162 040 167 150 145 164 150 145
0110220 162 040 157 162 040 156 157 164 040 115 117 104 125 114 101 122
0110240 111 132 105 040 151 163 040 163 145 164 040 142 145 143 141 165
0110260 163 145 040 141 142 157 162 164 040 151 163 040 165 163 145 144
0110300 012 040 040 057 057 040 151 156 040 143 157 144 145 040 160 141
0110320 164 150 163 040 141 160 141 162 164 040 146 162 157 155 040 151
0110340 156 163 164 141 156 164 151 141 164 151 157 156 040 167 150 145
0110360 162 145 040 141 156 040 145 170 143 145 160 164 151 157 156 040
0110400 151 163 040 145 170 160 145 143 164 145 144 012 040 040 057 057
0110420 040 164 157 040 142 145 040 164 150 162 157 167 156 040 167 150
0110440 145 156 040 141 142 157 162 164 040 151 163 040 143 141 154 154
0110460 145 144 056 012 040 040 164 150 162 157 167 040 145 073 012 175
0110500 012 012 057 057 040 173 173 115 105 115 137 111 116 111 124 111
0110520 101 114 111 132 105 122 175 175 012 012 057 057 040 151 156 143
0110540 154 165 144 145 072 040 155 145 155 157 162 171 160 162 157 146
0110560 151 154 145 162 056 152 163 012 012 012 057 057 040 145 156 144
0110600 040 151 156 143 154 165 144 145 072 040 155 145 155 157 162 171
0110620 160 162 157 146 151 154 145 162 056 152 163 012 057 057 040 163
0110640 150 157 167 040 145 162 162 157 162 163 040 157 156 040 154 151
0110660 153 145 154 171 040 143 141 154 154 163 040 164 157 040 106 123
0110700 040 167 150 145 156 040 151 164 040 167 141 163 040 156 157 164
0110720 040 151 156 143 154 165 144 145 144 012 166 141 162 040 106 123
0110740 040 075 040 173 012 040 040 145 162 162 157 162 072 040 146 165
0110760 156 143 164 151 157 156 050 051 040 173 012 040 040 040 040 141
0111000 142 157 162 164 050 047 106 151 154 145 163 171 163 164 145 155
0111020 040 163 165 160 160 157 162 164 040 050 106 123 051 040 167 141
0111040 163 040 156 157 164 040 151 156 143 154 165 144 145 144 056 040
0111060 124 150 145 040 160 162 157 142 154 145 155 040 151 163 040 164
0111100 150 141 164 040 171 157 165 040 141 162 145 040 165 163 151 156
0111120 147 040 146 151 154 145 163 040 146 162 157 155 040 112 123 054
0111140 040 142 165 164 040 146 151 154 145 163 040 167 145 162 145 040
0111160 156 157 164 040 165 163 145 144 040 146 162 157 155 040 103 057
0111200 103 053 053 054 040 163 157 040 146 151 154 145 163 171 163 164
0111220 145 155 040 163 165 160 160 157 162 164 040 167 141 163 040 156
0111240 157 164 040 141 165 164 157 055 151 156 143 154 165 144 145 144
0111260 056 040 131 157 165 040 143 141 156 040 146 157 162 143 145 055
0111300 151 156 143 154 165 144 145 040 146 151 154 145 163 171 163 164
0111320 145 155 040 163 165 160 160 157 162 164 040 167 151 164 150 040
0111340 055 163 106 117 122 103 105 137 106 111 114 105 123 131 123 124
0111360 105 115 047 051 073 012 040 040 175 054 012 040 040 151 156 151
0111400 164 072 040 146 165 156 143 164 151 157 156 050 051 040 173 040
0111420 106 123 056 145 162 162 157 162 050 051 040 175 054 012 040 040
0111440 143 162 145 141 164 145 104 141 164 141 106 151 154 145 072 040
0111460 146 165 156 143 164 151 157 156 050 051 040 173 040 106 123 056
0111500 145 162 162 157 162 050 051 040 175 054 012 040 040 143 162 145
0111520 141 164 145 120 162 145 154 157 141 144 145 144 106 151 154 145
0111540 072 040 146 165 156 143 164 151 157 156 050 051 040 173 040 106
0111560 123 056 145 162 162 157 162 050 051 040 175 054 012 040 040 143
0111600 162 145 141 164 145 114 141 172 171 106 151 154 145 072 040 146
0111620 165 156 143 164 151 157 156 050 051 040 173 040 106 123 056 145
0111640 162 162 157 162 050 051 040 175 054 012 040 040 157 160 145 156
0111660 072 040 146 165 156 143 164 151 157 156 050 051 040 173 040 106
0111700 123 056 145 162 162 157 162 050 051 040 175 054 012 040 040 155
0111720 153 144 145 166 072 040 146 165 156 143 164 151 157 156 050 051
0111740 040 173 040 106 123 056 145 162 162 157 162 050 051 040 175 054
0111760 012 040 040 162 145 147 151 163 164 145 162 104 145 166 151 143
0112000 145 072 040 146 165 156 143 164 151 157 156 050 051 040 173 040
0112020 106 123 056 145 162 162 157 162 050 051 040 175 054 012 040 040
0112040 141 156 141 154 171 172 145 120 141 164 150 072 040 146 165 156
0112060 143 164 151 157 156 050 051 040 173 040 106 123 056 145 162 162
0112100 157 162 050 051 040 175 054 012 040 040 154 157 141 144 106 151
0112120 154 145 163 106 162 157 155 104 102 072 040 146 165 156 143 164
0112140 151 157 156 050 051 040 173 040 106 123 056 145 162 162 157 162
0112160 050 051 040 175 054 012 012 040 040 105 162 162 156 157 105 162
0112200 162 157 162 072 040 146 165 156 143 164 151 157 156 040 105 162
0112220 162 156 157 105 162 162 157 162 050 051 040 173 040 106 123 056
0112240 145 162 162 157 162 050 051 040 175 054 012 175 073 012 115 157
0112260 144 165 154 145 133 047 106 123 137 143 162 145 141 164 145 104
0112300 141 164 141 106 151 154 145 047 135 040 075 040 106 123 056 143
0112320 162 145 141 164 145 104 141 164 141 106 151 154 145 073 012 115
0112340 157 144 165 154 145 133 047 106 123 137 143 162 145 141 164 145
0112360 120 162 145 154 157 141 144 145 144 106 151 154 145 047 135 040
0112400 075 040 106 123 056 143 162 145 141 164 145 120 162 145 154 157
0112420 141 144 145 144 106 151 154 145 073 012 012 057 057 040 151 156
0112440 143 154 165 144 145 072 040 125 122 111 125 164 151 154 163 056
0112460 152 163 012 012 012 057 057 040 120 162 145 146 151 170 040 157
0112500 146 040 144 141 164 141 040 125 122 111 163 040 145 155 151 164
0112520 164 145 144 040 142 171 040 123 111 116 107 114 105 137 106 111
0112540 114 105 040 141 156 144 040 162 145 154 141 164 145 144 040 157
0112560 160 164 151 157 156 163 056 012 166 141 162 040 144 141 164 141
0112600 125 122 111 120 162 145 146 151 170 040 075 040 047 144 141 164
0112620 141 072 141 160 160 154 151 143 141 164 151 157 156 057 157 143
0112640 164 145 164 055 163 164 162 145 141 155 073 142 141 163 145 066
0112660 064 054 047 073 012 012 057 057 040 111 156 144 151 143 141 164
0112700 145 163 040 167 150 145 164 150 145 162 040 146 151 154 145 156
0112720 141 155 145 040 151 163 040 141 040 142 141 163 145 066 064 040
0112740 144 141 164 141 040 125 122 111 056 012 146 165 156 143 164 151
0112760 157 156 040 151 163 104 141 164 141 125 122 111 050 146 151 154
0113000 145 156 141 155 145 051 040 173 012 040 040 057 057 040 120 162
0113020 145 146 151 170 040 157 146 040 144 141 164 141 040 125 122 111
0113040 163 040 145 155 151 164 164 145 144 040 142 171 040 123 111 116
0113060 107 114 105 137 106 111 114 105 040 141 156 144 040 162 145 154
0113100 141 164 145 144 040 157 160 164 151 157 156 163 056 012 040 040
0113120 162 145 164 165 162 156 040 146 151 154 145 156 141 155 145 056
0113140 163 164 141 162 164 163 127 151 164 150 050 144 141 164 141 125
0113160 122 111 120 162 145 146 151 170 051 073 012 175 012 012 057 057
0113200 040 111 156 144 151 143 141 164 145 163 040 167 150 145 164 150
0113220 145 162 040 146 151 154 145 156 141 155 145 040 151 163 040 144
0113240 145 154 151 166 145 162 145 144 040 166 151 141 040 146 151 154
0113260 145 040 160 162 157 164 157 143 157 154 040 050 141 163 040 157
0113300 160 160 157 163 145 144 040 164 157 040 150 164 164 160 057 150
0113320 164 164 160 163 051 012 146 165 156 143 164 151 157 156 040 151
0113340 163 106 151 154 145 125 122 111 050 146 151 154 145 156 141 155
0113360 145 051 040 173 012 040 040 162 145 164 165 162 156 040 146 151
0113400 154 145 156 141 155 145 056 163 164 141 162 164 163 127 151 164
0113420 150 050 047 146 151 154 145 072 057 057 047 051 073 012 175 012
0113440 012 057 057 040 145 156 144 040 151 156 143 154 165 144 145 072
0113460 040 125 122 111 125 164 151 154 163 056 152 163 012 057 052 052
0113500 040 100 160 141 162 141 155 040 173 142 157 157 154 145 141 156
0113520 075 175 040 146 151 170 145 144 141 163 155 040 052 057 012 146
0113540 165 156 143 164 151 157 156 040 143 162 145 141 164 145 105 170
0113560 160 157 162 164 127 162 141 160 160 145 162 050 156 141 155 145
0113600 054 040 146 151 170 145 144 141 163 155 051 040 173 012 040 040
0113620 162 145 164 165 162 156 040 146 165 156 143 164 151 157 156 050
0113640 051 040 173 012 040 040 040 040 166 141 162 040 144 151 163 160
0113660 154 141 171 116 141 155 145 040 075 040 156 141 155 145 073 012
0113700 040 040 040 040 166 141 162 040 141 163 155 040 075 040 146 151
0113720 170 145 144 141 163 155 073 012 040 040 040 040 151 146 040 050
0113740 041 146 151 170 145 144 141 163 155 051 040 173 012 040 040 040
0113760 040 040 040 141 163 155 040 075 040 115 157 144 165 154 145 133
0114000 047 141 163 155 047 135 073 012 040 040 040 040 175 012 040 040
0114020 040 040 141 163 163 145 162 164 050 162 165 156 164 151 155 145
0114040 111 156 151 164 151 141 154 151 172 145 144 054 040 047 156 141
0114060 164 151 166 145 040 146 165 156 143 164 151 157 156 040 140 047
0114100 040 053 040 144 151 163 160 154 141 171 116 141 155 145 040 053
0114120 040 047 140 040 143 141 154 154 145 144 040 142 145 146 157 162
0114140 145 040 162 165 156 164 151 155 145 040 151 156 151 164 151 141
0114160 154 151 172 141 164 151 157 156 047 051 073 012 040 040 040 040
0114200 141 163 163 145 162 164 050 041 162 165 156 164 151 155 145 105
0114220 170 151 164 145 144 054 040 047 156 141 164 151 166 145 040 146
0114240 165 156 143 164 151 157 156 040 140 047 040 053 040 144 151 163
0114260 160 154 141 171 116 141 155 145 040 053 040 047 140 040 143 141
0114300 154 154 145 144 040 141 146 164 145 162 040 162 165 156 164 151
0114320 155 145 040 145 170 151 164 040 050 165 163 145 040 116 117 137
0114340 105 130 111 124 137 122 125 116 124 111 115 105 040 164 157 040
0114360 153 145 145 160 040 151 164 040 141 154 151 166 145 040 141 146
0114400 164 145 162 040 155 141 151 156 050 051 040 145 170 151 164 163
0114420 051 047 051 073 012 040 040 040 040 151 146 040 050 041 141 163
0114440 155 133 156 141 155 145 135 051 040 173 012 040 040 040 040 040
0114460 040 141 163 163 145 162 164 050 141 163 155 133 156 141 155 145
0114500 135 054 040 047 145 170 160 157 162 164 145 144 040 156 141 164
0114520 151 166 145 040 146 165 156 143 164 151 157 156 040 140 047 040
0114540 053 040 144 151 163 160 154 141 171 116 141 155 145 040 053 040
0114560 047 140 040 156 157 164 040 146 157 165 156 144 047 051 073 012
0114600 040 040 040 040 175 012 040 040 040 040 162 145 164 165 162 156
0114620 040 141 163 155 133 156 141 155 145 135 056 141 160 160 154 171
0114640 050 156 165 154 154 054 040 141 162 147 165 155 145 156 164 163
0114660 051 073 012 040 040 175 073 012 175 012 012 166 141 162 040 167
0114700 141 163 155 102 151 156 141 162 171 106 151 154 145 073 012 040
0114720 040 167 141 163 155 102 151 156 141 162 171 106 151 154 145 040
0114740 075 040 047 143 157 156 146 164 145 163 164 056 167 141 163 155
0114760 047 073 012 040 040 151 146 040 050 041 151 163 104 141 164 141
0115000 125 122 111 050 167 141 163 155 102 151 156 141 162 171 106 151
0115020 154 145 051 051 040 173 012 040 040 040 040 167 141 163 155 102
0115040 151 156 141 162 171 106 151 154 145 040 075 040 154 157 143 141
0115060 164 145 106 151 154 145 050 167 141 163 155 102 151 156 141 162
0115100 171 106 151 154 145 051 073 012 040 040 175 012 012 146 165 156
0115120 143 164 151 157 156 040 147 145 164 102 151 156 141 162 171 050
0115140 146 151 154 145 051 040 173 012 040 040 164 162 171 040 173 012
0115160 040 040 040 040 151 146 040 050 146 151 154 145 040 075 075 040
0115200 167 141 163 155 102 151 156 141 162 171 106 151 154 145 040 046
0115220 046 040 167 141 163 155 102 151 156 141 162 171 051 040 173 012
0115240 040 040 040 040 040 040 162 145 164 165 162 156 040 156 145 167
0115260 040 125 151 156 164 070 101 162 162 141 171 050 167 141 163 155
0115300 102 151 156 141 162 171 051 073 012 040 040 040 040 175 012 040
0115320 040 040 040 151 146 040 050 162 145 141 144 102 151 156 141 162
0115340 171 051 040 173 012 040 040 040 040 040 040 162 145 164 165 162
0115360 156 040 162 145 141 144 102 151 156 141 162 171 050 146 151 154
0115400 145 051 073 012 040 040 040 040 175 012 040 040 040 040 164 150
0115420 162 157 167 040 042 142 157 164 150 040 141 163 171 156 143 040
0115440 141 156 144 040 163 171 156 143 040 146 145 164 143 150 151 156
0115460 147 040 157 146 040 164 150 145 040 167 141 163 155 040 146 141
0115500 151 154 145 144 042 073 012 040 040 175 012 040 040 143 141 164
0115520 143 150 040 050 145 162 162 051 040 173 012 040 040 040 040 141
0115540 142 157 162 164 050 145 162 162 051 073 012 040 040 175 012 175
0115560 012 012 146 165 156 143 164 151 157 156 040 147 145 164 102 151
0115600 156 141 162 171 120 162 157 155 151 163 145 050 051 040 173 012
0115620 040 040 057 057 040 111 146 040 167 145 040 144 157 156 047 164
0115640 040 150 141 166 145 040 164 150 145 040 142 151 156 141 162 171
0115660 040 171 145 164 054 040 164 162 171 040 164 157 040 164 157 040
0115700 154 157 141 144 040 151 164 040 141 163 171 156 143 150 162 157
0115720 156 157 165 163 154 171 056 012 040 040 057 057 040 106 145 164
0115740 143 150 040 150 141 163 040 163 157 155 145 040 141 144 144 151
0115760 164 151 157 156 141 154 040 162 145 163 164 162 151 143 164 151
0116000 157 156 163 040 157 166 145 162 040 130 110 122 054 040 154 151
0116020 153 145 040 151 164 040 143 141 156 047 164 040 142 145 040 165
0116040 163 145 144 040 157 156 040 141 040 146 151 154 145 072 057 057
0116060 040 165 162 154 056 012 040 040 057 057 040 123 145 145 040 150
0116100 164 164 160 163 072 057 057 147 151 164 150 165 142 056 143 157
0116120 155 057 147 151 164 150 165 142 057 146 145 164 143 150 057 160
0116140 165 154 154 057 071 062 043 151 163 163 165 145 143 157 155 155
0116160 145 156 164 055 061 064 060 066 066 065 071 063 062 012 040 040
0116200 057 057 040 103 157 162 144 157 166 141 040 157 162 040 105 154
0116220 145 143 164 162 157 156 040 141 160 160 163 040 141 162 145 040
0116240 164 171 160 151 143 141 154 154 171 040 154 157 141 144 145 144
0116260 040 146 162 157 155 040 141 040 146 151 154 145 072 057 057 040
0116300 165 162 154 056 012 040 040 057 057 040 123 157 040 165 163 145
0116320 040 146 145 164 143 150 040 151 146 040 151 164 040 151 163 040
0116340 141 166 141 151 154 141 142 154 145 040 141 156 144 040 164 150
0116360 145 040 165 162 154 040 151 163 040 156 157 164 040 141 040 146
0116400 151 154 145 054 040 157 164 150 145 162 167 151 163 145 040 146
0116420 141 154 154 040 142 141 143 153 040 164 157 040 130 110 122 056
0116440 012 040 040 151 146 040 050 041 167 141 163 155 102 151 156 141
0116460 162 171 040 046 046 040 050 105 116 126 111 122 117 116 115 105
0116500 116 124 137 111 123 137 127 105 102 040 174 174 040 105 116 126
0116520 111 122 117 116 115 105 116 124 137 111 123 137 127 117 122 113
0116540 105 122 051 051 040 173 012 040 040 040 040 151 146 040 050 164
0116560 171 160 145 157 146 040 146 145 164 143 150 040 075 075 040 047
0116600 146 165 156 143 164 151 157 156 047 012 040 040 040 040 040 040
0116620 046 046 040 041 151 163 106 151 154 145 125 122 111 050 167 141
0116640 163 155 102 151 156 141 162 171 106 151 154 145 051 012 040 040
0116660 040 040 051 040 173 012 040 040 040 040 040 040 162 145 164 165
0116700 162 156 040 146 145 164 143 150 050 167 141 163 155 102 151 156
0116720 141 162 171 106 151 154 145 054 040 173 040 143 162 145 144 145
0116740 156 164 151 141 154 163 072 040 047 163 141 155 145 055 157 162
0116760 151 147 151 156 047 040 175 051 056 164 150 145 156 050 146 165
0117000 156 143 164 151 157 156 050 162 145 163 160 157 156 163 145 051
0117020 040 173 012 040 040 040 040 040 040 040 040 151 146 040 050 041
0117040 162 145 163 160 157 156 163 145 133 047 157 153 047 135 051 040
0117060 173 012 040 040 040 040 040 040 040 040 040 040 164 150 162 157
0117100 167 040 042 146 141 151 154 145 144 040 164 157 040 154 157 141
0117120 144 040 167 141 163 155 040 142 151 156 141 162 171 040 146 151
0117140 154 145 040 141 164 040 047 042 040 053 040 167 141 163 155 102
0117160 151 156 141 162 171 106 151 154 145 040 053 040 042 047 042 073
0117200 012 040 040 040 040 040 040 040 040 175 012 040 040 040 040 040
0117220 040 040 040 162 145 164 165 162 156 040 162 145 163 160 157 156
0117240 163 145 133 047 141 162 162 141 171 102 165 146 146 145 162 047
0117260 135 050 051 073 012 040 040 040 040 040 040 175 051 056 143 141
0117300 164 143 150 050 146 165 156 143 164 151 157 156 040 050 051 040
0117320 173 012 040 040 040 040 040 040 040 040 040 040 162 145 164 165
0117340 162 156 040 147 145 164 102 151 156 141 162 171 050 167 141 163
0117360 155 102 151 156 141 162 171 106 151 154 145 051 073 012 040 040
0117400 040 040 040 040 175 051 073 012 040 040 040 040 175 012 040 040
0117420 040 040 145 154 163 145 040 173 012 040 040 040 040 040 040 151
0117440 146 040 050 162 145 141 144 101 163 171 156 143 051 040 173 012
0117460 040 040 040 040 040 040 040 040 057 057 040 146 145 164 143 150
0117500 040 151 163 040 156 157 164 040 141 166 141 151 154 141 142 154
0117520 145 040 157 162 040 165 162 154 040 151 163 040 146 151 154 145
0117540 040 075 076 040 164 162 171 040 130 110 122 040 050 162 145 141
0117560 144 101 163 171 156 143 040 165 163 145 163 040 130 110 122 040
0117600 151 156 164 145 162 156 141 154 154 171 051 012 040 040 040 040
0117620 040 040 040 040 162 145 164 165 162 156 040 156 145 167 040 120
0117640 162 157 155 151 163 145 050 146 165 156 143 164 151 157 156 050
0117660 162 145 163 157 154 166 145 054 040 162 145 152 145 143 164 051
0117700 040 173 012 040 040 040 040 040 040 040 040 040 040 162 145 141
0117720 144 101 163 171 156 143 050 167 141 163 155 102 151 156 141 162
0117740 171 106 151 154 145 054 040 146 165 156 143 164 151 157 156 050
0117760 162 145 163 160 157 156 163 145 051 040 173 040 162 145 163 157
0120000 154 166 145 050 156 145 167 040 125 151 156 164 070 101 162 162
0120020 141 171 050 057 052 052 040 100 164 171 160 145 173 041 101 162
0120040 162 141 171 102 165 146 146 145 162 175 040 052 057 050 162 145
0120060 163 160 157 156 163 145 051 051 051 040 175 054 040 162 145 152
0120100 145 143 164 051 012 040 040 040 040 040 040 040 040 175 051 073
0120120 012 040 040 040 040 040 040 175 012 040 040 040 040 175 012 040
0120140 040 175 012 012 040 040 057 057 040 117 164 150 145 162 167 151
0120160 163 145 054 040 147 145 164 102 151 156 141 162 171 040 163 150
0120200 157 165 154 144 040 142 145 040 141 142 154 145 040 164 157 040
0120220 147 145 164 040 151 164 040 163 171 156 143 150 162 157 156 157
0120240 165 163 154 171 012 040 040 162 145 164 165 162 156 040 120 162
0120260 157 155 151 163 145 056 162 145 163 157 154 166 145 050 051 056
0120300 164 150 145 156 050 146 165 156 143 164 151 157 156 050 051 040
0120320 173 040 162 145 164 165 162 156 040 147 145 164 102 151 156 141
0120340 162 171 050 167 141 163 155 102 151 156 141 162 171 106 151 154
0120360 145 051 073 040 175 051 073 012 175 012 012 057 057 040 103 162
0120400 145 141 164 145 040 164 150 145 040 167 141 163 155 040 151 156
0120420 163 164 141 156 143 145 056 012 057 057 040 122 145 143 145 151
0120440 166 145 163 040 164 150 145 040 167 141 163 155 040 151 155 160
0120460 157 162 164 163 054 040 162 145 164 165 162 156 163 040 164 150
0120500 145 040 145 170 160 157 162 164 163 056 012 146 165 156 143 164
0120520 151 157 156 040 143 162 145 141 164 145 127 141 163 155 050 051
0120540 040 173 012 040 040 057 057 040 160 162 145 160 141 162 145 040
0120560 151 155 160 157 162 164 163 012 040 040 166 141 162 040 151 156
0120600 146 157 040 075 040 173 012 040 040 040 040 047 145 156 166 047
0120620 072 040 141 163 155 114 151 142 162 141 162 171 101 162 147 054
0120640 012 040 040 040 040 047 167 141 163 151 137 163 156 141 160 163
0120660 150 157 164 137 160 162 145 166 151 145 167 061 047 072 040 141
0120700 163 155 114 151 142 162 141 162 171 101 162 147 054 012 040 040
0120720 175 073 012 040 040 057 057 040 114 157 141 144 040 164 150 145
0120740 040 167 141 163 155 040 155 157 144 165 154 145 040 141 156 144
0120760 040 143 162 145 141 164 145 040 141 156 040 151 156 163 164 141
0121000 156 143 145 040 157 146 040 165 163 151 156 147 040 156 141 164
0121020 151 166 145 040 163 165 160 160 157 162 164 040 151 156 040 164
0121040 150 145 040 112 123 040 145 156 147 151 156 145 056 012 040 040
0121060 057 057 040 150 141 156 144 154 145 040 141 040 147 145 156 145
0121100 162 141 164 145 144 040 167 141 163 155 040 151 156 163 164 141
0121120 156 143 145 054 040 162 145 143 145 151 166 151 156 147 040 151
0121140 164 163 040 145 170 160 157 162 164 163 040 141 156 144 012 040
0121160 040 057 057 040 160 145 162 146 157 162 155 151 156 147 040 157
0121200 164 150 145 162 040 156 145 143 145 163 163 141 162 171 040 163
0121220 145 164 165 160 012 040 040 057 052 052 040 100 160 141 162 141
0121240 155 040 173 127 145 142 101 163 163 145 155 142 154 171 056 115
0121260 157 144 165 154 145 075 175 040 155 157 144 165 154 145 052 057
0121300 012 040 040 146 165 156 143 164 151 157 156 040 162 145 143 145
0121320 151 166 145 111 156 163 164 141 156 143 145 050 151 156 163 164
0121340 141 156 143 145 054 040 155 157 144 165 154 145 051 040 173 012
0121360 040 040 040 040 166 141 162 040 145 170 160 157 162 164 163 040
0121400 075 040 151 156 163 164 141 156 143 145 056 145 170 160 157 162
0121420 164 163 073 012 012 040 040 040 040 115 157 144 165 154 145 133
0121440 047 141 163 155 047 135 040 075 040 145 170 160 157 162 164 163
0121460 073 012 012 040 040 040 040 167 141 163 155 115 145 155 157 162
0121500 171 040 075 040 115 157 144 165 154 145 133 047 141 163 155 047
0121520 135 133 047 155 145 155 157 162 171 047 135 073 012 040 040 040
0121540 040 141 163 163 145 162 164 050 167 141 163 155 115 145 155 157
0121560 162 171 054 040 042 155 145 155 157 162 171 040 156 157 164 040
0121600 146 157 165 156 144 040 151 156 040 167 141 163 155 040 145 170
0121620 160 157 162 164 163 042 051 073 012 040 040 040 040 057 057 040
0121640 124 150 151 163 040 141 163 163 145 162 164 151 157 156 040 144
0121660 157 145 163 156 047 164 040 150 157 154 144 040 167 150 145 156
0121700 040 145 155 163 143 162 151 160 164 145 156 040 151 163 040 162
0121720 165 156 040 151 156 040 055 055 160 157 163 164 055 154 151 156
0121740 153 012 040 040 040 040 057 057 040 155 157 144 145 056 012 040
0121760 040 040 040 057 057 040 124 117 104 117 050 163 142 143 051 072
0122000 040 122 145 141 144 040 111 116 111 124 111 101 114 137 115 105
0122020 115 117 122 131 040 157 165 164 040 157 146 040 164 150 145 040
0122040 167 141 163 155 040 146 151 154 145 040 151 156 040 160 157 163
0122060 164 055 154 151 156 153 040 155 157 144 145 056 012 040 040 040
0122100 040 057 057 141 163 163 145 162 164 050 167 141 163 155 115 145
0122120 155 157 162 171 056 142 165 146 146 145 162 056 142 171 164 145
0122140 114 145 156 147 164 150 040 075 075 075 040 061 066 067 067 067
0122160 062 061 066 051 073 012 040 040 040 040 165 160 144 141 164 145
0122200 107 154 157 142 141 154 102 165 146 146 145 162 101 156 144 126
0122220 151 145 167 163 050 167 141 163 155 115 145 155 157 162 171 056
0122240 142 165 146 146 145 162 051 073 012 012 040 040 040 040 167 141
0122260 163 155 124 141 142 154 145 040 075 040 115 157 144 165 154 145
0122300 133 047 141 163 155 047 135 133 047 137 137 151 156 144 151 162
0122320 145 143 164 137 146 165 156 143 164 151 157 156 137 164 141 142
0122340 154 145 047 135 073 012 040 040 040 040 141 163 163 145 162 164
0122360 050 167 141 163 155 124 141 142 154 145 054 040 042 164 141 142
0122400 154 145 040 156 157 164 040 146 157 165 156 144 040 151 156 040
0122420 167 141 163 155 040 145 170 160 157 162 164 163 042 051 073 012
0122440 012 040 040 040 040 141 144 144 117 156 111 156 151 164 050 115
0122460 157 144 165 154 145 133 047 141 163 155 047 135 133 047 137 137
0122500 167 141 163 155 137 143 141 154 154 137 143 164 157 162 163 047
0122520 135 051 073 012 012 040 040 040 040 162 145 155 157 166 145 122
0122540 165 156 104 145 160 145 156 144 145 156 143 171 050 047 167 141
0122560 163 155 055 151 156 163 164 141 156 164 151 141 164 145 047 051
0122600 073 012 012 040 040 175 012 040 040 057 057 040 167 145 040 143
0122620 141 156 047 164 040 162 165 156 040 171 145 164 040 050 145 170
0122640 143 145 160 164 040 151 156 040 141 040 160 164 150 162 145 141
0122660 144 054 040 167 150 145 162 145 040 167 145 040 150 141 166 145
0122700 040 141 040 143 165 163 164 157 155 040 163 171 156 143 040 151
0122720 156 163 164 141 156 164 151 141 164 157 162 051 012 040 040 141
0122740 144 144 122 165 156 104 145 160 145 156 144 145 156 143 171 050
0122760 047 167 141 163 155 055 151 156 163 164 141 156 164 151 141 164
0123000 145 047 051 073 012 012 040 040 057 057 040 120 162 145 146 145
0123020 162 040 163 164 162 145 141 155 151 156 147 040 151 156 163 164
0123040 141 156 164 151 141 164 151 157 156 040 151 146 040 141 166 141
0123060 151 154 141 142 154 145 056 012 040 040 057 057 040 101 163 171
0123100 156 143 040 143 157 155 160 151 154 141 164 151 157 156 040 143
0123120 141 156 040 142 145 040 143 157 156 146 165 163 151 156 147 040
0123140 167 150 145 156 040 141 156 040 145 162 162 157 162 040 157 156
0123160 040 164 150 145 040 160 141 147 145 040 157 166 145 162 167 162
0123200 151 164 145 163 040 115 157 144 165 154 145 012 040 040 057 057
0123220 040 050 146 157 162 040 145 170 141 155 160 154 145 054 040 151
0123240 146 040 164 150 145 040 157 162 144 145 162 040 157 146 040 145
0123260 154 145 155 145 156 164 163 040 151 163 040 167 162 157 156 147
0123300 054 040 141 156 144 040 164 150 145 040 157 156 145 040 144 145
0123320 146 151 156 151 156 147 040 115 157 144 165 154 145 040 151 163
0123340 012 040 040 057 057 040 154 141 164 145 162 051 054 040 163 157
0123360 040 167 145 040 163 141 166 145 040 115 157 144 165 154 145 040
0123400 141 156 144 040 143 150 145 143 153 040 151 164 040 154 141 164
0123420 145 162 056 012 040 040 166 141 162 040 164 162 165 145 115 157
0123440 144 165 154 145 040 075 040 115 157 144 165 154 145 073 012 040
0123460 040 146 165 156 143 164 151 157 156 040 162 145 143 145 151 166
0123500 145 111 156 163 164 141 156 164 151 141 164 151 157 156 122 145
0123520 163 165 154 164 050 162 145 163 165 154 164 051 040 173 012 040
0123540 040 040 040 057 057 040 047 162 145 163 165 154 164 047 040 151
0123560 163 040 141 040 122 145 163 165 154 164 117 142 152 145 143 164
0123600 040 157 142 152 145 143 164 040 167 150 151 143 150 040 150 141
0123620 163 040 142 157 164 150 040 164 150 145 040 155 157 144 165 154
0123640 145 040 141 156 144 040 151 156 163 164 141 156 143 145 056 012
0123660 040 040 040 040 057 057 040 162 145 143 145 151 166 145 111 156
0123700 163 164 141 156 143 145 050 051 040 167 151 154 154 040 163 167
0123720 141 160 040 151 156 040 164 150 145 040 145 170 160 157 162 164
0123740 163 040 050 164 157 040 115 157 144 165 154 145 056 141 163 155
0123760 051 040 163 157 040 164 150 145 171 040 143 141 156 040 142 145
0124000 040 143 141 154 154 145 144 012 040 040 040 040 141 163 163 145
0124020 162 164 050 115 157 144 165 154 145 040 075 075 075 040 164 162
0124040 165 145 115 157 144 165 154 145 054 040 047 164 150 145 040 115
0124060 157 144 165 154 145 040 157 142 152 145 143 164 040 163 150 157
0124100 165 154 144 040 156 157 164 040 142 145 040 162 145 160 154 141
0124120 143 145 144 040 144 165 162 151 156 147 040 141 163 171 156 143
0124140 040 143 157 155 160 151 154 141 164 151 157 156 040 055 040 160
0124160 145 162 150 141 160 163 040 164 150 145 040 157 162 144 145 162
0124200 040 157 146 040 110 124 115 114 040 145 154 145 155 145 156 164
0124220 163 040 151 163 040 167 162 157 156 147 077 047 051 073 012 040
0124240 040 040 040 164 162 165 145 115 157 144 165 154 145 040 075 040
0124260 156 165 154 154 073 012 040 040 040 040 057 057 040 124 117 104
0124300 117 072 040 104 165 145 040 164 157 040 103 154 157 163 165 162
0124320 145 040 162 145 147 162 145 163 163 151 157 156 040 150 164 164
0124340 160 163 072 057 057 147 151 164 150 165 142 056 143 157 155 057
0124360 147 157 157 147 154 145 057 143 154 157 163 165 162 145 055 143
0124400 157 155 160 151 154 145 162 057 151 163 163 165 145 163 057 063
0124420 061 071 063 054 040 164 150 145 040 141 142 157 166 145 040 154
0124440 151 156 145 040 156 157 040 154 157 156 147 145 162 040 157 160
0124460 164 151 155 151 172 145 163 040 157 165 164 040 144 157 167 156
0124500 040 164 157 040 164 150 145 040 146 157 154 154 157 167 151 156
0124520 147 040 154 151 156 145 056 012 040 040 040 040 057 057 040 127
0124540 150 145 156 040 164 150 145 040 162 145 147 162 145 163 163 151
0124560 157 156 040 151 163 040 146 151 170 145 144 054 040 143 141 156
0124600 040 162 145 163 164 157 162 145 040 164 150 145 040 141 142 157
0124620 166 145 040 125 123 105 137 120 124 110 122 105 101 104 123 055
0124640 145 156 141 142 154 145 144 040 160 141 164 150 056 012 040 040
0124660 040 040 162 145 143 145 151 166 145 111 156 163 164 141 156 143
0124700 145 050 162 145 163 165 154 164 133 047 151 156 163 164 141 156
0124720 143 145 047 135 051 073 012 040 040 175 012 012 040 040 146 165
0124740 156 143 164 151 157 156 040 151 156 163 164 141 156 164 151 141
0124760 164 145 101 162 162 141 171 102 165 146 146 145 162 050 162 145
0125000 143 145 151 166 145 162 051 040 173 012 040 040 040 040 162 145
0125020 164 165 162 156 040 147 145 164 102 151 156 141 162 171 120 162
0125040 157 155 151 163 145 050 051 056 164 150 145 156 050 146 165 156
0125060 143 164 151 157 156 050 142 151 156 141 162 171 051 040 173 012
0125100 040 040 040 040 040 040 162 145 164 165 162 156 040 127 145 142
0125120 101 163 163 145 155 142 154 171 056 151 156 163 164 141 156 164
0125140 151 141 164 145 050 142 151 156 141 162 171 054 040 151 156 146
0125160 157 051 073 012 040 040 040 040 175 051 056 164 150 145 156 050
0125200 146 165 156 143 164 151 157 156 040 050 151 156 163 164 141 156
0125220 143 145 051 040 173 012 040 040 040 040 040 040 162 145 164 165
0125240 162 156 040 151 156 163 164 141 156 143 145 073 012 040 040 040
0125260 040 175 051 056 164 150 145 156 050 162 145 143 145 151 166 145
0125300 162 054 040 146 165 156 143 164 151 157 156 050 162 145 141 163
0125320 157 156 051 040 173 012 040 040 040 040 040 040 145 162 162 050
0125340 047 146 141 151 154 145 144 040 164 157 040 141 163 171 156 143
0125360 150 162 157 156 157 165 163 154 171 040 160 162 145 160 141 162
0125400 145 040 167 141 163 155 072 040 047 040 053 040 162 145 141 163
0125420 157 156 051 073 012 012 040 040 040 040 040 040 057 057 040 127
0125440 141 162 156 040 157 156 040 163 157 155 145 040 143 157 155 155
0125460 157 156 040 160 162 157 142 154 145 155 163 056 012 040 040 040
0125500 040 040 040 151 146 040 050 151 163 106 151 154 145 125 122 111
0125520 050 167 141 163 155 102 151 156 141 162 171 106 151 154 145 051
0125540 051 040 173 012 040 040 040 040 040 040 040 040 145 162 162 050
0125560 047 167 141 162 156 151 156 147 072 040 114 157 141 144 151 156
0125600 147 040 146 162 157 155 040 141 040 146 151 154 145 040 125 122
0125620 111 040 050 047 040 053 040 167 141 163 155 102 151 156 141 162
0125640 171 106 151 154 145 040 053 040 047 051 040 151 163 040 156 157
0125660 164 040 163 165 160 160 157 162 164 145 144 040 151 156 040 155
0125700 157 163 164 040 142 162 157 167 163 145 162 163 056 040 123 145
0125720 145 040 150 164 164 160 163 072 057 057 145 155 163 143 162 151
0125740 160 164 145 156 056 157 162 147 057 144 157 143 163 057 147 145
0125760 164 164 151 156 147 137 163 164 141 162 164 145 144 057 106 101
0126000 121 056 150 164 155 154 043 150 157 167 055 144 157 055 151 055
0126020 162 165 156 055 141 055 154 157 143 141 154 055 167 145 142 163
0126040 145 162 166 145 162 055 146 157 162 055 164 145 163 164 151 156
0126060 147 055 167 150 171 055 144 157 145 163 055 155 171 055 160 162
0126100 157 147 162 141 155 055 163 164 141 154 154 055 151 156 055 144
0126120 157 167 156 154 157 141 144 151 156 147 055 157 162 055 160 162
0126140 145 160 141 162 151 156 147 047 051 073 012 040 040 040 040 040
0126160 040 175 012 040 040 040 040 040 040 141 142 157 162 164 050 162
0126200 145 141 163 157 156 051 073 012 040 040 040 040 175 051 073 012
0126220 040 040 175 012 012 040 040 146 165 156 143 164 151 157 156 040
0126240 151 156 163 164 141 156 164 151 141 164 145 101 163 171 156 143
0126260 050 051 040 173 012 040 040 040 040 151 146 040 050 041 167 141
0126300 163 155 102 151 156 141 162 171 040 046 046 012 040 040 040 040
0126320 040 040 040 040 164 171 160 145 157 146 040 127 145 142 101 163
0126340 163 145 155 142 154 171 056 151 156 163 164 141 156 164 151 141
0126360 164 145 123 164 162 145 141 155 151 156 147 040 075 075 040 047
0126400 146 165 156 143 164 151 157 156 047 040 046 046 012 040 040 040
0126420 040 040 040 040 040 041 151 163 104 141 164 141 125 122 111 050
0126440 167 141 163 155 102 151 156 141 162 171 106 151 154 145 051 040
0126460 046 046 012 040 040 040 040 040 040 040 040 057 057 040 104 157
0126500 156 047 164 040 165 163 145 040 163 164 162 145 141 155 151 156
0126520 147 040 146 157 162 040 146 151 154 145 072 057 057 040 144 145
0126540 154 151 166 145 162 145 144 040 157 142 152 145 143 164 163 040
0126560 151 156 040 141 040 167 145 142 166 151 145 167 054 040 146 145
0126600 164 143 150 040 164 150 145 155 040 163 171 156 143 150 162 157
0126620 156 157 165 163 154 171 056 012 040 040 040 040 040 040 040 040
0126640 041 151 163 106 151 154 145 125 122 111 050 167 141 163 155 102
0126660 151 156 141 162 171 106 151 154 145 051 040 046 046 012 040 040
0126700 040 040 040 040 040 040 057 057 040 101 166 157 151 144 040 151
0126720 156 163 164 141 156 164 151 141 164 145 123 164 162 145 141 155
0126740 151 156 147 050 051 040 157 156 040 116 157 144 145 056 152 163
0126760 040 145 156 166 151 162 157 156 155 145 156 164 040 146 157 162
0127000 040 156 157 167 054 040 141 163 040 167 150 151 154 145 012 040
0127020 040 040 040 040 040 040 040 057 057 040 116 157 144 145 056 152
0127040 163 040 166 061 070 056 061 056 060 040 151 155 160 154 145 155
0127060 145 156 164 163 040 151 164 054 040 151 164 040 144 157 145 163
0127100 040 156 157 164 040 150 141 166 145 040 141 040 146 165 154 154
0127120 040 146 145 164 143 150 050 051 012 040 040 040 040 040 040 040
0127140 040 057 057 040 151 155 160 154 145 155 145 156 164 141 164 151
0127160 157 156 040 171 145 164 056 012 040 040 040 040 040 040 040 040
0127200 057 057 012 040 040 040 040 040 040 040 040 057 057 040 122 145
0127220 146 145 162 145 156 143 145 072 012 040 040 040 040 040 040 040
0127240 040 057 057 040 040 040 150 164 164 160 163 072 057 057 147 151
0127260 164 150 165 142 056 143 157 155 057 145 155 163 143 162 151 160
0127300 164 145 156 055 143 157 162 145 057 145 155 163 143 162 151 160
0127320 164 145 156 057 160 165 154 154 057 061 066 071 061 067 012 040
0127340 040 040 040 040 040 040 040 041 105 116 126 111 122 117 116 115
0127360 105 116 124 137 111 123 137 116 117 104 105 040 046 046 012 040
0127400 040 040 040 040 040 040 040 164 171 160 145 157 146 040 146 145
0127420 164 143 150 040 075 075 040 047 146 165 156 143 164 151 157 156
0127440 047 051 040 173 012 040 040 040 040 040 040 162 145 164 165 162
0127460 156 040 146 145 164 143 150 050 167 141 163 155 102 151 156 141
0127500 162 171 106 151 154 145 054 040 173 040 143 162 145 144 145 156
0127520 164 151 141 154 163 072 040 047 163 141 155 145 055 157 162 151
0127540 147 151 156 047 040 175 051 056 164 150 145 156 050 146 165 156
0127560 143 164 151 157 156 050 162 145 163 160 157 156 163 145 051 040
0127600 173 012 040 040 040 040 040 040 040 040 057 057 040 123 165 160
0127620 160 162 145 163 163 040 143 154 157 163 165 162 145 040 167 141
0127640 162 156 151 156 147 040 150 145 162 145 040 163 151 156 143 145
0127660 040 164 150 145 040 165 160 163 164 162 145 141 155 040 144 145
0127700 146 151 156 151 164 151 157 156 040 146 157 162 012 040 040 040
0127720 040 040 040 040 040 057 057 040 151 156 163 164 141 156 164 151
0127740 141 164 145 123 164 162 145 141 155 151 156 147 040 157 156 154
0127760 171 040 141 154 154 157 167 163 040 120 162 157 155 151 163 145
0130000 074 122 145 160 163 160 157 156 163 145 076 040 162 141 164 150
0130020 145 162 040 164 150 141 156 012 040 040 040 040 040 040 040 040
0130040 057 057 040 141 156 040 141 143 164 165 141 154 040 122 145 163
0130060 160 157 156 163 145 056 012 040 040 040 040 040 040 040 040 057
0130100 057 040 124 117 104 117 050 150 164 164 160 163 072 057 057 147
0130120 151 164 150 165 142 056 143 157 155 057 147 157 157 147 154 145
0130140 057 143 154 157 163 165 162 145 055 143 157 155 160 151 154 145
0130160 162 057 160 165 154 154 057 063 071 061 063 051 072 040 122 145
0130200 155 157 166 145 040 151 146 057 167 150 145 156 040 165 160 163
0130220 164 162 145 141 155 040 143 154 157 163 165 162 145 040 151 163
0130240 040 146 151 170 145 144 056 012 040 040 040 040 040 040 040 040
0130260 057 052 052 040 100 163 165 160 160 162 145 163 163 040 173 143
0130300 150 145 143 153 124 171 160 145 163 175 040 052 057 012 040 040
0130320 040 040 040 040 040 040 166 141 162 040 162 145 163 165 154 164
0130340 040 075 040 127 145 142 101 163 163 145 155 142 154 171 056 151
0130360 156 163 164 141 156 164 151 141 164 145 123 164 162 145 141 155
0130400 151 156 147 050 162 145 163 160 157 156 163 145 054 040 151 156
0130420 146 157 051 073 012 012 040 040 040 040 040 040 040 040 162 145
0130440 164 165 162 156 040 162 145 163 165 154 164 056 164 150 145 156
0130460 050 012 040 040 040 040 040 040 040 040 040 040 162 145 143 145
0130500 151 166 145 111 156 163 164 141 156 164 151 141 164 151 157 156
0130520 122 145 163 165 154 164 054 012 040 040 040 040 040 040 040 040
0130540 040 040 146 165 156 143 164 151 157 156 050 162 145 141 163 157
0130560 156 051 040 173 012 040 040 040 040 040 040 040 040 040 040 040
0130600 040 057 057 040 127 145 040 145 170 160 145 143 164 040 164 150
0130620 145 040 155 157 163 164 040 143 157 155 155 157 156 040 146 141
0130640 151 154 165 162 145 040 143 141 165 163 145 040 164 157 040 142
0130660 145 040 141 040 142 141 144 040 115 111 115 105 040 164 171 160
0130700 145 040 146 157 162 040 164 150 145 040 142 151 156 141 162 171
0130720 054 012 040 040 040 040 040 040 040 040 040 040 040 040 057 057
0130740 040 151 156 040 167 150 151 143 150 040 143 141 163 145 040 146
0130760 141 154 154 151 156 147 040 142 141 143 153 040 164 157 040 101
0131000 162 162 141 171 102 165 146 146 145 162 040 151 156 163 164 141
0131020 156 164 151 141 164 151 157 156 040 163 150 157 165 154 144 040
0131040 167 157 162 153 056 012 040 040 040 040 040 040 040 040 040 040
0131060 040 040 145 162 162 050 047 167 141 163 155 040 163 164 162 145
0131100 141 155 151 156 147 040 143 157 155 160 151 154 145 040 146 141
0131120 151 154 145 144 072 040 047 040 053 040 162 145 141 163 157 156
0131140 051 073 012 040 040 040 040 040 040 040 040 040 040 040 040 145
0131160 162 162 050 047 146 141 154 154 151 156 147 040 142 141 143 153
0131200 040 164 157 040 101 162 162 141 171 102 165 146 146 145 162 040
0131220 151 156 163 164 141 156 164 151 141 164 151 157 156 047 051 073
0131240 012 040 040 040 040 040 040 040 040 040 040 040 040 162 145 164
0131260 165 162 156 040 151 156 163 164 141 156 164 151 141 164 145 101
0131300 162 162 141 171 102 165 146 146 145 162 050 162 145 143 145 151
0131320 166 145 111 156 163 164 141 156 164 151 141 164 151 157 156 122
0131340 145 163 165 154 164 051 073 012 040 040 040 040 040 040 040 040
0131360 040 040 175 051 073 012 040 040 040 040 040 040 175 051 073 012
0131400 040 040 040 040 175 040 145 154 163 145 040 173 012 040 040 040
0131420 040 040 040 162 145 164 165 162 156 040 151 156 163 164 141 156
0131440 164 151 141 164 145 101 162 162 141 171 102 165 146 146 145 162
0131460 050 162 145 143 145 151 166 145 111 156 163 164 141 156 164 151
0131500 141 164 151 157 156 122 145 163 165 154 164 051 073 012 040 040
0131520 040 040 175 012 040 040 175 012 012 040 040 057 057 040 125 163
0131540 145 162 040 163 150 145 154 154 040 160 141 147 145 163 040 143
0131560 141 156 040 167 162 151 164 145 040 164 150 145 151 162 040 157
0131600 167 156 040 115 157 144 165 154 145 056 151 156 163 164 141 156
0131620 164 151 141 164 145 127 141 163 155 040 075 040 146 165 156 143
0131640 164 151 157 156 050 151 155 160 157 162 164 163 054 040 163 165
0131660 143 143 145 163 163 103 141 154 154 142 141 143 153 051 040 143
0131700 141 154 154 142 141 143 153 012 040 040 057 057 040 164 157 040
0131720 155 141 156 165 141 154 154 171 040 151 156 163 164 141 156 164
0131740 151 141 164 145 040 164 150 145 040 127 141 163 155 040 155 157
0131760 144 165 154 145 040 164 150 145 155 163 145 154 166 145 163 056
0132000 040 124 150 151 163 040 141 154 154 157 167 163 040 160 141 147
0132020 145 163 040 164 157 040 162 165 156 040 164 150 145 040 151 156
0132040 163 164 141 156 164 151 141 164 151 157 156 040 160 141 162 141
0132060 154 154 145 154 012 040 040 057 057 040 164 157 040 141 156 171
0132100 040 157 164 150 145 162 040 141 163 171 156 143 040 163 164 141
0132120 162 164 165 160 040 141 143 164 151 157 156 163 040 164 150 145
0132140 171 040 141 162 145 040 160 145 162 146 157 162 155 151 156 147
0132160 056 012 040 040 057 057 040 101 154 163 157 040 160 164 150 162
0132200 145 141 144 163 040 141 156 144 040 167 141 163 155 040 167 157
0132220 162 153 145 162 163 040 151 156 151 164 151 141 154 151 172 145
0132240 040 164 150 145 040 167 141 163 155 040 151 156 163 164 141 156
0132260 143 145 040 164 150 162 157 165 147 150 040 164 150 151 163 040
0132300 160 141 164 150 056 012 040 040 151 146 040 050 115 157 144 165
0132320 154 145 133 047 151 156 163 164 141 156 164 151 141 164 145 127
0132340 141 163 155 047 135 051 040 173 012 040 040 040 040 164 162 171
0132360 040 173 012 040 040 040 040 040 040 166 141 162 040 145 170 160
0132400 157 162 164 163 040 075 040 115 157 144 165 154 145 133 047 151
0132420 156 163 164 141 156 164 151 141 164 145 127 141 163 155 047 135
0132440 050 151 156 146 157 054 040 162 145 143 145 151 166 145 111 156
0132460 163 164 141 156 143 145 051 073 012 040 040 040 040 040 040 162
0132500 145 164 165 162 156 040 145 170 160 157 162 164 163 073 012 040
0132520 040 040 040 175 040 143 141 164 143 150 050 145 051 040 173 012
0132540 040 040 040 040 040 040 145 162 162 050 047 115 157 144 165 154
0132560 145 056 151 156 163 164 141 156 164 151 141 164 145 127 141 163
0132600 155 040 143 141 154 154 142 141 143 153 040 146 141 151 154 145
0132620 144 040 167 151 164 150 040 145 162 162 157 162 072 040 047 040
0132640 053 040 145 051 073 012 040 040 040 040 040 040 040 040 162 145
0132660 164 165 162 156 040 146 141 154 163 145 073 012 040 040 040 040
0132700 175 012 040 040 175 012 012 040 040 151 156 163 164 141 156 164
0132720 151 141 164 145 101 163 171 156 143 050 051 073 012 040 040 162
0132740 145 164 165 162 156 040 173 175 073 040 057 057 040 156 157 040
0132760 145 170 160 157 162 164 163 040 171 145 164 073 040 167 145 047
0133000 154 154 040 146 151 154 154 040 164 150 145 155 040 151 156 040
0133020 154 141 164 145 162 012 175 012 012 057 057 040 107 154 157 142
0133040 141 154 163 040 165 163 145 144 040 142 171 040 112 123 040 151
0133060 066 064 040 143 157 156 166 145 162 163 151 157 156 163 040 050
0133100 163 145 145 040 155 141 153 145 123 145 164 126 141 154 165 145
0133120 051 012 166 141 162 040 164 145 155 160 104 157 165 142 154 145
0133140 073 012 166 141 162 040 164 145 155 160 111 066 064 073 012 012
0133160 057 057 040 075 075 075 040 102 157 144 171 040 075 075 075 012
0133200 012 166 141 162 040 101 123 115 137 103 117 116 123 124 123 040
0133220 075 040 173 012 040 040 012 175 073 012 012 012 012 012 012 012
0133240 040 040 057 052 052 040 100 143 157 156 163 164 162 165 143 164
0133260 157 162 040 052 057 012 040 040 146 165 156 143 164 151 157 156
0133300 040 105 170 151 164 123 164 141 164 165 163 050 163 164 141 164
0133320 165 163 051 040 173 012 040 040 040 040 040 040 164 150 151 163
0133340 056 156 141 155 145 040 075 040 047 105 170 151 164 123 164 141
0133360 164 165 163 047 073 012 040 040 040 040 040 040 164 150 151 163
0133400 056 155 145 163 163 141 147 145 040 075 040 047 120 162 157 147
0133420 162 141 155 040 164 145 162 155 151 156 141 164 145 144 040 167
0133440 151 164 150 040 145 170 151 164 050 047 040 053 040 163 164 141
0133460 164 165 163 040 053 040 047 051 047 073 012 040 040 040 040 040
0133500 040 164 150 151 163 056 163 164 141 164 165 163 040 075 040 163
0133520 164 141 164 165 163 073 012 040 040 040 040 175 012 012 040 040
0133540 146 165 156 143 164 151 157 156 040 143 141 154 154 122 165 156
0133560 164 151 155 145 103 141 154 154 142 141 143 153 163 050 143 141
0133600 154 154 142 141 143 153 163 051 040 173 012 040 040 040 040 040
0133620 040 167 150 151 154 145 040 050 143 141 154 154 142 141 143 153
0133640 163 056 154 145 156 147 164 150 040 076 040 060 051 040 173 012
0133660 040 040 040 040 040 040 040 040 057 057 040 120 141 163 163 040
0133700 164 150 145 040 155 157 144 165 154 145 040 141 163 040 164 150
0133720 145 040 146 151 162 163 164 040 141 162 147 165 155 145 156 164
0133740 056 012 040 040 040 040 040 040 040 040 143 141 154 154 142 141
0133760 143 153 163 056 163 150 151 146 164 050 051 050 115 157 144 165
0134000 154 145 051 073 012 040 040 040 040 040 040 175 012 040 040 040
0134020 040 175 012 012 040 040 146 165 156 143 164 151 157 156 040 167
0134040 151 164 150 123 164 141 143 153 123 141 166 145 050 146 051 040
0134060 173 012 040 040 040 040 040 040 166 141 162 040 163 164 141 143
0134100 153 040 075 040 163 164 141 143 153 123 141 166 145 050 051 073
0134120 012 040 040 040 040 040 040 166 141 162 040 162 145 164 040 075
0134140 040 146 050 051 073 012 040 040 040 040 040 040 163 164 141 143
0134160 153 122 145 163 164 157 162 145 050 163 164 141 143 153 051 073
0134200 012 040 040 040 040 040 040 162 145 164 165 162 156 040 162 145
0134220 164 073 012 040 040 040 040 175 012 040 040 146 165 156 143 164
0134240 151 157 156 040 144 145 155 141 156 147 154 145 050 146 165 156
0134260 143 051 040 173 012 040 040 040 040 040 040 167 141 162 156 117
0134300 156 143 145 050 047 167 141 162 156 151 156 147 072 040 142 165
0134320 151 154 144 040 167 151 164 150 040 055 163 104 105 115 101 116
0134340 107 114 105 137 123 125 120 120 117 122 124 040 164 157 040 154
0134360 151 156 153 040 151 156 040 154 151 142 143 170 170 141 142 151
0134400 040 144 145 155 141 156 147 154 151 156 147 047 051 073 012 040
0134420 040 040 040 040 040 162 145 164 165 162 156 040 146 165 156 143
0134440 073 012 040 040 040 040 175 012 012 040 040 146 165 156 143 164
0134460 151 157 156 040 144 145 155 141 156 147 154 145 101 154 154 050
0134500 164 145 170 164 051 040 173 012 040 040 040 040 040 040 166 141
0134520 162 040 162 145 147 145 170 040 075 012 040 040 040 040 040 040
0134540 040 040 057 134 142 137 132 133 134 167 134 144 137 135 053 057
0134560 147 073 012 040 040 040 040 040 040 162 145 164 165 162 156 040
0134600 164 145 170 164 056 162 145 160 154 141 143 145 050 162 145 147
0134620 145 170 054 012 040 040 040 040 040 040 040 040 146 165 156 143
0134640 164 151 157 156 050 170 051 040 173 012 040 040 040 040 040 040
0134660 040 040 040 040 166 141 162 040 171 040 075 040 144 145 155 141
0134700 156 147 154 145 050 170 051 073 012 040 040 040 040 040 040 040
0134720 040 040 040 162 145 164 165 162 156 040 170 040 075 075 075 040
0134740 171 040 077 040 170 040 072 040 050 171 040 053 040 047 040 133
0134760 047 040 053 040 170 040 053 040 047 135 047 051 073 012 040 040
0135000 040 040 040 040 040 040 175 051 073 012 040 040 040 040 175 012
0135020 012 040 040 012 040 040 040 040 057 052 052 012 040 040 040 040
0135040 040 052 040 100 160 141 162 141 155 040 173 156 165 155 142 145
0135060 162 175 040 160 164 162 012 040 040 040 040 040 052 040 100 160
0135100 141 162 141 155 040 173 163 164 162 151 156 147 175 040 164 171
0135120 160 145 012 040 040 040 040 040 052 057 012 040 040 146 165 156
0135140 143 164 151 157 156 040 147 145 164 126 141 154 165 145 050 160
0135160 164 162 054 040 164 171 160 145 040 075 040 047 151 070 047 051
0135200 040 173 012 040 040 040 040 040 040 151 146 040 050 164 171 160
0135220 145 056 145 156 144 163 127 151 164 150 050 047 052 047 051 051
0135240 040 164 171 160 145 040 075 040 047 052 047 073 012 040 040 040
0135260 040 040 040 163 167 151 164 143 150 040 050 164 171 160 145 051
0135300 040 173 012 040 040 040 040 040 040 040 040 143 141 163 145 040
0135320 047 151 061 047 072 040 162 145 164 165 162 156 040 110 105 101
0135340 120 070 133 050 050 160 164 162 051 076 076 060 051 135 073 012
0135360 040 040 040 040 040 040 040 040 143 141 163 145 040 047 151 070
0135400 047 072 040 162 145 164 165 162 156 040 110 105 101 120 070 133
0135420 050 050 160 164 162 051 076 076 060 051 135 073 012 040 040 040
0135440 040 040 040 040 040 143 141 163 145 040 047 151 061 066 047 072
0135460 040 162 145 164 165 162 156 040 110 105 101 120 061 066 133 050
0135500 050 160 164 162 051 076 076 061 051 135 073 012 040 040 040 040
0135520 040 040 040 040 143 141 163 145 040 047 151 063 062 047 072 040
0135540 162 145 164 165 162 156 040 110 105 101 120 063 062 133 050 050
0135560 160 164 162 051 076 076 062 051 135 073 012 040 040 040 040 040
0135600 040 040 040 143 141 163 145 040 047 151 066 064 047 072 040 162
0135620 145 164 165 162 156 040 110 105 101 120 063 062 133 050 050 160
0135640 164 162 051 076 076 062 051 135 073 012 040 040 040 040 040 040
0135660 040 040 143 141 163 145 040 047 146 154 157 141 164 047 072 040
0135700 162 145 164 165 162 156 040 110 105 101 120 106 063 062 133 050
0135720 050 160 164 162 051 076 076 062 051 135 073 012 040 040 040 040
0135740 040 040 040 040 143 141 163 145 040 047 144 157 165 142 154 145
0135760 047 072 040 162 145 164 165 162 156 040 110 105 101 120 106 066
0136000 064 133 050 050 160 164 162 051 076 076 063 051 135 073 012 040
0136020 040 040 040 040 040 040 040 143 141 163 145 040 047 052 047 072
0136040 040 162 145 164 165 162 156 040 110 105 101 120 125 063 062 133
0136060 050 050 160 164 162 051 076 076 062 051 135 073 012 040 040 040
0136100 040 040 040 040 040 144 145 146 141 165 154 164 072 040 141 142
0136120 157 162 164 050 047 151 156 166 141 154 151 144 040 164 171 160
0136140 145 040 146 157 162 040 147 145 164 126 141 154 165 145 072 040
0136160 047 040 053 040 164 171 160 145 051 073 012 040 040 040 040 040
0136200 040 175 012 040 040 040 040 040 040 162 145 164 165 162 156 040
0136220 156 165 154 154 073 012 040 040 040 040 175 012 012 040 040 146
0136240 165 156 143 164 151 157 156 040 150 141 156 144 154 145 105 170
0136260 143 145 160 164 151 157 156 050 145 051 040 173 012 040 040 040
0136300 040 040 040 057 057 040 103 145 162 164 141 151 156 040 145 170
0136320 143 145 160 164 151 157 156 040 164 171 160 145 163 040 167 145
0136340 040 144 157 040 156 157 164 040 164 162 145 141 164 040 141 163
0136360 040 145 162 162 157 162 163 040 163 151 156 143 145 040 164 150
0136400 145 171 040 141 162 145 040 165 163 145 144 040 146 157 162 012
0136420 040 040 040 040 040 040 057 057 040 151 156 164 145 162 156 141
0136440 154 040 143 157 156 164 162 157 154 040 146 154 157 167 056 012
0136460 040 040 040 040 040 040 057 057 040 061 056 040 105 170 151 164
0136500 123 164 141 164 165 163 054 040 167 150 151 143 150 040 151 163
0136520 040 164 150 162 157 167 156 040 142 171 040 145 170 151 164 050
0136540 051 012 040 040 040 040 040 040 057 057 040 062 056 040 042 165
0136560 156 167 151 156 144 042 054 040 167 150 151 143 150 040 151 163
0136600 040 164 150 162 157 167 156 040 142 171 040 145 155 163 143 162
0136620 151 160 164 145 156 137 165 156 167 151 156 144 137 164 157 137
0136640 152 163 137 145 166 145 156 164 137 154 157 157 160 050 051 040
0136660 141 156 144 040 157 164 150 145 162 163 012 040 040 040 040 040
0136700 040 057 057 040 040 040 040 164 150 141 164 040 167 151 163 150
0136720 040 164 157 040 162 145 164 165 162 156 040 164 157 040 112 123
0136740 040 145 166 145 156 164 040 154 157 157 160 056 012 040 040 040
0136760 040 040 040 151 146 040 050 145 040 151 156 163 164 141 156 143
0137000 145 157 146 040 105 170 151 164 123 164 141 164 165 163 040 174
0137020 174 040 145 040 075 075 040 047 165 156 167 151 156 144 047 051
0137040 040 173 012 040 040 040 040 040 040 040 040 162 145 164 165 162
0137060 156 040 105 130 111 124 123 124 101 124 125 123 073 012 040 040
0137100 040 040 040 040 175 012 040 040 040 040 040 040 161 165 151 164
0137120 137 050 061 054 040 145 051 073 012 040 040 040 040 175 012 012
0137140 040 040 146 165 156 143 164 151 157 156 040 152 163 123 164 141
0137160 143 153 124 162 141 143 145 050 051 040 173 012 040 040 040 040
0137200 040 040 166 141 162 040 145 162 162 157 162 040 075 040 156 145
0137220 167 040 105 162 162 157 162 050 051 073 012 040 040 040 040 040
0137240 040 151 146 040 050 041 145 162 162 157 162 056 163 164 141 143
0137260 153 051 040 173 012 040 040 040 040 040 040 040 040 057 057 040
0137300 111 105 061 060 053 040 163 160 145 143 151 141 154 040 143 141
0137320 163 145 163 072 040 111 164 040 144 157 145 163 040 150 141 166
0137340 145 040 143 141 154 154 163 164 141 143 153 040 151 156 146 157
0137360 054 040 142 165 164 040 151 164 040 151 163 040 157 156 154 171
0137400 012 040 040 040 040 040 040 040 040 057 057 040 160 157 160 165
0137420 154 141 164 145 144 040 151 146 040 141 156 040 105 162 162 157
0137440 162 040 157 142 152 145 143 164 040 151 163 040 164 150 162 157
0137460 167 156 054 040 163 157 040 164 162 171 040 164 150 141 164 040
0137500 141 163 040 141 040 163 160 145 143 151 141 154 055 143 141 163
0137520 145 056 012 040 040 040 040 040 040 040 040 164 162 171 040 173
0137540 012 040 040 040 040 040 040 040 040 040 040 164 150 162 157 167
0137560 040 156 145 167 040 105 162 162 157 162 050 051 073 012 040 040
0137600 040 040 040 040 040 040 175 040 143 141 164 143 150 050 145 051
0137620 040 173 012 040 040 040 040 040 040 040 040 040 040 145 162 162
0137640 157 162 040 075 040 145 073 012 040 040 040 040 040 040 040 040
0137660 175 012 040 040 040 040 040 040 040 040 151 146 040 050 041 145
0137700 162 162 157 162 056 163 164 141 143 153 051 040 173 012 040 040
0137720 040 040 040 040 040 040 040 040 162 145 164 165 162 156 040 047
0137740 050 156 157 040 163 164 141 143 153 040 164 162 141 143 145 040
0137760 141 166 141 151 154 141 142 154 145 051 047 073 012 040 040 040
0140000 040 040 040 040 040 175 012 040 040 040 040 040 040 175 012 040
0140020 040 040 040 040 040 162 145 164 165 162 156 040 145 162 162 157
0140040 162 056 163 164 141 143 153 056 164 157 123 164 162 151 156 147
0140060 050 051 073 012 040 040 040 040 175 012 012 040 040 012 040 040
0140100 040 040 057 052 052 012 040 040 040 040 040 052 040 100 160 141
0140120 162 141 155 040 173 156 165 155 142 145 162 175 040 160 164 162
0140140 012 040 040 040 040 040 052 040 100 160 141 162 141 155 040 173
0140160 156 165 155 142 145 162 175 040 166 141 154 165 145 012 040 040
0140200 040 040 040 052 040 100 160 141 162 141 155 040 173 163 164 162
0140220 151 156 147 175 040 164 171 160 145 012 040 040 040 040 040 052
0140240 057 012 040 040 146 165 156 143 164 151 157 156 040 163 145 164
0140260 126 141 154 165 145 050 160 164 162 054 040 166 141 154 165 145
0140300 054 040 164 171 160 145 040 075 040 047 151 070 047 051 040 173
0140320 012 040 040 040 040 040 040 151 146 040 050 164 171 160 145 056
0140340 145 156 144 163 127 151 164 150 050 047 052 047 051 051 040 164
0140360 171 160 145 040 075 040 047 052 047 073 012 040 040 040 040 040
0140400 040 163 167 151 164 143 150 040 050 164 171 160 145 051 040 173
0140420 012 040 040 040 040 040 040 040 040 143 141 163 145 040 047 151
0140440 061 047 072 040 110 105 101 120 070 133 050 050 160 164 162 051
0140460 076 076 060 051 135 040 075 040 166 141 154 165 145 073 040 142
0140500 162 145 141 153 073 012 040 040 040 040 040 040 040 040 143 141
0140520 163 145 040 047 151 070 047 072 040 110 105 101 120 070 133 050
0140540 050 160 164 162 051 076 076 060 051 135 040 075 040 166 141 154
0140560 165 145 073 040 142 162 145 141 153 073 012 040 040 040 040 040
0140600 040 040 040 143 141 163 145 040 047 151 061 066 047 072 040 110
0140620 105 101 120 061 066 133 050 050 160 164 162 051 076 076 061 051
0140640 135 040 075 040 166 141 154 165 145 073 040 142 162 145 141 153
0140660 073 012 040 040 040 040 040 040 040 040 143 141 163 145 040 047
0140700 151 063 062 047 072 040 110 105 101 120 063 062 133 050 050 160
0140720 164 162 051 076 076 062 051 135 040 075 040 166 141 154 165 145
0140740 073 040 142 162 145 141 153 073 012 040 040 040 040 040 040 040
0140760 040 143 141 163 145 040 047 151 066 064 047 072 040 050 164 145
0141000 155 160 111 066 064 040 075 040 133 166 141 154 165 145 076 076
0141020 076 060 054 050 164 145 155 160 104 157 165 142 154 145 075 166
0141040 141 154 165 145 054 050 053 050 115 141 164 150 056 141 142 163
0141060 050 164 145 155 160 104 157 165 142 154 145 051 051 051 040 076
0141100 075 040 061 056 060 040 077 040 050 164 145 155 160 104 157 165
0141120 142 154 145 040 076 040 060 056 060 040 077 040 050 050 115 141
0141140 164 150 056 155 151 156 050 050 053 050 115 141 164 150 056 146
0141160 154 157 157 162 050 050 164 145 155 160 104 157 165 142 154 145
0141200 051 057 064 062 071 064 071 066 067 062 071 066 056 060 051 051
0141220 051 054 040 064 062 071 064 071 066 067 062 071 065 056 060 051
0141240 051 174 060 051 076 076 076 060 040 072 040 050 176 176 050 050
0141260 053 050 115 141 164 150 056 143 145 151 154 050 050 164 145 155
0141300 160 104 157 165 142 154 145 040 055 040 053 050 050 050 176 176
0141320 050 164 145 155 160 104 157 165 142 154 145 051 051 051 076 076
0141340 076 060 051 051 057 064 062 071 064 071 066 067 062 071 066 056
0141360 060 051 051 051 051 051 076 076 076 060 051 040 072 040 060 051
0141400 135 054 110 105 101 120 063 062 133 050 050 160 164 162 051 076
0141420 076 062 051 135 040 075 040 164 145 155 160 111 066 064 133 060
0141440 135 054 110 105 101 120 063 062 133 050 050 050 160 164 162 051
0141460 053 050 064 051 051 076 076 062 051 135 040 075 040 164 145 155
0141500 160 111 066 064 133 061 135 051 073 040 142 162 145 141 153 073
0141520 012 040 040 040 040 040 040 040 040 143 141 163 145 040 047 146
0141540 154 157 141 164 047 072 040 110 105 101 120 106 063 062 133 050
0141560 050 160 164 162 051 076 076 062 051 135 040 075 040 166 141 154
0141600 165 145 073 040 142 162 145 141 153 073 012 040 040 040 040 040
0141620 040 040 040 143 141 163 145 040 047 144 157 165 142 154 145 047
0141640 072 040 110 105 101 120 106 066 064 133 050 050 160 164 162 051
0141660 076 076 063 051 135 040 075 040 166 141 154 165 145 073 040 142
0141700 162 145 141 153 073 012 040 040 040 040 040 040 040 040 143 141
0141720 163 145 040 047 052 047 072 040 110 105 101 120 125 063 062 133
0141740 050 050 160 164 162 051 076 076 062 051 135 040 075 040 166 141
0141760 154 165 145 073 040 142 162 145 141 153 073 012 040 040 040 040
0142000 040 040 040 040 144 145 146 141 165 154 164 072 040 141 142 157
0142020 162 164 050 047 151 156 166 141 154 151 144 040 164 171 160 145
0142040 040 146 157 162 040 163 145 164 126 141 154 165 145 072 040 047
0142060 040 053 040 164 171 160 145 051 073 012 040 040 040 040 040 040
0142100 175 012 040 040 040 040 175 012 012 040 040 146 165 156 143 164
0142120 151 157 156 040 163 164 141 143 153 124 162 141 143 145 050 051
0142140 040 173 012 040 040 040 040 040 040 166 141 162 040 152 163 040
0142160 075 040 152 163 123 164 141 143 153 124 162 141 143 145 050 051
0142200 073 012 040 040 040 040 040 040 151 146 040 050 115 157 144 165
0142220 154 145 133 047 145 170 164 162 141 123 164 141 143 153 124 162
0142240 141 143 145 047 135 051 040 152 163 040 053 075 040 047 134 156
0142260 047 040 053 040 115 157 144 165 154 145 133 047 145 170 164 162
0142300 141 123 164 141 143 153 124 162 141 143 145 047 135 050 051 073
0142320 012 040 040 040 040 040 040 162 145 164 165 162 156 040 144 145
0142340 155 141 156 147 154 145 101 154 154 050 152 163 051 073 012 040
0142360 040 040 040 175 012 012 040 040 146 165 156 143 164 151 157 156
0142400 040 167 141 162 156 117 156 143 145 050 164 145 170 164 051 040
0142420 173 012 040 040 040 040 040 040 151 146 040 050 041 167 141 162
0142440 156 117 156 143 145 056 163 150 157 167 156 051 040 167 141 162
0142460 156 117 156 143 145 056 163 150 157 167 156 040 075 040 173 175
0142500 073 012 040 040 040 040 040 040 151 146 040 050 041 167 141 162
0142520 156 117 156 143 145 056 163 150 157 167 156 133 164 145 170 164
0142540 135 051 040 173 012 040 040 040 040 040 040 040 040 167 141 162
0142560 156 117 156 143 145 056 163 150 157 167 156 133 164 145 170 164
0142600 135 040 075 040 061 073 012 040 040 040 040 040 040 040 040 151
0142620 146 040 050 105 116 126 111 122 117 116 115 105 116 124 137 111
0142640 123 137 116 117 104 105 051 040 164 145 170 164 040 075 040 047
0142660 167 141 162 156 151 156 147 072 040 047 040 053 040 164 145 170
0142700 164 073 012 040 040 040 040 040 040 040 040 145 162 162 050 164
0142720 145 170 164 051 073 012 040 040 040 040 040 040 175 012 040 040
0142740 040 040 175 012 012 040 040 146 165 156 143 164 151 157 156 040
0142760 167 162 151 164 145 101 162 162 141 171 124 157 115 145 155 157
0143000 162 171 050 141 162 162 141 171 054 040 142 165 146 146 145 162
0143020 051 040 173 012 040 040 040 040 040 040 141 163 163 145 162 164
0143040 050 141 162 162 141 171 056 154 145 156 147 164 150 040 076 075
0143060 040 060 054 040 047 167 162 151 164 145 101 162 162 141 171 124
0143100 157 115 145 155 157 162 171 040 141 162 162 141 171 040 155 165
0143120 163 164 040 150 141 166 145 040 141 040 154 145 156 147 164 150
0143140 040 050 163 150 157 165 154 144 040 142 145 040 141 156 040 141
0143160 162 162 141 171 040 157 162 040 164 171 160 145 144 040 141 162
0143200 162 141 171 051 047 051 012 040 040 040 040 040 040 110 105 101
0143220 120 070 056 163 145 164 050 141 162 162 141 171 054 040 142 165
0143240 146 146 145 162 051 073 012 040 040 040 040 175 012 012 040 040
0143260 146 165 156 143 164 151 157 156 040 137 145 155 163 143 162 151
0143300 160 164 145 156 137 155 145 155 143 160 171 137 142 151 147 050
0143320 144 145 163 164 054 040 163 162 143 054 040 156 165 155 051 040
0143340 173 012 040 040 040 040 040 040 110 105 101 120 125 070 056 143
0143360 157 160 171 127 151 164 150 151 156 050 144 145 163 164 054 040
0143400 163 162 143 054 040 163 162 143 040 053 040 156 165 155 051 073
0143420 012 040 040 040 040 175 012 012 040 040 166 141 162 040 160 162
0143440 151 156 164 103 150 141 162 102 165 146 146 145 162 163 040 075
0143460 040 133 156 165 154 154 054 133 135 054 133 135 135 073 012 040
0143500 040 146 165 156 143 164 151 157 156 040 160 162 151 156 164 103
0143520 150 141 162 050 163 164 162 145 141 155 054 040 143 165 162 162
0143540 051 040 173 012 040 040 040 040 040 040 166 141 162 040 142 165
0143560 146 146 145 162 040 075 040 160 162 151 156 164 103 150 141 162
0143600 102 165 146 146 145 162 163 133 163 164 162 145 141 155 135 073
0143620 012 040 040 040 040 040 040 141 163 163 145 162 164 050 142 165
0143640 146 146 145 162 051 073 012 040 040 040 040 040 040 151 146 040
0143660 050 143 165 162 162 040 075 075 075 040 060 040 174 174 040 143
0143700 165 162 162 040 075 075 075 040 061 060 051 040 173 012 040 040
0143720 040 040 040 040 040 040 050 163 164 162 145 141 155 040 075 075
0143740 075 040 061 040 077 040 157 165 164 040 072 040 145 162 162 051
0143760 050 125 124 106 070 101 162 162 141 171 124 157 123 164 162 151
0144000 156 147 050 142 165 146 146 145 162 054 040 060 051 051 073 012
0144020 040 040 040 040 040 040 040 040 142 165 146 146 145 162 056 154
0144040 145 156 147 164 150 040 075 040 060 073 012 040 040 040 040 040
0144060 040 175 040 145 154 163 145 040 173 012 040 040 040 040 040 040
0144100 040 040 142 165 146 146 145 162 056 160 165 163 150 050 143 165
0144120 162 162 051 073 012 040 040 040 040 040 040 175 012 040 040 040
0144140 040 175 012 040 040 146 165 156 143 164 151 157 156 040 146 154
0144160 165 163 150 137 116 117 137 106 111 114 105 123 131 123 124 105
0144200 115 050 051 040 173 012 040 040 040 040 040 040 057 057 040 146
0144220 154 165 163 150 040 141 156 171 164 150 151 156 147 040 162 145
0144240 155 141 151 156 151 156 147 040 151 156 040 164 150 145 040 142
0144260 165 146 146 145 162 163 040 144 165 162 151 156 147 040 163 150
0144300 165 164 144 157 167 156 012 040 040 040 040 040 040 137 146 146
0144320 154 165 163 150 050 060 051 073 012 040 040 040 040 040 040 151
0144340 146 040 050 160 162 151 156 164 103 150 141 162 102 165 146 146
0144360 145 162 163 133 061 135 056 154 145 156 147 164 150 051 040 160
0144400 162 151 156 164 103 150 141 162 050 061 054 040 061 060 051 073
0144420 012 040 040 040 040 040 040 151 146 040 050 160 162 151 156 164
0144440 103 150 141 162 102 165 146 146 145 162 163 133 062 135 056 154
0144460 145 156 147 164 150 051 040 160 162 151 156 164 103 150 141 162
0144500 050 062 054 040 061 060 051 073 012 040 040 040 040 175 012 040
0144520 040 012 040 040 166 141 162 040 123 131 123 103 101 114 114 123
0144540 040 075 040 173 166 141 162 141 162 147 163 072 165 156 144 145
0144560 146 151 156 145 144 054 147 145 164 072 146 165 156 143 164 151
0144600 157 156 050 051 040 173 012 040 040 040 040 040 040 040 040 141
0144620 163 163 145 162 164 050 123 131 123 103 101 114 114 123 056 166
0144640 141 162 141 162 147 163 040 041 075 040 165 156 144 145 146 151
0144660 156 145 144 051 073 012 040 040 040 040 040 040 040 040 123 131
0144700 123 103 101 114 114 123 056 166 141 162 141 162 147 163 040 053
0144720 075 040 064 073 012 040 040 040 040 040 040 040 040 166 141 162
0144740 040 162 145 164 040 075 040 110 105 101 120 063 062 133 050 050
0144760 050 123 131 123 103 101 114 114 123 056 166 141 162 141 162 147
0145000 163 051 055 050 064 051 051 076 076 062 051 135 073 012 040 040
0145020 040 040 040 040 040 040 162 145 164 165 162 156 040 162 145 164
0145040 073 012 040 040 040 040 040 040 175 054 147 145 164 123 164 162
0145060 072 146 165 156 143 164 151 157 156 050 160 164 162 051 040 173
0145100 012 040 040 040 040 040 040 040 040 166 141 162 040 162 145 164
0145120 040 075 040 125 124 106 070 124 157 123 164 162 151 156 147 050
0145140 160 164 162 051 073 012 040 040 040 040 040 040 040 040 162 145
0145160 164 165 162 156 040 162 145 164 073 012 040 040 040 040 040 040
0145200 175 175 073 012 040 040 146 165 156 143 164 151 157 156 040 137
0145220 146 144 137 167 162 151 164 145 050 146 144 054 040 151 157 166
0145240 054 040 151 157 166 143 156 164 054 040 160 156 165 155 051 040
0145260 173 012 040 040 040 040 040 040 057 057 040 150 141 143 153 040
0145300 164 157 040 163 165 160 160 157 162 164 040 160 162 151 156 164
0145320 146 040 151 156 040 123 131 123 103 101 114 114 123 137 122 105
0145340 121 125 111 122 105 137 106 111 114 105 123 131 123 124 105 115
0145360 075 060 012 040 040 040 040 040 040 166 141 162 040 156 165 155
0145400 040 075 040 060 073 012 040 040 040 040 040 040 146 157 162 040
0145420 050 166 141 162 040 151 040 075 040 060 073 040 151 040 074 040
0145440 151 157 166 143 156 164 073 040 151 053 053 051 040 173 012 040
0145460 040 040 040 040 040 040 040 166 141 162 040 160 164 162 040 075
0145500 040 110 105 101 120 125 063 062 133 050 050 151 157 166 051 076
0145520 076 062 051 135 073 012 040 040 040 040 040 040 040 040 166 141
0145540 162 040 154 145 156 040 075 040 110 105 101 120 125 063 062 133
0145560 050 050 050 151 157 166 051 053 050 064 051 051 076 076 062 051
0145600 135 073 012 040 040 040 040 040 040 040 040 151 157 166 040 053
0145620 075 040 070 073 012 040 040 040 040 040 040 040 040 146 157 162
0145640 040 050 166 141 162 040 152 040 075 040 060 073 040 152 040 074
0145660 040 154 145 156 073 040 152 053 053 051 040 173 012 040 040 040
0145700 040 040 040 040 040 040 040 160 162 151 156 164 103 150 141 162
0145720 050 146 144 054 040 110 105 101 120 125 070 133 160 164 162 053
0145740 152 135 051 073 012 040 040 040 040 040 040 040 040 175 012 040
0145760 040 040 040 040 040 040 040 156 165 155 040 053 075 040 154 145
0146000 156 073 012 040 040 040 040 040 040 175 012 040 040 040 040 040
0146020 040 110 105 101 120 125 063 062 133 050 050 160 156 165 155 051
0146040 076 076 062 051 135 040 075 040 156 165 155 073 012 040 040 040
0146060 040 040 040 162 145 164 165 162 156 040 060 073 012 040 040 040
0146100 040 175 012 012 040 040 146 165 156 143 164 151 157 156 040 137
0146120 160 162 157 143 137 145 170 151 164 050 143 157 144 145 051 040
0146140 173 012 040 040 040 040 040 040 105 130 111 124 123 124 101 124
0146160 125 123 040 075 040 143 157 144 145 073 012 040 040 040 040 040
0146200 040 151 146 040 050 041 153 145 145 160 122 165 156 164 151 155
0146220 145 101 154 151 166 145 050 051 051 040 173 012 040 040 040 040
0146240 040 040 040 040 151 146 040 050 115 157 144 165 154 145 133 047
0146260 157 156 105 170 151 164 047 135 051 040 115 157 144 165 154 145
0146300 133 047 157 156 105 170 151 164 047 135 050 143 157 144 145 051
0146320 073 012 040 040 040 040 040 040 040 040 101 102 117 122 124 040
0146340 075 040 164 162 165 145 073 012 040 040 040 040 040 040 175 012
0146360 040 040 040 040 040 040 161 165 151 164 137 050 143 157 144 145
0146400 054 040 156 145 167 040 105 170 151 164 123 164 141 164 165 163
0146420 050 143 157 144 145 051 051 073 012 040 040 040 040 175 012 040
0146440 040 057 052 052 040 100 160 141 162 141 155 040 173 142 157 157
0146460 154 145 141 156 174 156 165 155 142 145 162 075 175 040 151 155
0146500 160 154 151 143 151 164 040 052 057 012 040 040 146 165 156 143
0146520 164 151 157 156 040 145 170 151 164 112 123 050 163 164 141 164
0146540 165 163 054 040 151 155 160 154 151 143 151 164 051 040 173 012
0146560 040 040 040 040 040 040 105 130 111 124 123 124 101 124 125 123
0146600 040 075 040 163 164 141 164 165 163 073 012 040 040 012 040 040
0146620 040 040 040 040 151 146 040 050 041 153 145 145 160 122 165 156
0146640 164 151 155 145 101 154 151 166 145 050 051 051 040 173 012 040
0146660 040 040 040 040 040 040 040 145 170 151 164 122 165 156 164 151
0146700 155 145 050 051 073 012 040 040 040 040 040 040 175 012 040 040
0146720 012 040 040 040 040 040 040 057 057 040 151 146 040 145 170 151
0146740 164 050 051 040 167 141 163 040 143 141 154 154 145 144 040 145
0146760 170 160 154 151 143 151 164 154 171 054 040 167 141 162 156 040
0147000 164 150 145 040 165 163 145 162 040 151 146 040 164 150 145 040
0147020 162 165 156 164 151 155 145 040 151 163 156 047 164 040 141 143
0147040 164 165 141 154 154 171 040 142 145 151 156 147 040 163 150 165
0147060 164 040 144 157 167 156 012 040 040 040 040 040 040 151 146 040
0147100 050 153 145 145 160 122 165 156 164 151 155 145 101 154 151 166
0147120 145 050 051 040 046 046 040 041 151 155 160 154 151 143 151 164
0147140 051 040 173 012 040 040 040 040 040 040 040 040 166 141 162 040
0147160 155 163 147 040 075 040 047 160 162 157 147 162 141 155 040 145
0147200 170 151 164 145 144 040 050 167 151 164 150 040 163 164 141 164
0147220 165 163 072 040 047 040 053 040 163 164 141 164 165 163 040 053
0147240 040 047 051 054 040 142 165 164 040 153 145 145 160 122 165 156
0147260 164 151 155 145 101 154 151 166 145 050 051 040 151 163 040 163
0147300 145 164 040 050 143 157 165 156 164 145 162 075 047 040 053 040
0147320 162 165 156 164 151 155 145 113 145 145 160 141 154 151 166 145
0147340 103 157 165 156 164 145 162 040 053 040 047 051 040 144 165 145
0147360 040 164 157 040 141 156 040 141 163 171 156 143 040 157 160 145
0147400 162 141 164 151 157 156 054 040 163 157 040 150 141 154 164 151
0147420 156 147 040 145 170 145 143 165 164 151 157 156 040 142 165 164
0147440 040 156 157 164 040 145 170 151 164 151 156 147 040 164 150 145
0147460 040 162 165 156 164 151 155 145 040 157 162 040 160 162 145 166
0147500 145 156 164 151 156 147 040 146 165 162 164 150 145 162 040 141
0147520 163 171 156 143 040 145 170 145 143 165 164 151 157 156 040 050
0147540 171 157 165 040 143 141 156 040 165 163 145 040 145 155 163 143
0147560 162 151 160 164 145 156 137 146 157 162 143 145 137 145 170 151
0147600 164 054 040 151 146 040 171 157 165 040 167 141 156 164 040 164
0147620 157 040 146 157 162 143 145 040 141 040 164 162 165 145 040 163
0147640 150 165 164 144 157 167 156 051 047 073 012 040 040 040 040 040
0147660 040 040 040 145 162 162 050 155 163 147 051 073 012 040 040 040
0147700 040 040 040 175 012 040 040 012 040 040 040 040 040 040 137 160
0147720 162 157 143 137 145 170 151 164 050 163 164 141 164 165 163 051
0147740 073 012 040 040 040 040 175 012 166 141 162 040 101 123 123 105
0147760 122 124 111 117 116 123 040 075 040 164 162 165 145 073 012 012
0150000 146 165 156 143 164 151 157 156 040 143 150 145 143 153 111 156
0150020 143 157 155 151 156 147 115 157 144 165 154 145 101 120 111 050
0150040 051 040 173 012 040 040 151 147 156 157 162 145 144 115 157 144
0150060 165 154 145 120 162 157 160 050 047 146 145 164 143 150 123 145
0150100 164 164 151 156 147 163 047 051 073 012 175 012 166 141 162 040
0150120 141 163 155 114 151 142 162 141 162 171 101 162 147 040 075 040
0150140 173 012 040 040 042 145 155 163 143 162 151 160 164 145 156 137
0150160 155 145 155 143 160 171 137 142 151 147 042 072 040 137 145 155
0150200 163 143 162 151 160 164 145 156 137 155 145 155 143 160 171 137
0150220 142 151 147 054 012 040 040 042 146 144 137 167 162 151 164 145
0150240 042 072 040 137 146 144 137 167 162 151 164 145 012 175 073 012
0150260 166 141 162 040 141 163 155 040 075 040 143 162 145 141 164 145
0150300 127 141 163 155 050 051 073 012 057 052 052 040 100 164 171 160
0150320 145 040 173 146 165 156 143 164 151 157 156 050 056 056 056 052
0150340 051 072 077 175 040 052 057 012 166 141 162 040 137 137 137 167
0150360 141 163 155 137 143 141 154 154 137 143 164 157 162 163 040 075
0150400 040 115 157 144 165 154 145 133 042 137 137 137 167 141 163 155
0150420 137 143 141 154 154 137 143 164 157 162 163 042 135 040 075 040
0150440 143 162 145 141 164 145 105 170 160 157 162 164 127 162 141 160
0150460 160 145 162 050 042 137 137 167 141 163 155 137 143 141 154 154
0150500 137 143 164 157 162 163 042 051 073 012 012 057 052 052 040 100
0150520 164 171 160 145 040 173 146 165 156 143 164 151 157 156 050 056
0150540 056 056 052 051 072 077 175 040 052 057 012 166 141 162 040 137
0150560 155 141 151 156 040 075 040 115 157 144 165 154 145 133 042 137
0150600 155 141 151 156 042 135 040 075 040 143 162 145 141 164 145 105
0150620 170 160 157 162 164 127 162 141 160 160 145 162 050 042 155 141
0150640 151 156 042 051 073 012 012 057 052 052 040 100 164 171 160 145
0150660 040 173 146 165 156 143 164 151 157 156 050 056 056 056 052 051
0150700 072 077 175 040 052 057 012 166 141 162 040 137 137 137 145 162
0150720 162 156 157 137 154 157 143 141 164 151 157 156 040 075 040 115
0150740 157 144 165 154 145 133 042 137 137 137 145 162 162 156 157 137
0150760 154 157 143 141 164 151 157 156 042 135 040 075 040 143 162 145
0151000 141 164 145 105 170 160 157 162 164 127 162 141 160 160 145 162
0151020 050 042 137 137 145 162 162 156 157 137 154 157 143 141 164 151
0151040 157 156 042 051 073 012 012 057 052 052 040 100 164 171 160 145
0151060 040 173 146 165 156 143 164 151 157 156 050 056 056 056 052 051
0151100 072 077 175 040 052 057 012 166 141 162 040 137 137 137 146 165
0151120 156 143 163 137 157 156 137 145 170 151 164 040 075 040 115 157
0151140 144 165 154 145 133 042 137 137 137 146 165 156 143 163 137 157
0151160 156 137 145 170 151 164 042 135 040 075 040 143 162 145 141 164
0151200 145 105 170 160 157 162 164 127 162 141 160 160 145 162 050 042
0151220 137 137 146 165 156 143 163 137 157 156 137 145 170 151 164 042
0151240 051 073 012 012 057 052 052 040 100 164 171 160 145 040 173 146
0151260 165 156 143 164 151 157 156 050 056 056 056 052 051 072 077 175
0151300 040 052 057 012 166 141 162 040 137 146 146 154 165 163 150 040
0151320 075 040 115 157 144 165 154 145 133 042 137 146 146 154 165 163
0151340 150 042 135 040 075 040 143 162 145 141 164 145 105 170 160 157
0151360 162 164 127 162 141 160 160 145 162 050 042 146 146 154 165 163
0151400 150 042 051 073 012 012 057 052 052 040 100 164 171 160 145 040
0151420 173 146 165 156 143 164 151 157 156 050 056 056 056 052 051 072
0151440 077 175 040 052 057 012 166 141 162 040 137 145 155 163 143 162
0151460 151 160 164 145 156 137 163 164 141 143 153 137 151 156 151 164
0151500 040 075 040 115 157 144 165 154 145 133 042 137 145 155 163 143
0151520 162 151 160 164 145 156 137 163 164 141 143 153 137 151 156 151
0151540 164 042 135 040 075 040 146 165 156 143 164 151 157 156 050 051
0151560 040 173 012 040 040 162 145 164 165 162 156 040 050 137 145 155
0151600 163 143 162 151 160 164 145 156 137 163 164 141 143 153 137 151
0151620 156 151 164 040 075 040 115 157 144 165 154 145 133 042 137 145
0151640 155 163 143 162 151 160 164 145 156 137 163 164 141 143 153 137
0151660 151 156 151 164 042 135 040 075 040 115 157 144 165 154 145 133
0151700 042 141 163 155 042 135 133 042 145 155 163 143 162 151 160 164
0151720 145 156 137 163 164 141 143 153 137 151 156 151 164 042 135 051
0151740 056 141 160 160 154 171 050 156 165 154 154 054 040 141 162 147
0151760 165 155 145 156 164 163 051 073 012 175 073 012 012 057 052 052
0152000 040 100 164 171 160 145 040 173 146 165 156 143 164 151 157 156
0152020 050 056 056 056 052 051 072 077 175 040 052 057 012 166 141 162
0152040 040 137 145 155 163 143 162 151 160 164 145 156 137 163 164 141
0152060 143 153 137 147 145 164 137 146 162 145 145 040 075 040 115 157
0152100 144 165 154 145 133 042 137 145 155 163 143 162 151 160 164 145
0152120 156 137 163 164 141 143 153 137 147 145 164 137 146 162 145 145
0152140 042 135 040 075 040 146 165 156 143 164 151 157 156 050 051 040
0152160 173 012 040 040 162 145 164 165 162 156 040 050 137 145 155 163
0152200 143 162 151 160 164 145 156 137 163 164 141 143 153 137 147 145
0152220 164 137 146 162 145 145 040 075 040 115 157 144 165 154 145 133
0152240 042 137 145 155 163 143 162 151 160 164 145 156 137 163 164 141
0152260 143 153 137 147 145 164 137 146 162 145 145 042 135 040 075 040
0152300 115 157 144 165 154 145 133 042 141 163 155 042 135 133 042 145
0152320 155 163 143 162 151 160 164 145 156 137 163 164 141 143 153 137
0152340 147 145 164 137 146 162 145 145 042 135 051 056 141 160 160 154
0152360 171 050 156 165 154 154 054 040 141 162 147 165 155 145 156 164
0152400 163 051 073 012 175 073 012 012 057 052 052 040 100 164 171 160
0152420 145 040 173 146 165 156 143 164 151 157 156 050 056 056 056 052
0152440 051 072 077 175 040 052 057 012 166 141 162 040 137 145 155 163
0152460 143 162 151 160 164 145 156 137 163 164 141 143 153 137 147 145
0152500 164 137 142 141 163 145 040 075 040 115 157 144 165 154 145 133
0152520 042 137 145 155 163 143 162 151 160 164 145 156 137 163 164 141
0152540 143 153 137 147 145 164 137 142 141 163 145 042 135 040 075 040
0152560 146 165 156 143 164 151 157 156 050 051 040 173 012 040 040 162
0152600 145 164 165 162 156 040 050 137 145 155 163 143 162 151 160 164
0152620 145 156 137 163 164 141 143 153 137 147 145 164 137 142 141 163
0152640 145 040 075 040 115 157 144 165 154 145 133 042 137 145 155 163
0152660 143 162 151 160 164 145 156 137 163 164 141 143 153 137 147 145
0152700 164 137 142 141 163 145 042 135 040 075 040 115 157 144 165 154
0152720 145 133 042 141 163 155 042 135 133 042 145 155 163 143 162 151
0152740 160 164 145 156 137 163 164 141 143 153 137 147 145 164 137 142
0152760 141 163 145 042 135 051 056 141 160 160 154 171 050 156 165 154
0153000 154 054 040 141 162 147 165 155 145 156 164 163 051 073 012 175
0153020 073 012 012 057 052 052 040 100 164 171 160 145 040 173 146 165
0153040 156 143 164 151 157 156 050 056 056 056 052 051 072 077 175 040
0153060 052 057 012 166 141 162 040 137 145 155 163 143 162 151 160 164
0153100 145 156 137 163 164 141 143 153 137 147 145 164 137 145 156 144
0153120 040 075 040 115 157 144 165 154 145 133 042 137 145 155 163 143
0153140 162 151 160 164 145 156 137 163 164 141 143 153 137 147 145 164
0153160 137 145 156 144 042 135 040 075 040 146 165 156 143 164 151 157
0153200 156 050 051 040 173 012 040 040 162 145 164 165 162 156 040 050
0153220 137 145 155 163 143 162 151 160 164 145 156 137 163 164 141 143
0153240 153 137 147 145 164 137 145 156 144 040 075 040 115 157 144 165
0153260 154 145 133 042 137 145 155 163 143 162 151 160 164 145 156 137
0153300 163 164 141 143 153 137 147 145 164 137 145 156 144 042 135 040
0153320 075 040 115 157 144 165 154 145 133 042 141 163 155 042 135 133
0153340 042 145 155 163 143 162 151 160 164 145 156 137 163 164 141 143
0153360 153 137 147 145 164 137 145 156 144 042 135 051 056 141 160 160
0153400 154 171 050 156 165 154 154 054 040 141 162 147 165 155 145 156
0153420 164 163 051 073 012 175 073 012 012 057 052 052 040 100 164 171
0153440 160 145 040 173 146 165 156 143 164 151 157 156 050 056 056 056
0153460 052 051 072 077 175 040 052 057 012 166 141 162 040 163 164 141
0153500 143 153 123 141 166 145 040 075 040 115 157 144 165 154 145 133
0153520 042 163 164 141 143 153 123 141 166 145 042 135 040 075 040 143
0153540 162 145 141 164 145 105 170 160 157 162 164 127 162 141 160 160
0153560 145 162 050 042 163 164 141 143 153 123 141 166 145 042 051 073
0153600 012 012 057 052 052 040 100 164 171 160 145 040 173 146 165 156
0153620 143 164 151 157 156 050 056 056 056 052 051 072 077 175 040 052
0153640 057 012 166 141 162 040 163 164 141 143 153 122 145 163 164 157
0153660 162 145 040 075 040 115 157 144 165 154 145 133 042 163 164 141
0153700 143 153 122 145 163 164 157 162 145 042 135 040 075 040 143 162
0153720 145 141 164 145 105 170 160 157 162 164 127 162 141 160 160 145
0153740 162 050 042 163 164 141 143 153 122 145 163 164 157 162 145 042
0153760 051 073 012 012 057 052 052 040 100 164 171 160 145 040 173 146
0154000 165 156 143 164 151 157 156 050 056 056 056 052 051 072 077 175
0154020 040 052 057 012 166 141 162 040 163 164 141 143 153 101 154 154
0154040 157 143 040 075 040 115 157 144 165 154 145 133 042 163 164 141
0154060 143 153 101 154 154 157 143 042 135 040 075 040 143 162 145 141
0154100 164 145 105 170 160 157 162 164 127 162 141 160 160 145 162 050
0154120 042 163 164 141 143 153 101 154 154 157 143 042 051 073 012 012
0154140 057 052 052 040 100 164 171 160 145 040 173 146 165 156 143 164
0154160 151 157 156 050 056 056 056 052 051 072 077 175 040 052 057 012
0154200 166 141 162 040 144 171 156 103 141 154 154 137 152 151 152 151
0154220 040 075 040 115 157 144 165 154 145 133 042 144 171 156 103 141
0154240 154 154 137 152 151 152 151 042 135 040 075 040 143 162 145 141
0154260 164 145 105 170 160 157 162 164 127 162 141 160 160 145 162 050
0154300 042 144 171 156 103 141 154 154 137 152 151 152 151 042 051 073
0154320 012 012 012 012 012 012 057 057 040 075 075 075 040 101 165 164
0154340 157 055 147 145 156 145 162 141 164 145 144 040 160 157 163 164
0154360 141 155 142 154 145 040 163 145 164 165 160 040 145 156 164 162
0154400 171 040 163 164 165 146 146 040 075 075 075 012 012 012 166 141
0154420 162 040 165 156 145 170 160 157 162 164 145 144 122 165 156 164
0154440 151 155 145 123 171 155 142 157 154 163 040 075 040 133 012 040
0154460 040 047 162 165 156 047 054 012 040 040 047 125 124 106 070 101
0154500 162 162 141 171 124 157 123 164 162 151 156 147 047 054 012 040
0154520 040 047 125 124 106 070 124 157 123 164 162 151 156 147 047 054
0154540 012 040 040 047 163 164 162 151 156 147 124 157 125 124 106 070
0154560 101 162 162 141 171 047 054 012 040 040 047 163 164 162 151 156
0154600 147 124 157 125 124 106 070 047 054 012 040 040 047 154 145 156
0154620 147 164 150 102 171 164 145 163 125 124 106 070 047 054 012 040
0154640 040 047 141 144 144 117 156 120 162 145 122 165 156 047 054 012
0154660 040 040 047 141 144 144 117 156 111 156 151 164 047 054 012 040
0154700 040 047 141 144 144 117 156 120 162 145 115 141 151 156 047 054
0154720 012 040 040 047 141 144 144 117 156 105 170 151 164 047 054 012
0154740 040 040 047 141 144 144 117 156 120 157 163 164 122 165 156 047
0154760 054 012 040 040 047 141 144 144 122 165 156 104 145 160 145 156
0155000 144 145 156 143 171 047 054 012 040 040 047 162 145 155 157 166
0155020 145 122 165 156 104 145 160 145 156 144 145 156 143 171 047 054
0155040 012 040 040 047 106 123 137 143 162 145 141 164 145 106 157 154
0155060 144 145 162 047 054 012 040 040 047 106 123 137 143 162 145 141
0155100 164 145 120 141 164 150 047 054 012 040 040 047 106 123 137 143
0155120 162 145 141 164 145 104 141 164 141 106 151 154 145 047 054 012
0155140 040 040 047 106 123 137 143 162 145 141 164 145 120 162 145 154
0155160 157 141 144 145 144 106 151 154 145 047 054 012 040 040 047 106
0155200 123 137 143 162 145 141 164 145 114 141 172 171 106 151 154 145
0155220 047 054 012 040 040 047 106 123 137 143 162 145 141 164 145 114
0155240 151 156 153 047 054 012 040 040 047 106 123 137 143 162 145 141
0155260 164 145 104 145 166 151 143 145 047 054 012 040 040 047 106 123
0155300 137 165 156 154 151 156 153 047 054 012 040 040 047 147 145 164
0155320 114 105 102 047 054 012 040 040 047 147 145 164 106 165 156 143
0155340 164 151 157 156 124 141 142 154 145 163 047 054 012 040 040 047
0155360 141 154 151 147 156 106 165 156 143 164 151 157 156 124 141 142
0155400 154 145 163 047 054 012 040 040 047 162 145 147 151 163 164 145
0155420 162 106 165 156 143 164 151 157 156 163 047 054 012 040 040 047
0155440 160 162 145 164 164 171 120 162 151 156 164 047 054 012 040 040
0155460 047 147 145 164 103 157 155 160 151 154 145 162 123 145 164 164
0155500 151 156 147 047 054 012 040 040 047 160 162 151 156 164 047 054
0155520 012 040 040 047 160 162 151 156 164 105 162 162 047 054 012 040
0155540 040 047 143 141 154 154 115 141 151 156 047 054 012 040 040 047
0155560 141 142 157 162 164 047 054 012 040 040 047 153 145 145 160 122
0155600 165 156 164 151 155 145 101 154 151 166 145 047 054 012 040 040
0155620 047 167 141 163 155 115 145 155 157 162 171 047 054 012 040 040
0155640 047 163 164 141 143 153 101 154 154 157 143 047 054 012 040 040
0155660 047 163 164 141 143 153 123 141 166 145 047 054 012 040 040 047
0155700 163 164 141 143 153 122 145 163 164 157 162 145 047 054 012 040
0155720 040 047 147 145 164 124 145 155 160 122 145 164 060 047 054 012
0155740 040 040 047 163 145 164 124 145 155 160 122 145 164 060 047 054
0155760 012 040 040 047 167 162 151 164 145 123 164 141 143 153 103 157
0156000 157 153 151 145 047 054 012 040 040 047 143 150 145 143 153 123
0156020 164 141 143 153 103 157 157 153 151 145 047 054 012 040 040 047
0156040 160 164 162 124 157 123 164 162 151 156 147 047 054 012 040 040
0156060 047 172 145 162 157 115 145 155 157 162 171 047 054 012 040 040
0156100 047 163 164 162 151 156 147 124 157 116 145 167 125 124 106 070
0156120 047 054 012 040 040 047 145 170 151 164 112 123 047 054 012 040
0156140 040 047 147 145 164 110 145 141 160 115 141 170 047 054 012 040
0156160 040 047 141 142 157 162 164 117 156 103 141 156 156 157 164 107
0156200 162 157 167 115 145 155 157 162 171 047 054 012 040 040 047 145
0156220 155 163 143 162 151 160 164 145 156 137 162 145 141 154 154 157
0156240 143 137 142 165 146 146 145 162 047 054 012 040 040 047 105 116
0156260 126 047 054 012 040 040 047 105 122 122 116 117 137 103 117 104
0156300 105 123 047 054 012 040 040 047 105 122 122 116 117 137 115 105
0156320 123 123 101 107 105 123 047 054 012 040 040 047 163 145 164 105
0156340 162 162 116 157 047 054 012 040 040 047 151 156 145 164 120 164
0156360 157 156 064 047 054 012 040 040 047 151 156 145 164 116 164 157
0156400 160 064 047 054 012 040 040 047 151 156 145 164 120 164 157 156
0156420 066 047 054 012 040 040 047 151 156 145 164 116 164 157 160 066
0156440 047 054 012 040 040 047 162 145 141 144 123 157 143 153 141 144
0156460 144 162 047 054 012 040 040 047 167 162 151 164 145 123 157 143
0156500 153 141 144 144 162 047 054 012 040 040 047 104 116 123 047 054
0156520 012 040 040 047 147 145 164 110 157 163 164 102 171 116 141 155
0156540 145 047 054 012 040 040 047 120 162 157 164 157 143 157 154 163
0156560 047 054 012 040 040 047 123 157 143 153 145 164 163 047 054 012
0156600 040 040 047 147 145 164 122 141 156 144 157 155 104 145 166 151
0156620 143 145 047 054 012 040 040 047 167 141 162 156 117 156 143 145
0156640 047 054 012 040 040 047 164 162 141 166 145 162 163 145 123 164
0156660 141 143 153 047 054 012 040 040 047 125 116 127 111 116 104 137
0156700 103 101 103 110 105 047 054 012 040 040 047 143 157 156 166 145
0156720 162 164 120 103 164 157 123 157 165 162 143 145 114 157 143 141
0156740 164 151 157 156 047 054 012 040 040 047 162 145 141 144 101 163
0156760 155 103 157 156 163 164 101 162 147 163 101 162 162 141 171 047
0157000 054 012 040 040 047 162 145 141 144 101 163 155 103 157 156 163
0157020 164 101 162 147 163 047 054 012 040 040 047 155 141 151 156 124
0157040 150 162 145 141 144 105 115 137 101 123 115 047 054 012 040 040
0157060 047 152 163 164 157 151 137 161 047 054 012 040 040 047 152 163
0157100 164 157 151 137 163 047 054 012 040 040 047 147 145 164 105 170
0157120 145 143 165 164 141 142 154 145 116 141 155 145 047 054 012 040
0157140 040 047 154 151 163 164 145 156 117 156 143 145 047 054 012 040
0157160 040 047 141 165 164 157 122 145 163 165 155 145 101 165 144 151
0157200 157 103 157 156 164 145 170 164 047 054 012 040 040 047 144 171
0157220 156 103 141 154 154 114 145 147 141 143 171 047 054 012 040 040
0157240 047 147 145 164 104 171 156 103 141 154 154 145 162 047 054 012
0157260 040 040 047 144 171 156 103 141 154 154 047 054 012 040 040 047
0157300 150 141 156 144 154 145 105 170 143 145 160 164 151 157 156 047
0157320 054 012 040 040 047 162 165 156 164 151 155 145 113 145 145 160
0157340 141 154 151 166 145 120 165 163 150 047 054 012 040 040 047 162
0157360 165 156 164 151 155 145 113 145 145 160 141 154 151 166 145 120
0157400 157 160 047 054 012 040 040 047 143 141 154 154 125 163 145 162
0157420 103 141 154 154 142 141 143 153 047 054 012 040 040 047 155 141
0157440 171 142 145 105 170 151 164 047 054 012 040 040 047 163 141 146
0157460 145 123 145 164 124 151 155 145 157 165 164 047 054 012 040 040
0157500 047 141 163 155 152 163 115 141 156 147 154 145 047 054 012 040
0157520 040 047 141 163 171 156 143 114 157 141 144 047 054 012 040 040
0157540 047 141 154 151 147 156 115 145 155 157 162 171 047 054 012 040
0157560 040 047 155 155 141 160 101 154 154 157 143 047 054 012 040 040
0157600 047 167 162 151 164 145 111 065 063 124 157 111 066 064 047 054
0157620 012 040 040 047 167 162 151 164 145 111 065 063 124 157 111 066
0157640 064 103 154 141 155 160 145 144 047 054 012 040 040 047 167 162
0157660 151 164 145 111 065 063 124 157 111 066 064 123 151 147 156 141
0157700 154 151 156 147 047 054 012 040 040 047 167 162 151 164 145 111
0157720 065 063 124 157 125 066 064 103 154 141 155 160 145 144 047 054
0157740 012 040 040 047 167 162 151 164 145 111 065 063 124 157 125 066
0157760 064 123 151 147 156 141 154 151 156 147 047 054 012 040 040 047
0160000 162 145 141 144 111 065 063 106 162 157 155 111 066 064 047 054
0160020 012 040 040 047 162 145 141 144 111 065 063 106 162 157 155 125
0160040 066 064 047 054 012 040 040 047 143 157 156 166 145 162 164 111
0160060 063 062 120 141 151 162 124 157 111 065 063 047 054 012 040 040
0160100 047 143 157 156 166 145 162 164 111 063 062 120 141 151 162 124
0160120 157 111 065 063 103 150 145 143 153 145 144 047 054 012 040 040
0160140 047 143 157 156 166 145 162 164 125 063 062 120 141 151 162 124
0160160 157 111 065 063 047 054 012 040 040 047 147 145 164 103 106 165
0160200 156 143 047 054 012 040 040 047 143 143 141 154 154 047 054 012
0160220 040 040 047 143 167 162 141 160 047 054 012 040 040 047 165 154
0160240 145 142 061 062 070 105 156 143 157 144 145 047 054 012 040 040
0160260 047 163 151 147 124 157 127 141 163 155 124 171 160 145 163 047
0160300 054 012 040 040 047 147 145 156 145 162 141 164 145 106 165 156
0160320 143 124 171 160 145 047 054 012 040 040 047 143 157 156 166 145
0160340 162 164 112 163 106 165 156 143 164 151 157 156 124 157 127 141
0160360 163 155 047 054 012 040 040 047 146 162 145 145 124 141 142 154
0160400 145 111 156 144 145 170 145 163 047 054 012 040 040 047 146 165
0160420 156 143 164 151 157 156 163 111 156 124 141 142 154 145 115 141
0160440 160 047 054 012 040 040 047 147 145 164 105 155 160 164 171 124
0160460 141 142 154 145 123 154 157 164 047 054 012 040 040 047 165 160
0160500 144 141 164 145 124 141 142 154 145 115 141 160 047 054 012 040
0160520 040 047 141 144 144 106 165 156 143 164 151 157 156 047 054 012
0160540 040 040 047 162 145 155 157 166 145 106 165 156 143 164 151 157
0160560 156 047 054 012 040 040 047 162 145 141 154 154 171 116 145 147
0160600 141 164 151 166 145 047 054 012 040 040 047 165 156 123 151 147
0160620 156 047 054 012 040 040 047 163 164 162 114 145 156 047 054 012
0160640 040 040 047 162 145 123 151 147 156 047 054 012 040 040 047 146
0160660 157 162 155 141 164 123 164 162 151 156 147 047 054 012 040 040
0160700 047 163 145 164 126 141 154 165 145 047 054 012 040 040 047 147
0160720 145 164 126 141 154 165 145 047 054 012 040 040 047 120 101 124
0160740 110 047 054 012 040 040 047 120 101 124 110 137 106 123 047 054
0160760 012 040 040 047 151 156 164 101 162 162 141 171 106 162 157 155
0161000 123 164 162 151 156 147 047 054 012 040 040 047 151 156 164 101
0161020 162 162 141 171 124 157 123 164 162 151 156 147 047 054 012 040
0161040 040 047 101 163 143 151 151 124 157 123 164 162 151 156 147 047
0161060 054 012 040 040 047 163 164 162 151 156 147 124 157 101 163 143
0161100 151 151 047 054 012 040 040 047 125 124 106 061 066 104 145 143
0161120 157 144 145 162 047 054 012 040 040 047 125 124 106 061 066 124
0161140 157 123 164 162 151 156 147 047 054 012 040 040 047 163 164 162
0161160 151 156 147 124 157 125 124 106 061 066 047 054 012 040 040 047
0161200 154 145 156 147 164 150 102 171 164 145 163 125 124 106 061 066
0161220 047 054 012 040 040 047 125 124 106 063 062 124 157 123 164 162
0161240 151 156 147 047 054 012 040 040 047 163 164 162 151 156 147 124
0161260 157 125 124 106 063 062 047 054 012 040 040 047 154 145 156 147
0161300 164 150 102 171 164 145 163 125 124 106 063 062 047 054 012 040
0161320 040 047 141 154 154 157 143 141 164 145 125 124 106 070 047 054
0161340 012 040 040 047 141 154 154 157 143 141 164 145 125 124 106 070
0161360 117 156 123 164 141 143 153 047 054 012 040 040 047 167 162 151
0161400 164 145 123 164 162 151 156 147 124 157 115 145 155 157 162 171
0161420 047 054 012 040 040 047 167 162 151 164 145 101 162 162 141 171
0161440 124 157 115 145 155 157 162 171 047 054 012 040 040 047 167 162
0161460 151 164 145 101 163 143 151 151 124 157 115 145 155 157 162 171
0161500 047 054 012 040 040 047 123 131 123 103 101 114 114 123 047 054
0161520 012 040 040 047 147 145 164 123 157 143 153 145 164 106 162 157
0161540 155 106 104 047 054 012 040 040 047 147 145 164 123 157 143 153
0161560 145 164 101 144 144 162 145 163 163 047 054 012 040 040 047 112
0161600 123 105 166 145 156 164 163 047 054 012 040 040 047 162 145 147
0161620 151 163 164 145 162 113 145 171 105 166 145 156 164 103 141 154
0161640 154 142 141 143 153 047 054 012 040 040 047 163 160 145 143 151
0161660 141 154 110 124 115 114 124 141 162 147 145 164 163 047 054 012
0161700 040 040 047 155 141 171 142 145 103 123 164 162 151 156 147 124
0161720 157 112 163 123 164 162 151 156 147 047 054 012 040 040 047 146
0161740 151 156 144 105 166 145 156 164 124 141 162 147 145 164 047 054
0161760 012 040 040 047 146 151 156 144 103 141 156 166 141 163 105 166
0162000 145 156 164 124 141 162 147 145 164 047 054 012 040 040 047 147
0162020 145 164 102 157 165 156 144 151 156 147 103 154 151 145 156 164
0162040 122 145 143 164 047 054 012 040 040 047 146 151 154 154 115 157
0162060 165 163 145 105 166 145 156 164 104 141 164 141 047 054 012 040
0162100 040 047 162 145 147 151 163 164 145 162 115 157 165 163 145 105
0162120 166 145 156 164 103 141 154 154 142 141 143 153 047 054 012 040
0162140 040 047 162 145 147 151 163 164 145 162 127 150 145 145 154 105
0162160 166 145 156 164 103 141 154 154 142 141 143 153 047 054 012 040
0162200 040 047 162 145 147 151 163 164 145 162 125 151 105 166 145 156
0162220 164 103 141 154 154 142 141 143 153 047 054 012 040 040 047 162
0162240 145 147 151 163 164 145 162 106 157 143 165 163 105 166 145 156
0162260 164 103 141 154 154 142 141 143 153 047 054 012 040 040 047 146
0162300 151 154 154 104 145 166 151 143 145 117 162 151 145 156 164 141
0162320 164 151 157 156 105 166 145 156 164 104 141 164 141 047 054 012
0162340 040 040 047 162 145 147 151 163 164 145 162 104 145 166 151 143
0162360 145 117 162 151 145 156 164 141 164 151 157 156 105 166 145 156
0162400 164 103 141 154 154 142 141 143 153 047 054 012 040 040 047 146
0162420 151 154 154 104 145 166 151 143 145 115 157 164 151 157 156 105
0162440 166 145 156 164 104 141 164 141 047 054 012 040 040 047 162 145
0162460 147 151 163 164 145 162 104 145 166 151 143 145 115 157 164 151
0162500 157 156 105 166 145 156 164 103 141 154 154 142 141 143 153 047
0162520 054 012 040 040 047 163 143 162 145 145 156 117 162 151 145 156
0162540 164 141 164 151 157 156 047 054 012 040 040 047 146 151 154 154
0162560 117 162 151 145 156 164 141 164 151 157 156 103 150 141 156 147
0162600 145 105 166 145 156 164 104 141 164 141 047 054 012 040 040 047
0162620 162 145 147 151 163 164 145 162 117 162 151 145 156 164 141 164
0162640 151 157 156 103 150 141 156 147 145 105 166 145 156 164 103 141
0162660 154 154 142 141 143 153 047 054 012 040 040 047 146 151 154 154
0162700 106 165 154 154 163 143 162 145 145 156 103 150 141 156 147 145
0162720 105 166 145 156 164 104 141 164 141 047 054 012 040 040 047 162
0162740 145 147 151 163 164 145 162 106 165 154 154 163 143 162 145 145
0162760 156 103 150 141 156 147 145 105 166 145 156 164 103 141 154 154
0163000 142 141 143 153 047 054 012 040 040 047 112 123 105 166 145 156
0163020 164 163 137 162 145 161 165 145 163 164 106 165 154 154 163 143
0163040 162 145 145 156 047 054 012 040 040 047 112 123 105 166 145 156
0163060 164 163 137 162 145 163 151 172 145 103 141 156 166 141 163 106
0163100 157 162 106 165 154 154 163 143 162 145 145 156 047 054 012 040
0163120 040 047 162 145 147 151 163 164 145 162 122 145 163 164 157 162
0163140 145 117 154 144 123 164 171 154 145 047 054 012 040 040 047 150
0163160 151 144 145 105 166 145 162 171 164 150 151 156 147 105 170 143
0163200 145 160 164 107 151 166 145 156 105 154 145 155 145 156 164 047
0163220 054 012 040 040 047 162 145 163 164 157 162 145 110 151 144 144
0163240 145 156 105 154 145 155 145 156 164 163 047 054 012 040 040 047
0163260 163 145 164 114 145 164 164 145 162 142 157 170 047 054 012 040
0163300 040 047 143 165 162 162 145 156 164 106 165 154 154 163 143 162
0163320 145 145 156 123 164 162 141 164 145 147 171 047 054 012 040 040
0163340 047 162 145 163 164 157 162 145 117 154 144 127 151 156 144 157
0163360 167 145 144 123 164 171 154 145 047 054 012 040 040 047 163 157
0163400 146 164 106 165 154 154 163 143 162 145 145 156 122 145 163 151
0163420 172 145 127 145 142 107 114 122 145 156 144 145 162 124 141 162
0163440 147 145 164 047 054 012 040 040 047 144 157 122 145 161 165 145
0163460 163 164 106 165 154 154 163 143 162 145 145 156 047 054 012 040
0163500 040 047 146 151 154 154 120 157 151 156 164 145 162 154 157 143
0163520 153 103 150 141 156 147 145 105 166 145 156 164 104 141 164 141
0163540 047 054 012 040 040 047 162 145 147 151 163 164 145 162 120 157
0163560 151 156 164 145 162 154 157 143 153 103 150 141 156 147 145 105
0163600 166 145 156 164 103 141 154 154 142 141 143 153 047 054 012 040
0163620 040 047 162 145 147 151 163 164 145 162 120 157 151 156 164 145
0163640 162 154 157 143 153 105 162 162 157 162 105 166 145 156 164 103
0163660 141 154 154 142 141 143 153 047 054 012 040 040 047 162 145 161
0163700 165 145 163 164 120 157 151 156 164 145 162 114 157 143 153 047
0163720 054 012 040 040 047 146 151 154 154 126 151 163 151 142 151 154
0163740 151 164 171 103 150 141 156 147 145 105 166 145 156 164 104 141
0163760 164 141 047 054 012 040 040 047 162 145 147 151 163 164 145 162
0164000 126 151 163 151 142 151 154 151 164 171 103 150 141 156 147 145
0164020 105 166 145 156 164 103 141 154 154 142 141 143 153 047 054 012
0164040 040 040 047 162 145 147 151 163 164 145 162 124 157 165 143 150
0164060 105 166 145 156 164 103 141 154 154 142 141 143 153 047 054 012
0164100 040 040 047 146 151 154 154 107 141 155 145 160 141 144 105 166
0164120 145 156 164 104 141 164 141 047 054 012 040 040 047 162 145 147
0164140 151 163 164 145 162 107 141 155 145 160 141 144 105 166 145 156
0164160 164 103 141 154 154 142 141 143 153 047 054 012 040 040 047 162
0164200 145 147 151 163 164 145 162 102 145 146 157 162 145 125 156 154
0164220 157 141 144 105 166 145 156 164 103 141 154 154 142 141 143 153
0164240 047 054 012 040 040 047 146 151 154 154 102 141 164 164 145 162
0164260 171 105 166 145 156 164 104 141 164 141 047 054 012 040 040 047
0164300 142 141 164 164 145 162 171 047 054 012 040 040 047 162 145 147
0164320 151 163 164 145 162 102 141 164 164 145 162 171 105 166 145 156
0164340 164 103 141 154 154 142 141 143 153 047 054 012 040 040 047 163
0164360 145 164 103 141 156 166 141 163 105 154 145 155 145 156 164 123
0164400 151 172 145 047 054 012 040 040 047 147 145 164 103 141 156 166
0164420 141 163 105 154 145 155 145 156 164 123 151 172 145 047 054 012
0164440 040 040 047 144 145 155 141 156 147 154 145 047 054 012 040 040
0164460 047 144 145 155 141 156 147 154 145 101 154 154 047 054 012 040
0164500 040 047 152 163 123 164 141 143 153 124 162 141 143 145 047 054
0164520 012 040 040 047 163 164 141 143 153 124 162 141 143 145 047 054
0164540 012 040 040 047 105 170 151 164 123 164 141 164 165 163 047 054
0164560 012 040 040 047 147 145 164 105 156 166 123 164 162 151 156 147
0164600 163 047 054 012 040 040 047 143 150 145 143 153 127 141 163 151
0164620 103 154 157 143 153 047 054 012 040 040 047 146 154 165 163 150
0164640 137 116 117 137 106 111 114 105 123 131 123 124 105 115 047 054
0164660 012 040 040 047 144 154 157 160 145 156 115 151 163 163 151 156
0164700 147 105 162 162 157 162 047 054 012 040 040 047 143 162 145 141
0164720 164 145 104 171 156 143 141 154 154 127 162 141 160 160 145 162
0164740 047 054 012 040 040 047 163 145 164 111 155 155 145 144 151 141
0164760 164 145 127 162 141 160 160 145 144 047 054 012 040 040 047 143
0165000 154 145 141 162 111 155 155 145 144 151 141 164 145 127 162 141
0165020 160 160 145 144 047 054 012 040 040 047 160 157 154 171 146 151
0165040 154 154 123 145 164 111 155 155 145 144 151 141 164 145 047 054
0165060 012 040 040 047 165 156 143 141 165 147 150 164 105 170 143 145
0165100 160 164 151 157 156 103 157 165 156 164 047 054 012 040 040 047
0165120 145 170 143 145 160 164 151 157 156 114 141 163 164 047 054 012
0165140 040 040 047 145 170 143 145 160 164 151 157 156 103 141 165 147
0165160 150 164 047 054 012 040 040 047 105 170 143 145 160 164 151 157
0165200 156 111 156 146 157 047 054 012 040 040 047 145 170 143 145 160
0165220 164 151 157 156 137 141 144 144 122 145 146 047 054 012 040 040
0165240 047 145 170 143 145 160 164 151 157 156 137 144 145 143 122 145
0165260 146 047 054 012 040 040 047 102 162 157 167 163 145 162 047 054
0165300 012 040 040 047 163 145 164 115 141 151 156 114 157 157 160 047
0165320 054 012 040 040 047 167 147 145 164 047 054 012 040 040 047 106
0165340 123 047 054 012 040 040 047 115 105 115 106 123 047 054 012 040
0165360 040 047 124 124 131 047 054 012 040 040 047 120 111 120 105 106
0165400 123 047 054 012 040 040 047 123 117 103 113 106 123 047 054 012
0165420 040 040 047 137 163 145 164 116 145 164 167 157 162 153 103 141
0165440 154 154 142 141 143 153 047 054 012 040 040 047 116 117 104 105
0165460 106 123 047 054 012 040 040 047 116 117 104 105 122 101 127 106
0165500 123 047 054 012 040 040 047 164 145 155 160 106 151 170 145 144
0165520 114 145 156 147 164 150 101 162 162 141 171 047 054 012 040 040
0165540 047 155 151 156 151 124 145 155 160 127 145 142 107 114 106 154
0165560 157 141 164 102 165 146 146 145 162 163 047 054 012 040 040 047
0165600 150 145 141 160 117 142 152 145 143 164 106 157 162 127 145 142
0165620 107 114 124 171 160 145 047 054 012 040 040 047 150 145 141 160
0165640 101 143 143 145 163 163 123 150 151 146 164 106 157 162 127 145
0165660 142 107 114 110 145 141 160 047 054 012 040 040 047 107 114 047
0165700 054 012 040 040 047 145 155 163 143 162 151 160 164 145 156 127
0165720 145 142 107 114 107 145 164 047 054 012 040 040 047 143 157 155
0165740 160 165 164 145 125 156 160 141 143 153 101 154 151 147 156 145
0165760 144 111 155 141 147 145 123 151 172 145 047 054 012 040 040 047
0166000 145 155 163 143 162 151 160 164 145 156 127 145 142 107 114 107
0166020 145 164 124 145 170 120 151 170 145 154 104 141 164 141 047 054
0166040 012 040 040 047 145 155 163 143 162 151 160 164 145 156 127 145
0166060 142 107 114 107 145 164 125 156 151 146 157 162 155 047 054 012
0166100 040 040 047 167 145 142 147 154 107 145 164 125 156 151 146 157
0166120 162 155 114 157 143 141 164 151 157 156 047 054 012 040 040 047
0166140 167 145 142 147 154 120 162 145 160 141 162 145 125 156 151 146
0166160 157 162 155 114 157 143 141 164 151 157 156 163 102 145 146 157
0166200 162 145 106 151 162 163 164 125 163 145 047 054 012 040 040 047
0166220 167 145 142 147 154 107 145 164 114 145 146 164 102 162 141 143
0166240 145 120 157 163 047 054 012 040 040 047 145 155 163 143 162 151
0166260 160 164 145 156 127 145 142 107 114 107 145 164 126 145 162 164
0166300 145 170 101 164 164 162 151 142 047 054 012 040 040 047 167 162
0166320 151 164 145 107 114 101 162 162 141 171 047 054 012 040 040 047
0166340 101 114 047 054 012 040 040 047 123 104 114 137 165 156 151 143
0166360 157 144 145 047 054 012 040 040 047 123 104 114 137 164 164 146
0166400 103 157 156 164 145 170 164 047 054 012 040 040 047 123 104 114
0166420 137 141 165 144 151 157 047 054 012 040 040 047 123 104 114 047
0166440 054 012 040 040 047 123 104 114 137 147 146 170 047 054 012 040
0166460 040 047 107 114 125 124 047 054 012 040 040 047 105 107 114 047
0166500 054 012 040 040 047 107 114 106 127 137 127 151 156 144 157 167
0166520 047 054 012 040 040 047 107 114 106 127 047 054 012 040 040 047
0166540 107 114 105 127 047 054 012 040 040 047 111 104 102 123 164 157
0166560 162 145 047 054 012 040 040 047 162 165 156 101 156 144 101 142
0166600 157 162 164 111 146 105 162 162 157 162 047 054 012 040 040 047
0166620 101 114 114 117 103 137 116 117 122 115 101 114 047 054 012 040
0166640 040 047 101 114 114 117 103 137 123 124 101 103 113 047 054 012
0166660 040 040 047 141 154 154 157 143 141 164 145 047 054 012 135 073
0166700 012 165 156 145 170 160 157 162 164 145 144 122 165 156 164 151
0166720 155 145 123 171 155 142 157 154 163 056 146 157 162 105 141 143
0166740 150 050 165 156 145 170 160 157 162 164 145 144 122 165 156 164
0166760 151 155 145 123 171 155 142 157 154 051 073 012 166 141 162 040
0167000 155 151 163 163 151 156 147 114 151 142 162 141 162 171 123 171
0167020 155 142 157 154 163 040 075 040 133 012 040 040 047 160 164 162
0167040 124 157 123 164 162 151 156 147 047 054 012 040 040 047 172 145
0167060 162 157 115 145 155 157 162 171 047 054 012 040 040 047 163 164
0167100 162 151 156 147 124 157 116 145 167 125 124 106 070 047 054 012
0167120 040 040 047 147 145 164 110 145 141 160 115 141 170 047 054 012
0167140 040 040 047 141 142 157 162 164 117 156 103 141 156 156 157 164
0167160 107 162 157 167 115 145 155 157 162 171 047 054 012 040 040 047
0167200 145 155 163 143 162 151 160 164 145 156 137 162 145 141 154 154
0167220 157 143 137 142 165 146 146 145 162 047 054 012 040 040 047 163
0167240 145 164 105 162 162 116 157 047 054 012 040 040 047 151 156 145
0167260 164 120 164 157 156 064 047 054 012 040 040 047 151 156 145 164
0167300 116 164 157 160 064 047 054 012 040 040 047 151 156 145 164 120
0167320 164 157 156 066 047 054 012 040 040 047 151 156 145 164 116 164
0167340 157 160 066 047 054 012 040 040 047 162 145 141 144 123 157 143
0167360 153 141 144 144 162 047 054 012 040 040 047 167 162 151 164 145
0167400 123 157 143 153 141 144 144 162 047 054 012 040 040 047 147 145
0167420 164 110 157 163 164 102 171 116 141 155 145 047 054 012 040 040
0167440 047 147 145 164 122 141 156 144 157 155 104 145 166 151 143 145
0167460 047 054 012 040 040 047 164 162 141 166 145 162 163 145 123 164
0167500 141 143 153 047 054 012 040 040 047 143 157 156 166 145 162 164
0167520 120 103 164 157 123 157 165 162 143 145 114 157 143 141 164 151
0167540 157 156 047 054 012 040 040 047 162 145 141 144 101 163 155 103
0167560 157 156 163 164 101 162 147 163 047 054 012 040 040 047 155 141
0167600 151 156 124 150 162 145 141 144 105 115 137 101 123 115 047 054
0167620 012 040 040 047 152 163 164 157 151 137 161 047 054 012 040 040
0167640 047 152 163 164 157 151 137 163 047 054 012 040 040 047 147 145
0167660 164 105 170 145 143 165 164 141 142 154 145 116 141 155 145 047
0167700 054 012 040 040 047 154 151 163 164 145 156 117 156 143 145 047
0167720 054 012 040 040 047 141 165 164 157 122 145 163 165 155 145 101
0167740 165 144 151 157 103 157 156 164 145 170 164 047 054 012 040 040
0167760 047 144 171 156 103 141 154 154 114 145 147 141 143 171 047 054
0170000 012 040 040 047 147 145 164 104 171 156 103 141 154 154 145 162
0170020 047 054 012 040 040 047 144 171 156 103 141 154 154 047 054 012
0170040 040 040 047 162 165 156 164 151 155 145 113 145 145 160 141 154
0170060 151 166 145 120 165 163 150 047 054 012 040 040 047 162 165 156
0170100 164 151 155 145 113 145 145 160 141 154 151 166 145 120 157 160
0170120 047 054 012 040 040 047 143 141 154 154 125 163 145 162 103 141
0170140 154 154 142 141 143 153 047 054 012 040 040 047 155 141 171 142
0170160 145 105 170 151 164 047 054 012 040 040 047 163 141 146 145 123
0170200 145 164 124 151 155 145 157 165 164 047 054 012 040 040 047 141
0170220 163 155 152 163 115 141 156 147 154 145 047 054 012 040 040 047
0170240 141 163 171 156 143 114 157 141 144 047 054 012 040 040 047 141
0170260 154 151 147 156 115 145 155 157 162 171 047 054 012 040 040 047
0170300 155 155 141 160 101 154 154 157 143 047 054 012 040 040 047 167
0170320 162 151 164 145 111 065 063 124 157 111 066 064 047 054 012 040
0170340 040 047 167 162 151 164 145 111 065 063 124 157 111 066 064 103
0170360 154 141 155 160 145 144 047 054 012 040 040 047 167 162 151 164
0170400 145 111 065 063 124 157 111 066 064 123 151 147 156 141 154 151
0170420 156 147 047 054 012 040 040 047 167 162 151 164 145 111 065 063
0170440 124 157 125 066 064 103 154 141 155 160 145 144 047 054 012 040
0170460 040 047 167 162 151 164 145 111 065 063 124 157 125 066 064 123
0170500 151 147 156 141 154 151 156 147 047 054 012 040 040 047 162 145
0170520 141 144 111 065 063 106 162 157 155 111 066 064 047 054 012 040
0170540 040 047 162 145 141 144 111 065 063 106 162 157 155 125 066 064
0170560 047 054 012 040 040 047 143 157 156 166 145 162 164 111 063 062
0170600 120 141 151 162 124 157 111 065 063 047 054 012 040 040 047 143
0170620 157 156 166 145 162 164 111 063 062 120 141 151 162 124 157 111
0170640 065 063 103 150 145 143 153 145 144 047 054 012 040 040 047 143
0170660 157 156 166 145 162 164 125 063 062 120 141 151 162 124 157 111
0170700 065 063 047 054 012 040 040 047 147 145 164 103 106 165 156 143
0170720 047 054 012 040 040 047 143 143 141 154 154 047 054 012 040 040
0170740 047 143 167 162 141 160 047 054 012 040 040 047 165 154 145 142
0170760 061 062 070 105 156 143 157 144 145 047 054 012 040 040 047 163
0171000 151 147 124 157 127 141 163 155 124 171 160 145 163 047 054 012
0171020 040 040 047 147 145 156 145 162 141 164 145 106 165 156 143 124
0171040 171 160 145 047 054 012 040 040 047 143 157 156 166 145 162 164
0171060 112 163 106 165 156 143 164 151 157 156 124 157 127 141 163 155
0171100 047 054 012 040 040 047 147 145 164 105 155 160 164 171 124 141
0171120 142 154 145 123 154 157 164 047 054 012 040 040 047 165 160 144
0171140 141 164 145 124 141 142 154 145 115 141 160 047 054 012 040 040
0171160 047 141 144 144 106 165 156 143 164 151 157 156 047 054 012 040
0171200 040 047 162 145 155 157 166 145 106 165 156 143 164 151 157 156
0171220 047 054 012 040 040 047 162 145 141 154 154 171 116 145 147 141
0171240 164 151 166 145 047 054 012 040 040 047 165 156 123 151 147 156
0171260 047 054 012 040 040 047 163 164 162 114 145 156 047 054 012 040
0171300 040 047 162 145 123 151 147 156 047 054 012 040 040 047 146 157
0171320 162 155 141 164 123 164 162 151 156 147 047 054 012 040 040 047
0171340 151 156 164 101 162 162 141 171 106 162 157 155 123 164 162 151
0171360 156 147 047 054 012 040 040 047 151 156 164 101 162 162 141 171
0171400 124 157 123 164 162 151 156 147 047 054 012 040 040 047 101 163
0171420 143 151 151 124 157 123 164 162 151 156 147 047 054 012 040 040
0171440 047 163 164 162 151 156 147 124 157 101 163 143 151 151 047 054
0171460 012 040 040 047 125 124 106 061 066 124 157 123 164 162 151 156
0171500 147 047 054 012 040 040 047 163 164 162 151 156 147 124 157 125
0171520 124 106 061 066 047 054 012 040 040 047 154 145 156 147 164 150
0171540 102 171 164 145 163 125 124 106 061 066 047 054 012 040 040 047
0171560 125 124 106 063 062 124 157 123 164 162 151 156 147 047 054 012
0171600 040 040 047 163 164 162 151 156 147 124 157 125 124 106 063 062
0171620 047 054 012 040 040 047 154 145 156 147 164 150 102 171 164 145
0171640 163 125 124 106 063 062 047 054 012 040 040 047 141 154 154 157
0171660 143 141 164 145 125 124 106 070 047 054 012 040 040 047 141 154
0171700 154 157 143 141 164 145 125 124 106 070 117 156 123 164 141 143
0171720 153 047 054 012 040 040 047 167 162 151 164 145 123 164 162 151
0171740 156 147 124 157 115 145 155 157 162 171 047 054 012 040 040 047
0171760 167 162 151 164 145 101 163 143 151 151 124 157 115 145 155 157
0172000 162 171 047 054 012 040 040 047 147 145 164 123 157 143 153 145
0172020 164 106 162 157 155 106 104 047 054 012 040 040 047 147 145 164
0172040 123 157 143 153 145 164 101 144 144 162 145 163 163 047 054 012
0172060 040 040 047 162 145 147 151 163 164 145 162 113 145 171 105 166
0172100 145 156 164 103 141 154 154 142 141 143 153 047 054 012 040 040
0172120 047 155 141 171 142 145 103 123 164 162 151 156 147 124 157 112
0172140 163 123 164 162 151 156 147 047 054 012 040 040 047 146 151 156
0172160 144 105 166 145 156 164 124 141 162 147 145 164 047 054 012 040
0172200 040 047 146 151 156 144 103 141 156 166 141 163 105 166 145 156
0172220 164 124 141 162 147 145 164 047 054 012 040 040 047 147 145 164
0172240 102 157 165 156 144 151 156 147 103 154 151 145 156 164 122 145
0172260 143 164 047 054 012 040 040 047 146 151 154 154 115 157 165 163
0172300 145 105 166 145 156 164 104 141 164 141 047 054 012 040 040 047
0172320 162 145 147 151 163 164 145 162 115 157 165 163 145 105 166 145
0172340 156 164 103 141 154 154 142 141 143 153 047 054 012 040 040 047
0172360 162 145 147 151 163 164 145 162 127 150 145 145 154 105 166 145
0172400 156 164 103 141 154 154 142 141 143 153 047 054 012 040 040 047
0172420 162 145 147 151 163 164 145 162 125 151 105 166 145 156 164 103
0172440 141 154 154 142 141 143 153 047 054 012 040 040 047 162 145 147
0172460 151 163 164 145 162 106 157 143 165 163 105 166 145 156 164 103
0172500 141 154 154 142 141 143 153 047 054 012 040 040 047 146 151 154
0172520 154 104 145 166 151 143 145 117 162 151 145 156 164 141 164 151
0172540 157 156 105 166 145 156 164 104 141 164 141 047 054 012 040 040
0172560 047 162 145 147 151 163 164 145 162 104 145 166 151 143 145 117
0172600 162 151 145 156 164 141 164 151 157 156 105 166 145 156 164 103
0172620 141 154 154 142 141 143 153 047 054 012 040 040 047 146 151 154
0172640 154 104 145 166 151 143 145 115 157 164 151 157 156 105 166 145
0172660 156 164 104 141 164 141 047 054 012 040 040 047 162 145 147 151
0172700 163 164 145 162 104 145 166 151 143 145 115 157 164 151 157 156
0172720 105 166 145 156 164 103 141 154 154 142 141 143 153 047 054 012
0172740 040 040 047 163 143 162 145 145 156 117 162 151 145 156 164 141
0172760 164 151 157 156 047 054 012 040 040 047 146 151 154 154 117 162
0173000 151 145 156 164 141 164 151 157 156 103 150 141 156 147 145 105
0173020 166 145 156 164 104 141 164 141 047 054 012 040 040 047 162 145
0173040 147 151 163 164 145 162 117 162 151 145 156 164 141 164 151 157
0173060 156 103 150 141 156 147 145 105 166 145 156 164 103 141 154 154
0173100 142 141 143 153 047 054 012 040 040 047 146 151 154 154 106 165
0173120 154 154 163 143 162 145 145 156 103 150 141 156 147 145 105 166
0173140 145 156 164 104 141 164 141 047 054 012 040 040 047 162 145 147
0173160 151 163 164 145 162 106 165 154 154 163 143 162 145 145 156 103
0173200 150 141 156 147 145 105 166 145 156 164 103 141 154 154 142 141
0173220 143 153 047 054 012 040 040 047 112 123 105 166 145 156 164 163
0173240 137 162 145 161 165 145 163 164 106 165 154 154 163 143 162 145
0173260 145 156 047 054 012 040 040 047 112 123 105 166 145 156 164 163
0173300 137 162 145 163 151 172 145 103 141 156 166 141 163 106 157 162
0173320 106 165 154 154 163 143 162 145 145 156 047 054 012 040 040 047
0173340 162 145 147 151 163 164 145 162 122 145 163 164 157 162 145 117
0173360 154 144 123 164 171 154 145 047 054 012 040 040 047 150 151 144
0173400 145 105 166 145 162 171 164 150 151 156 147 105 170 143 145 160
0173420 164 107 151 166 145 156 105 154 145 155 145 156 164 047 054 012
0173440 040 040 047 162 145 163 164 157 162 145 110 151 144 144 145 156
0173460 105 154 145 155 145 156 164 163 047 054 012 040 040 047 163 145
0173500 164 114 145 164 164 145 162 142 157 170 047 054 012 040 040 047
0173520 163 157 146 164 106 165 154 154 163 143 162 145 145 156 122 145
0173540 163 151 172 145 127 145 142 107 114 122 145 156 144 145 162 124
0173560 141 162 147 145 164 047 054 012 040 040 047 144 157 122 145 161
0173600 165 145 163 164 106 165 154 154 163 143 162 145 145 156 047 054
0173620 012 040 040 047 146 151 154 154 120 157 151 156 164 145 162 154
0173640 157 143 153 103 150 141 156 147 145 105 166 145 156 164 104 141
0173660 164 141 047 054 012 040 040 047 162 145 147 151 163 164 145 162
0173700 120 157 151 156 164 145 162 154 157 143 153 103 150 141 156 147
0173720 145 105 166 145 156 164 103 141 154 154 142 141 143 153 047 054
0173740 012 040 040 047 162 145 147 151 163 164 145 162 120 157 151 156
0173760 164 145 162 154 157 143 153 105 162 162 157 162 105 166 145 156
0174000 164 103 141 154 154 142 141 143 153 047 054 012 040 040 047 162
0174020 145 161 165 145 163 164 120 157 151 156 164 145 162 114 157 143
0174040 153 047 054 012 040 040 047 146 151 154 154 126 151 163 151 142
0174060 151 154 151 164 171 103 150 141 156 147 145 105 166 145 156 164
0174100 104 141 164 141 047 054 012 040 040 047 162 145 147 151 163 164
0174120 145 162 126 151 163 151 142 151 154 151 164 171 103 150 141 156
0174140 147 145 105 166 145 156 164 103 141 154 154 142 141 143 153 047
0174160 054 012 040 040 047 162 145 147 151 163 164 145 162 124 157 165
0174200 143 150 105 166 145 156 164 103 141 154 154 142 141 143 153 047
0174220 054 012 040 040 047 146 151 154 154 107 141 155 145 160 141 144
0174240 105 166 145 156 164 104 141 164 141 047 054 012 040 040 047 162
0174260 145 147 151 163 164 145 162 107 141 155 145 160 141 144 105 166
0174300 145 156 164 103 141 154 154 142 141 143 153 047 054 012 040 040
0174320 047 162 145 147 151 163 164 145 162 102 145 146 157 162 145 125
0174340 156 154 157 141 144 105 166 145 156 164 103 141 154 154 142 141
0174360 143 153 047 054 012 040 040 047 146 151 154 154 102 141 164 164
0174400 145 162 171 105 166 145 156 164 104 141 164 141 047 054 012 040
0174420 040 047 142 141 164 164 145 162 171 047 054 012 040 040 047 162
0174440 145 147 151 163 164 145 162 102 141 164 164 145 162 171 105 166
0174460 145 156 164 103 141 154 154 142 141 143 153 047 054 012 040 040
0174500 047 163 145 164 103 141 156 166 141 163 105 154 145 155 145 156
0174520 164 123 151 172 145 047 054 012 040 040 047 147 145 164 103 141
0174540 156 166 141 163 105 154 145 155 145 156 164 123 151 172 145 047
0174560 054 012 040 040 047 147 145 164 105 156 166 123 164 162 151 156
0174600 147 163 047 054 012 040 040 047 143 150 145 143 153 127 141 163
0174620 151 103 154 157 143 153 047 054 012 040 040 047 143 162 145 141
0174640 164 145 104 171 156 143 141 154 154 127 162 141 160 160 145 162
0174660 047 054 012 040 040 047 163 145 164 111 155 155 145 144 151 141
0174700 164 145 127 162 141 160 160 145 144 047 054 012 040 040 047 143
0174720 154 145 141 162 111 155 155 145 144 151 141 164 145 127 162 141
0174740 160 160 145 144 047 054 012 040 040 047 160 157 154 171 146 151
0174760 154 154 123 145 164 111 155 155 145 144 151 141 164 145 047 054
0175000 012 040 040 047 105 170 143 145 160 164 151 157 156 111 156 146
0175020 157 047 054 012 040 040 047 145 170 143 145 160 164 151 157 156
0175040 137 141 144 144 122 145 146 047 054 012 040 040 047 145 170 143
0175060 145 160 164 151 157 156 137 144 145 143 122 145 146 047 054 012
0175100 040 040 047 163 145 164 115 141 151 156 114 157 157 160 047 054
0175120 012 040 040 047 137 163 145 164 116 145 164 167 157 162 153 103
0175140 141 154 154 142 141 143 153 047 054 012 040 040 047 150 145 141
0175160 160 117 142 152 145 143 164 106 157 162 127 145 142 107 114 124
0175200 171 160 145 047 054 012 040 040 047 150 145 141 160 101 143 143
0175220 145 163 163 123 150 151 146 164 106 157 162 127 145 142 107 114
0175240 110 145 141 160 047 054 012 040 040 047 145 155 163 143 162 151
0175260 160 164 145 156 127 145 142 107 114 107 145 164 047 054 012 040
0175300 040 047 143 157 155 160 165 164 145 125 156 160 141 143 153 101
0175320 154 151 147 156 145 144 111 155 141 147 145 123 151 172 145 047
0175340 054 012 040 040 047 145 155 163 143 162 151 160 164 145 156 127
0175360 145 142 107 114 107 145 164 124 145 170 120 151 170 145 154 104
0175400 141 164 141 047 054 012 040 040 047 145 155 163 143 162 151 160
0175420 164 145 156 127 145 142 107 114 107 145 164 125 156 151 146 157
0175440 162 155 047 054 012 040 040 047 167 145 142 147 154 107 145 164
0175460 125 156 151 146 157 162 155 114 157 143 141 164 151 157 156 047
0175500 054 012 040 040 047 167 145 142 147 154 120 162 145 160 141 162
0175520 145 125 156 151 146 157 162 155 114 157 143 141 164 151 157 156
0175540 163 102 145 146 157 162 145 106 151 162 163 164 125 163 145 047
0175560 054 012 040 040 047 167 145 142 147 154 107 145 164 114 145 146
0175600 164 102 162 141 143 145 120 157 163 047 054 012 040 040 047 145
0175620 155 163 143 162 151 160 164 145 156 127 145 142 107 114 107 145
0175640 164 126 145 162 164 145 170 101 164 164 162 151 142 047 054 012
0175660 040 040 047 167 162 151 164 145 107 114 101 162 162 141 171 047
0175700 054 012 040 040 047 123 104 114 137 165 156 151 143 157 144 145
0175720 047 054 012 040 040 047 123 104 114 137 164 164 146 103 157 156
0175740 164 145 170 164 047 054 012 040 040 047 123 104 114 137 141 165
0175760 144 151 157 047 054 012 040 040 047 107 114 106 127 137 127 151
0176000 156 144 157 167 047 054 012 040 040 047 162 165 156 101 156 144
0176020 101 142 157 162 164 111 146 105 162 162 157 162 047 054 012 040
0176040 040 047 101 114 114 117 103 137 116 117 122 115 101 114 047 054
0176060 012 040 040 047 101 114 114 117 103 137 123 124 101 103 113 047
0176100 054 012 040 040 047 141 154 154 157 143 141 164 145 047 054 012
0176120 135 073 012 155 151 163 163 151 156 147 114 151 142 162 141 162
0176140 171 123 171 155 142 157 154 163 056 146 157 162 105 141 143 150
0176160 050 155 151 163 163 151 156 147 114 151 142 162 141 162 171 123
0176200 171 155 142 157 154 051 012 012 012 166 141 162 040 143 141 154
0176220 154 145 144 122 165 156 073 012 012 144 145 160 145 156 144 145
0176240 156 143 151 145 163 106 165 154 146 151 154 154 145 144 040 075
0176260 040 146 165 156 143 164 151 157 156 040 162 165 156 103 141 154
0176300 154 145 162 050 051 040 173 012 040 040 057 057 040 111 146 040
0176320 162 165 156 040 150 141 163 040 156 145 166 145 162 040 142 145
0176340 145 156 040 143 141 154 154 145 144 054 040 141 156 144 040 167
0176360 145 040 163 150 157 165 154 144 040 143 141 154 154 040 162 165
0176400 156 040 050 111 116 126 117 113 105 137 122 125 116 040 151 163
0176420 040 164 162 165 145 054 040 141 156 144 040 115 157 144 165 154
0176440 145 056 156 157 111 156 151 164 151 141 154 122 165 156 040 151
0176460 163 040 156 157 164 040 146 141 154 163 145 051 012 040 040 151
0176500 146 040 050 041 143 141 154 154 145 144 122 165 156 051 040 162
0176520 165 156 050 051 073 012 040 040 151 146 040 050 041 143 141 154
0176540 154 145 144 122 165 156 051 040 144 145 160 145 156 144 145 156
0176560 143 151 145 163 106 165 154 146 151 154 154 145 144 040 075 040
0176600 162 165 156 103 141 154 154 145 162 073 040 057 057 040 164 162
0176620 171 040 164 150 151 163 040 141 147 141 151 156 040 154 141 164
0176640 145 162 054 040 141 146 164 145 162 040 156 145 167 040 144 145
0176660 160 163 040 141 162 145 040 146 165 154 146 151 154 154 145 144
0176700 012 175 073 012 012 146 165 156 143 164 151 157 156 040 143 141
0176720 154 154 115 141 151 156 050 141 162 147 163 051 040 173 012 040
0176740 040 141 163 163 145 162 164 050 162 165 156 104 145 160 145 156
0176760 144 145 156 143 151 145 163 040 075 075 040 060 054 040 047 143
0177000 141 156 156 157 164 040 143 141 154 154 040 155 141 151 156 040
0177020 167 150 145 156 040 141 163 171 156 143 040 144 145 160 145 156
0177040 144 145 156 143 151 145 163 040 162 145 155 141 151 156 041 040
0177060 050 154 151 163 164 145 156 040 157 156 040 115 157 144 165 154
0177100 145 133 042 157 156 122 165 156 164 151 155 145 111 156 151 164
0177120 151 141 154 151 172 145 144 042 135 051 047 051 073 012 040 040
0177140 141 163 163 145 162 164 050 137 137 101 124 120 122 105 122 125
0177160 116 137 137 056 154 145 156 147 164 150 040 075 075 040 060 054
0177200 040 047 143 141 156 156 157 164 040 143 141 154 154 040 155 141
0177220 151 156 040 167 150 145 156 040 160 162 145 122 165 156 040 146
0177240 165 156 143 164 151 157 156 163 040 162 145 155 141 151 156 040
0177260 164 157 040 142 145 040 143 141 154 154 145 144 047 051 073 012
0177300 012 040 040 166 141 162 040 145 156 164 162 171 106 165 156 143
0177320 164 151 157 156 040 075 040 115 157 144 165 154 145 133 047 137
0177340 155 141 151 156 047 135 073 012 012 040 040 166 141 162 040 141
0177360 162 147 143 040 075 040 060 073 012 040 040 166 141 162 040 141
0177400 162 147 166 040 075 040 060 073 012 012 040 040 164 162 171 040
0177420 173 012 012 040 040 040 040 166 141 162 040 162 145 164 040 075
0177440 040 145 156 164 162 171 106 165 156 143 164 151 157 156 050 141
0177460 162 147 143 054 040 141 162 147 166 051 073 012 012 040 040 040
0177500 040 057 057 040 111 156 040 120 122 117 130 131 137 124 117 137
0177520 120 124 110 122 105 101 104 040 142 165 151 154 144 163 054 040
0177540 167 145 040 163 150 157 165 154 144 040 156 145 166 145 162 040
0177560 145 170 151 164 040 164 150 145 040 162 165 156 164 151 155 145
0177600 040 142 145 154 157 167 054 040 141 163 012 040 040 040 040 057
0177620 057 040 145 170 145 143 165 164 151 157 156 040 151 163 040 141
0177640 163 171 156 143 150 162 157 156 157 165 163 154 171 040 150 141
0177660 156 144 145 144 040 157 146 146 040 164 157 040 141 040 160 164
0177700 150 162 145 141 144 056 012 040 040 040 040 057 057 040 151 146
0177720 040 167 145 047 162 145 040 156 157 164 040 162 165 156 156 151
0177740 156 147 040 141 156 040 145 166 145 156 164 145 144 040 155 141
0177760 151 156 040 154 157 157 160 054 040 151 164 047 163 040 164 151
0200000 155 145 040 164 157 040 145 170 151 164 012 040 040 040 040 145
0200020 170 151 164 112 123 050 162 145 164 054 040 057 052 040 151 155
0200040 160 154 151 143 151 164 040 075 040 052 057 040 164 162 165 145
0200060 051 073 012 040 040 040 040 162 145 164 165 162 156 040 162 145
0200100 164 073 012 040 040 175 012 040 040 143 141 164 143 150 040 050
0200120 145 051 040 173 012 040 040 040 040 162 145 164 165 162 156 040
0200140 150 141 156 144 154 145 105 170 143 145 160 164 151 157 156 050
0200160 145 051 073 012 040 040 175 012 175 012 012 146 165 156 143 164
0200200 151 157 156 040 163 164 141 143 153 103 150 145 143 153 111 156
0200220 151 164 050 051 040 173 012 040 040 057 057 040 124 150 151 163
0200240 040 151 163 040 156 157 162 155 141 154 154 171 040 143 141 154
0200260 154 145 144 040 141 165 164 157 155 141 164 151 143 141 154 154
0200300 171 040 144 165 162 151 156 147 040 137 137 167 141 163 155 137
0200320 143 141 154 154 137 143 164 157 162 163 040 142 165 164 040 156
0200340 145 145 144 040 164 157 012 040 040 057 057 040 147 145 164 040
0200360 164 150 145 163 145 040 166 141 154 165 145 163 040 142 145 146
0200400 157 162 145 040 145 166 145 156 040 162 165 156 156 151 156 147
0200420 040 141 156 171 040 157 146 040 164 150 145 040 143 164 157 162
0200440 163 040 163 157 040 167 145 040 143 141 154 154 040 151 164 040
0200460 162 145 144 165 156 144 141 156 164 154 171 012 040 040 057 057
0200500 040 150 145 162 145 056 012 040 040 137 145 155 163 143 162 151
0200520 160 164 145 156 137 163 164 141 143 153 137 151 156 151 164 050
0200540 051 073 012 040 040 057 057 040 124 117 104 117 050 163 142 143
0200560 051 072 040 115 157 166 145 040 167 162 151 164 145 123 164 141
0200600 143 153 103 157 157 153 151 145 040 164 157 040 156 141 164 151
0200620 166 145 040 164 157 040 164 157 040 141 166 157 151 144 040 164
0200640 150 151 163 056 012 040 040 167 162 151 164 145 123 164 141 143
0200660 153 103 157 157 153 151 145 050 051 073 012 175 012 012 057 052
0200700 052 040 100 164 171 160 145 040 173 146 165 156 143 164 151 157
0200720 156 050 101 162 162 141 171 075 051 175 040 052 057 012 146 165
0200740 156 143 164 151 157 156 040 162 165 156 050 141 162 147 163 051
0200760 040 173 012 040 040 141 162 147 163 040 075 040 141 162 147 163
0201000 040 174 174 040 141 162 147 165 155 145 156 164 163 137 073 012
0201020 012 040 040 151 146 040 050 162 165 156 104 145 160 145 156 144
0201040 145 156 143 151 145 163 040 076 040 060 051 040 173 012 040 040
0201060 040 040 162 145 164 165 162 156 073 012 040 040 175 012 012 040
0201100 040 040 040 163 164 141 143 153 103 150 145 143 153 111 156 151
0201120 164 050 051 073 012 012 040 040 160 162 145 122 165 156 050 051
0201140 073 012 012 040 040 057 057 040 141 040 160 162 145 122 165 156
0201160 040 141 144 144 145 144 040 141 040 144 145 160 145 156 144 145
0201200 156 143 171 054 040 162 165 156 040 167 151 154 154 040 142 145
0201220 040 143 141 154 154 145 144 040 154 141 164 145 162 012 040 040
0201240 151 146 040 050 162 165 156 104 145 160 145 156 144 145 156 143
0201260 151 145 163 040 076 040 060 051 040 173 012 040 040 040 040 162
0201300 145 164 165 162 156 073 012 040 040 175 012 012 040 040 146 165
0201320 156 143 164 151 157 156 040 144 157 122 165 156 050 051 040 173
0201340 012 040 040 040 040 057 057 040 162 165 156 040 155 141 171 040
0201360 150 141 166 145 040 152 165 163 164 040 142 145 145 156 040 143
0201400 141 154 154 145 144 040 164 150 162 157 165 147 150 040 144 145
0201420 160 145 156 144 145 156 143 151 145 163 040 142 145 151 156 147
0201440 040 146 165 154 146 151 154 154 145 144 040 152 165 163 164 040
0201460 151 156 040 164 150 151 163 040 166 145 162 171 040 146 162 141
0201500 155 145 054 012 040 040 040 040 057 057 040 157 162 040 167 150
0201520 151 154 145 040 164 150 145 040 141 163 171 156 143 040 163 145
0201540 164 123 164 141 164 165 163 040 164 151 155 145 040 142 145 154
0201560 157 167 040 167 141 163 040 150 141 160 160 145 156 151 156 147
0201600 012 040 040 040 040 151 146 040 050 143 141 154 154 145 144 122
0201620 165 156 051 040 162 145 164 165 162 156 073 012 040 040 040 040
0201640 143 141 154 154 145 144 122 165 156 040 075 040 164 162 165 145
0201660 073 012 040 040 040 040 115 157 144 165 154 145 133 047 143 141
0201700 154 154 145 144 122 165 156 047 135 040 075 040 164 162 165 145
0201720 073 012 012 040 040 040 040 151 146 040 050 101 102 117 122 124
0201740 051 040 162 145 164 165 162 156 073 012 012 040 040 040 040 151
0201760 156 151 164 122 165 156 164 151 155 145 050 051 073 012 012 040
0202000 040 040 040 160 162 145 115 141 151 156 050 051 073 012 012 040
0202020 040 040 040 151 146 040 050 115 157 144 165 154 145 133 047 157
0202040 156 122 165 156 164 151 155 145 111 156 151 164 151 141 154 151
0202060 172 145 144 047 135 051 040 115 157 144 165 154 145 133 047 157
0202100 156 122 165 156 164 151 155 145 111 156 151 164 151 141 154 151
0202120 172 145 144 047 135 050 051 073 012 012 040 040 040 040 151 146
0202140 040 050 163 150 157 165 154 144 122 165 156 116 157 167 051 040
0202160 143 141 154 154 115 141 151 156 050 141 162 147 163 051 073 012
0202200 012 040 040 040 040 160 157 163 164 122 165 156 050 051 073 012
0202220 040 040 175 012 012 040 040 151 146 040 050 115 157 144 165 154
0202240 145 133 047 163 145 164 123 164 141 164 165 163 047 135 051 040
0202260 173 012 040 040 040 040 115 157 144 165 154 145 133 047 163 145
0202300 164 123 164 141 164 165 163 047 135 050 047 122 165 156 156 151
0202320 156 147 056 056 056 047 051 073 012 040 040 040 040 163 145 164
0202340 124 151 155 145 157 165 164 050 146 165 156 143 164 151 157 156
0202360 050 051 040 173 012 040 040 040 040 040 040 163 145 164 124 151
0202400 155 145 157 165 164 050 146 165 156 143 164 151 157 156 050 051
0202420 040 173 012 040 040 040 040 040 040 040 040 115 157 144 165 154
0202440 145 133 047 163 145 164 123 164 141 164 165 163 047 135 050 047
0202460 047 051 073 012 040 040 040 040 040 040 175 054 040 061 051 073
0202500 012 040 040 040 040 040 040 144 157 122 165 156 050 051 073 012
0202520 040 040 040 040 175 054 040 061 051 073 012 040 040 175 040 145
0202540 154 163 145 012 040 040 173 012 040 040 040 040 144 157 122 165
0202560 156 050 051 073 012 040 040 175 012 040 040 143 150 145 143 153
0202600 123 164 141 143 153 103 157 157 153 151 145 050 051 073 012 175
0202620 012 012 151 146 040 050 115 157 144 165 154 145 133 047 160 162
0202640 145 111 156 151 164 047 135 051 040 173 012 040 040 151 146 040
0202660 050 164 171 160 145 157 146 040 115 157 144 165 154 145 133 047
0202700 160 162 145 111 156 151 164 047 135 040 075 075 040 047 146 165
0202720 156 143 164 151 157 156 047 051 040 115 157 144 165 154 145 133
0202740 047 160 162 145 111 156 151 164 047 135 040 075 040 133 115 157
0202760 144 165 154 145 133 047 160 162 145 111 156 151 164 047 135 135
0203000 073 012 040 040 167 150 151 154 145 040 050 115 157 144 165 154
0203020 145 133 047 160 162 145 111 156 151 164 047 135 056 154 145 156
0203040 147 164 150 040 076 040 060 051 040 173 012 040 040 040 040 115
0203060 157 144 165 154 145 133 047 160 162 145 111 156 151 164 047 135
0203100 056 160 157 160 050 051 050 051 073 012 040 040 175 012 175 012
0203120 012 057 057 040 163 150 157 165 154 144 122 165 156 116 157 167
0203140 040 162 145 146 145 162 163 040 164 157 040 143 141 154 154 151
0203160 156 147 040 155 141 151 156 050 051 054 040 156 157 164 040 162
0203200 165 156 050 051 056 012 166 141 162 040 163 150 157 165 154 144
0203220 122 165 156 116 157 167 040 075 040 164 162 165 145 073 012 012
0203240 151 146 040 050 115 157 144 165 154 145 133 047 156 157 111 156
0203260 151 164 151 141 154 122 165 156 047 135 051 040 163 150 157 165
0203300 154 144 122 165 156 116 157 167 040 075 040 146 141 154 163 145
0203320 073 012 012 162 165 156 050 051 073 012 012 012 012 012 012
0203337
configure:24555: result: unknown 
configure:24590: WARNING: Could not determine float format.
configure:24592: WARNING: Conversions to and from "double" may be slow.
configure:24635: checking for alarm
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for attr_get
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: attr_get (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _attr_get may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmp3nr4m5ft.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| /* end confdefs.h.  */
| /* Define attr_get to an innocuous variant, in case <limits.h> declares attr_get.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define attr_get innocuous_attr_get
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char attr_get (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef attr_get
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char attr_get ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_attr_get || defined __stub___attr_get
| choke me
| #endif
| 
| int
| main ()
| {
| return attr_get ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for clock
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for cputime
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: cputime (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _cputime may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmp74yc6l_u.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| /* end confdefs.h.  */
| /* Define cputime to an innocuous variant, in case <limits.h> declares cputime.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define cputime innocuous_cputime
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char cputime (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef cputime
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char cputime ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_cputime || defined __stub___cputime
| choke me
| #endif
| 
| int
| main ()
| {
| return cputime ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for getpagesize
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for getrusage
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: getrusage
>>> defined as () -> i32 in /tmp/emscripten_temp_dstnfudf/conftest_0.o
>>> defined as (i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(getrusage.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for gettimeofday
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: gettimeofday
>>> defined as () -> i32 in /tmp/emscripten_temp_pzjh4lr5/conftest_0.o
>>> defined as (i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(emscripten_time.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for getsysinfo
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: getsysinfo (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _getsysinfo may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmprv5zpdji.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| /* end confdefs.h.  */
| /* Define getsysinfo to an innocuous variant, in case <limits.h> declares getsysinfo.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define getsysinfo innocuous_getsysinfo
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char getsysinfo (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef getsysinfo
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char getsysinfo ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_getsysinfo || defined __stub___getsysinfo
| choke me
| #endif
| 
| int
| main ()
| {
| return getsysinfo ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for localeconv
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for memset
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
conftest.c:94:6: warning: incompatible redeclaration of library function 'memset' [-Wincompatible-library-redeclaration]
char memset ();
     ^
conftest.c:94:6: note: 'memset' is a builtin with type 'void *(void *, int, unsigned long)'
1 warning generated.
wasm-ld: warning: function signature mismatch: memset
>>> defined as () -> i32 in /tmp/emscripten_temp_65y0hmck/conftest_0.o
>>> defined as (i32, i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(emscripten_memset.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for mmap
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: mmap
>>> defined as () -> i32 in /tmp/emscripten_temp_h80oac5r/conftest_0.o
>>> defined as (i32, i32, i32, i32, i32, i64) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(mmap.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for mprotect
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: mprotect
>>> defined as () -> i32 in /tmp/emscripten_temp_nwmi4su0/conftest_0.o
>>> defined as (i32, i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(mprotect.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for nl_langinfo
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: nl_langinfo
>>> defined as () -> i32 in /tmp/emscripten_temp_dbo2bghh/conftest_0.o
>>> defined as (i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(langinfo.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for obstack_vprintf
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: obstack_vprintf (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _obstack_vprintf may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmp2pbg90ih.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| /* end confdefs.h.  */
| /* Define obstack_vprintf to an innocuous variant, in case <limits.h> declares obstack_vprintf.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define obstack_vprintf innocuous_obstack_vprintf
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char obstack_vprintf (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef obstack_vprintf
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char obstack_vprintf ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_obstack_vprintf || defined __stub___obstack_vprintf
| choke me
| #endif
| 
| int
| main ()
| {
| return obstack_vprintf ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for popen
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: popen
>>> defined as () -> i32 in /tmp/emscripten_temp_fxdxmajw/conftest_0.o
>>> defined as (i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libstubs-debug.a(emscripten_libc_stubs.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for processor_info
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: processor_info (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _processor_info may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmpf6_sz86p.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| /* end confdefs.h.  */
| /* Define processor_info to an innocuous variant, in case <limits.h> declares processor_info.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define processor_info innocuous_processor_info
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char processor_info (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef processor_info
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char processor_info ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_processor_info || defined __stub___processor_info
| choke me
| #endif
| 
| int
| main ()
| {
| return processor_info ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for pstat_getprocessor
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: pstat_getprocessor (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _pstat_getprocessor may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmpt80kf85_.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| /* end confdefs.h.  */
| /* Define pstat_getprocessor to an innocuous variant, in case <limits.h> declares pstat_getprocessor.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define pstat_getprocessor innocuous_pstat_getprocessor
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char pstat_getprocessor (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef pstat_getprocessor
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char pstat_getprocessor ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_pstat_getprocessor || defined __stub___pstat_getprocessor
| choke me
| #endif
| 
| int
| main ()
| {
| return pstat_getprocessor ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for raise
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: raise
>>> defined as () -> i32 in /tmp/emscripten_temp_g6wsvwv8/conftest_0.o
>>> defined as (i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(raise.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for read_real_time
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: read_real_time (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _read_real_time may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmp0nvcib7q.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| /* end confdefs.h.  */
| /* Define read_real_time to an innocuous variant, in case <limits.h> declares read_real_time.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define read_real_time innocuous_read_real_time
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char read_real_time (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef read_real_time
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char read_real_time ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_read_real_time || defined __stub___read_real_time
| choke me
| #endif
| 
| int
| main ()
| {
| return read_real_time ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for sigaction
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: sigaction
>>> defined as () -> i32 in /tmp/emscripten_temp_uwc_i139/conftest_0.o
>>> defined as (i32, i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(sigaction.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for sigaltstack
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: sigaltstack
>>> defined as () -> i32 in /tmp/emscripten_temp_mp6w1sas/conftest_0.o
>>> defined as (i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libstubs-debug.a(emscripten_libc_stubs.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for sigstack
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: sigstack (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _sigstack may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmpx6epoez9.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| /* Define sigstack to an innocuous variant, in case <limits.h> declares sigstack.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define sigstack innocuous_sigstack
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char sigstack (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef sigstack
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char sigstack ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_sigstack || defined __stub___sigstack
| choke me
| #endif
| 
| int
| main ()
| {
| return sigstack ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for syssgi
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: syssgi (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _syssgi may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmpljoc86d0.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| /* Define syssgi to an innocuous variant, in case <limits.h> declares syssgi.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define syssgi innocuous_syssgi
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char syssgi (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef syssgi
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char syssgi ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_syssgi || defined __stub___syssgi
| choke me
| #endif
| 
| int
| main ()
| {
| return syssgi ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for strchr
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
conftest.c:102:6: warning: incompatible redeclaration of library function 'strchr' [-Wincompatible-library-redeclaration]
char strchr ();
     ^
conftest.c:102:6: note: 'strchr' is a builtin with type 'char *(const char *, int)'
1 warning generated.
wasm-ld: warning: function signature mismatch: strchr
>>> defined as () -> i32 in /tmp/emscripten_temp_bhucgsnp/conftest_0.o
>>> defined as (i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(strchr.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for strerror
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
conftest.c:103:6: warning: incompatible redeclaration of library function 'strerror' [-Wincompatible-library-redeclaration]
char strerror ();
     ^
conftest.c:103:6: note: 'strerror' is a builtin with type 'char *(int)'
1 warning generated.
wasm-ld: warning: function signature mismatch: strerror
>>> defined as () -> i32 in /tmp/emscripten_temp_u4m3brmd/conftest_0.o
>>> defined as (i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(strerror.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for strnlen
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: strnlen
>>> defined as () -> i32 in /tmp/emscripten_temp_8bxmtixe/conftest_0.o
>>> defined as (i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(strnlen.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for strtol
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
conftest.c:105:6: warning: incompatible redeclaration of library function 'strtol' [-Wincompatible-library-redeclaration]
char strtol ();
     ^
conftest.c:105:6: note: 'strtol' is a builtin with type 'long (const char *, char **, int)'
1 warning generated.
wasm-ld: warning: function signature mismatch: strtol
>>> defined as () -> i32 in /tmp/emscripten_temp_9tjz25wd/conftest_0.o
>>> defined as (i32, i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(strtol.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for strtoul
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
conftest.c:106:6: warning: incompatible redeclaration of library function 'strtoul' [-Wincompatible-library-redeclaration]
char strtoul ();
     ^
conftest.c:106:6: note: 'strtoul' is a builtin with type 'unsigned long (const char *, char **, int)'
1 warning generated.
wasm-ld: warning: function signature mismatch: strtoul
>>> defined as () -> i32 in /tmp/emscripten_temp_cvdazmr_/conftest_0.o
>>> defined as (i32, i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(strtol.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for sysconf
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: sysconf
>>> defined as () -> i32 in /tmp/emscripten_temp_ldvpma9o/conftest_0.o
>>> defined as (i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(sysconf.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24635: checking for sysctl
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: sysctl (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _sysctl may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmppfuk7tdv.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| /* end confdefs.h.  */
| /* Define sysctl to an innocuous variant, in case <limits.h> declares sysctl.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define sysctl innocuous_sysctl
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char sysctl (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef sysctl
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char sysctl ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_sysctl || defined __stub___sysctl
| choke me
| #endif
| 
| int
| main ()
| {
| return sysctl ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for sysctlbyname
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
error: undefined symbol: sysctlbyname (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _sysctlbyname may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmpfsvjads8.json' failed (returned 1)
configure:24635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| /* end confdefs.h.  */
| /* Define sysctlbyname to an innocuous variant, in case <limits.h> declares sysctlbyname.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define sysctlbyname innocuous_sysctlbyname
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char sysctlbyname (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef sysctlbyname
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char sysctlbyname ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_sysctlbyname || defined __stub___sysctlbyname
| choke me
| #endif
| 
| int
| main ()
| {
| return sysctlbyname ();
|   ;
|   return 0;
| }
configure:24635: result: no
configure:24635: checking for times
configure:24635: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: times
>>> defined as () -> i32 in /tmp/emscripten_temp__bib7nyd/conftest_0.o
>>> defined as (i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libstubs-debug.a(emscripten_libc_stubs.o)
configure:24635: $? = 0
configure:24635: result: yes
configure:24651: checking for library containing clock_gettime
configure:24682: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
wasm-ld: warning: function signature mismatch: clock_gettime
>>> defined as () -> i32 in /tmp/emscripten_temp_3ik18alb/conftest_0.o
>>> defined as (i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(emscripten_time.o)
configure:24682: $? = 0
configure:24699: result: none required
configure:24715: checking for vsnprintf
configure:24715: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
conftest.c:110:6: warning: incompatible redeclaration of library function 'vsnprintf' [-Wincompatible-library-redeclaration]
char vsnprintf ();
     ^
conftest.c:110:6: note: 'vsnprintf' is a builtin with type 'int (char *, unsigned long, const char *, __builtin_va_list)'
1 warning generated.
wasm-ld: warning: function signature mismatch: vsnprintf
>>> defined as () -> i32 in /tmp/emscripten_temp_li7nvrfk/conftest_0.o
>>> defined as (i32, i32, i32, i32) -> i32 in /home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/libc-debug.a(vsnprintf.o)
configure:24715: $? = 0
configure:24715: result: yes
configure:24725: checking whether vsnprintf works
configure:24771: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:24771: $? = 0
configure:24771: ./conftest
configure:24771: $? = 0
configure:24771: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:24771: $? = 0
configure:24771: ./conftest
configure:24771: $? = 0
configure:24783: result: yes
configure:24796: checking whether sscanf needs writable input
configure:24808: result: no
configure:24822: checking for struct pst_processor.psp_iticksperclktick
configure:24822: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:88:10: fatal error: 'sys/pstat.h' file not found
#include <sys/pstat.h>
         ^~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:24822: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| #define HAVE_TIMES 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_VSNPRINTF 1
| /* end confdefs.h.  */
| #include <sys/pstat.h>
| 
| int
| main ()
| {
| static struct pst_processor ac_aggr;
| if (ac_aggr.psp_iticksperclktick)
| return 0;
|   ;
|   return 0;
| }
configure:24822: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:88:10: fatal error: 'sys/pstat.h' file not found
#include <sys/pstat.h>
         ^~~~~~~~~~~~~
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:24822: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| #define HAVE_TIMES 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_VSNPRINTF 1
| /* end confdefs.h.  */
| #include <sys/pstat.h>
| 
| int
| main ()
| {
| static struct pst_processor ac_aggr;
| if (sizeof ac_aggr.psp_iticksperclktick)
| return 0;
|   ;
|   return 0;
| }
configure:24822: result: no
configure:27267: checking size of void *
configure:27272: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:27272: $? = 0
configure:27272: ./conftest
configure:27272: $? = 0
configure:27286: result: 4
configure:27300: checking size of unsigned short
configure:27305: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:27305: $? = 0
configure:27305: ./conftest
configure:27305: $? = 0
configure:27319: result: 2
configure:27333: checking size of unsigned
configure:27338: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:27338: $? = 0
configure:27338: ./conftest
configure:27338: $? = 0
configure:27352: result: 4
configure:27366: checking size of unsigned long
configure:27371: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:27371: $? = 0
configure:27371: ./conftest
configure:27371: $? = 0
configure:27385: result: 4
configure:27399: checking size of mp_limb_t
configure:27404: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c  >&5
configure:27404: $? = 0
configure:27404: ./conftest
configure:27404: $? = 0
configure:27424: result: 4
configure:27566: checking for stack_t
configure:27566: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
configure:27566: $? = 0
configure:27566: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c   conftest.c >&5
conftest.c:100:22: error: expected expression
if (sizeof ((stack_t)))
                     ^
1 error generated.
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -D__EMSCRIPTEN_major__=3 -D__EMSCRIPTEN_minor__=1 -D__EMSCRIPTEN_tiny__=22 -Werror=implicit-function-declaration -I/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/include/SDL --sysroot=/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot -Xclang -iwithsysroot/include/compat -c conftest.c -o conftest.o' failed (returned 1)
configure:27566: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| #define HAVE_TIMES 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_VSNPRINTF 1
| #define GMP_MPARAM_H_SUGGEST "./mpn/generic/gmp-mparam.h"
| #define SIZEOF_VOID_P 4
| #define SIZEOF_UNSIGNED_SHORT 2
| #define SIZEOF_UNSIGNED 4
| #define SIZEOF_UNSIGNED_LONG 4
| #define SIZEOF_MP_LIMB_T 4
| #define TUNE_SQR_TOOM2_MAX SQR_TOOM2_MAX_GENERIC
| /* end confdefs.h.  */
| #include <signal.h>
| 
| int
| main ()
| {
| if (sizeof ((stack_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:27566: result: yes
configure:27604: checking for tputs in -lncurses
configure:27629: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c -lncurses   >&5
wasm-ld: error: unable to find library -lncurses
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/wasm-ld -o conftest.wasm /tmp/emscripten_temp_114gfxak/conftest_0.o -lncurses -L/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten -lGL -lal -lhtml5 -lstubs-debug -lc-debug -ldlmalloc -lcompiler_rt -lc++-noexcept -lc++abi-noexcept -lsockets -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr --import-undefined --strip-debug --export-if-defined=main --export-if-defined=__start_em_asm --export-if-defined=__stop_em_asm --export-if-defined=__start_em_js --export-if-defined=__stop_em_js --export-if-defined=__main_argc_argv --export-if-defined=fflush --export=emscripten_stack_get_end --export=emscripten_stack_get_free --export=emscripten_stack_get_base --export=emscripten_stack_init --export=stackSave --export=stackRestore --export=stackAlloc --export=__wasm_call_ctors --export=__errno_location --export=__get_temp_ret --export=__set_temp_ret --export=__funcs_on_exit --export-table -z stack-size=5242880 --initial-memory=16777216 --no-entry --max-memory=16777216 --global-base=1024' failed (returned 1)
configure:27629: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| #define HAVE_TIMES 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_VSNPRINTF 1
| #define GMP_MPARAM_H_SUGGEST "./mpn/generic/gmp-mparam.h"
| #define SIZEOF_VOID_P 4
| #define SIZEOF_UNSIGNED_SHORT 2
| #define SIZEOF_UNSIGNED 4
| #define SIZEOF_UNSIGNED_LONG 4
| #define SIZEOF_MP_LIMB_T 4
| #define TUNE_SQR_TOOM2_MAX SQR_TOOM2_MAX_GENERIC
| #define HAVE_STACK_T 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char tputs ();
| int
| main ()
| {
| return tputs ();
|   ;
|   return 0;
| }
configure:27638: result: no
configure:27643: checking for tputs in -lcurses
configure:27668: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c -lcurses   >&5
wasm-ld: error: unable to find library -lcurses
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/wasm-ld -o conftest.wasm /tmp/emscripten_temp_n3t5afdb/conftest_0.o -lcurses -L/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten -lGL -lal -lhtml5 -lstubs-debug -lc-debug -ldlmalloc -lcompiler_rt -lc++-noexcept -lc++abi-noexcept -lsockets -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr --import-undefined --strip-debug --export-if-defined=main --export-if-defined=__start_em_asm --export-if-defined=__stop_em_asm --export-if-defined=__start_em_js --export-if-defined=__stop_em_js --export-if-defined=__main_argc_argv --export-if-defined=fflush --export=emscripten_stack_get_end --export=emscripten_stack_get_free --export=emscripten_stack_get_base --export=emscripten_stack_init --export=stackSave --export=stackRestore --export=stackAlloc --export=__wasm_call_ctors --export=__errno_location --export=__get_temp_ret --export=__set_temp_ret --export=__funcs_on_exit --export-table -z stack-size=5242880 --initial-memory=16777216 --no-entry --max-memory=16777216 --global-base=1024' failed (returned 1)
configure:27668: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| #define HAVE_TIMES 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_VSNPRINTF 1
| #define GMP_MPARAM_H_SUGGEST "./mpn/generic/gmp-mparam.h"
| #define SIZEOF_VOID_P 4
| #define SIZEOF_UNSIGNED_SHORT 2
| #define SIZEOF_UNSIGNED 4
| #define SIZEOF_UNSIGNED_LONG 4
| #define SIZEOF_MP_LIMB_T 4
| #define TUNE_SQR_TOOM2_MAX SQR_TOOM2_MAX_GENERIC
| #define HAVE_STACK_T 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char tputs ();
| int
| main ()
| {
| return tputs ();
|   ;
|   return 0;
| }
configure:27677: result: no
configure:27690: checking for readline in -lreadline
configure:27715: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c -lreadline   >&5
wasm-ld: error: unable to find library -lreadline
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/wasm-ld -o conftest.wasm /tmp/emscripten_temp_6230y9y3/conftest_0.o -lreadline -L/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten -lGL -lal -lhtml5 -lstubs-debug -lc-debug -ldlmalloc -lcompiler_rt -lc++-noexcept -lc++abi-noexcept -lsockets -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr --import-undefined --strip-debug --export-if-defined=main --export-if-defined=__start_em_asm --export-if-defined=__stop_em_asm --export-if-defined=__start_em_js --export-if-defined=__stop_em_js --export-if-defined=__main_argc_argv --export-if-defined=fflush --export=emscripten_stack_get_end --export=emscripten_stack_get_free --export=emscripten_stack_get_base --export=emscripten_stack_init --export=stackSave --export=stackRestore --export=stackAlloc --export=__wasm_call_ctors --export=__errno_location --export=__get_temp_ret --export=__set_temp_ret --export=__funcs_on_exit --export-table -z stack-size=5242880 --initial-memory=16777216 --no-entry --max-memory=16777216 --global-base=1024' failed (returned 1)
configure:27715: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| #define HAVE_TIMES 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_VSNPRINTF 1
| #define GMP_MPARAM_H_SUGGEST "./mpn/generic/gmp-mparam.h"
| #define SIZEOF_VOID_P 4
| #define SIZEOF_UNSIGNED_SHORT 2
| #define SIZEOF_UNSIGNED 4
| #define SIZEOF_UNSIGNED_LONG 4
| #define SIZEOF_MP_LIMB_T 4
| #define TUNE_SQR_TOOM2_MAX SQR_TOOM2_MAX_GENERIC
| #define HAVE_STACK_T 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char readline ();
| int
| main ()
| {
| return readline ();
|   ;
|   return 0;
| }
configure:27724: result: no
configure:27740: checking readline detected
configure:27742: result: no
configure:27757: checking for bison
configure:27773: found /usr/bin/bison
configure:27784: result: bison -y
configure:27800: checking for flex
configure:27816: found /usr/bin/flex
configure:27827: result: flex
configure:27865: flex conftest.l
configure:27869: $? = 0
configure:27871: checking lex output file root
configure:27885: result: lex.yy
configure:27890: checking lex library
configure:27904: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c   >&5
error: undefined symbol: yywrap (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _yywrap may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmpfogwukph.json' failed (returned 1)
configure:27904: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| #define HAVE_TIMES 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_VSNPRINTF 1
| #define GMP_MPARAM_H_SUGGEST "./mpn/generic/gmp-mparam.h"
| #define SIZEOF_VOID_P 4
| #define SIZEOF_UNSIGNED_SHORT 2
| #define SIZEOF_UNSIGNED 4
| #define SIZEOF_UNSIGNED_LONG 4
| #define SIZEOF_MP_LIMB_T 4
| #define TUNE_SQR_TOOM2_MAX SQR_TOOM2_MAX_GENERIC
| #define HAVE_STACK_T 1
| /* end confdefs.h.  */
| 
| #line 2 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 6
| #define YY_FLEX_SUBMINOR_VERSION 4
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #ifndef SIZE_MAX
| #define SIZE_MAX               (~(size_t)0)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| /* begin standard C++ headers. */
| 
| /* TODO: this is always defined, so inline it */
| #define yyconst const
| 
| #if defined(__GNUC__) && __GNUC__ >= 3
| #define yynoreturn __attribute__((__noreturn__))
| #else
| #define yynoreturn
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an
|  *   integer in range [0..255] for use as an array index.
|  */
| #define YY_SC_TO_UI(c) ((YY_CHAR) (c))
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart( yyin  )
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k.
|  * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
|  * Ditto for the __ia64__ case accordingly.
|  */
| #define YY_BUF_SIZE 32768
| #else
| #define YY_BUF_SIZE 16384
| #endif /* __ia64__ */
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern int yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
|     
|     #define YY_LESS_LINENO(n)
|     #define YY_LINENO_REWIND_TO(ptr)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	int yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
| 
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| int yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = NULL;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart ( FILE *input_file  );
| void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
| void yy_delete_buffer ( YY_BUFFER_STATE b  );
| void yy_flush_buffer ( YY_BUFFER_STATE b  );
| void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state ( void );
| 
| static void yyensure_buffer_stack ( void );
| static void yy_load_buffer_state ( void );
| static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );
| #define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );
| 
| void *yyalloc ( yy_size_t  );
| void *yyrealloc ( void *, yy_size_t  );
| void yyfree ( void *  );
| 
| #define yy_new_buffer yy_create_buffer
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| typedef flex_uint8_t YY_CHAR;
| 
| FILE *yyin = NULL, *yyout = NULL;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| int yylineno = 1;
| 
| extern char *yytext;
| #ifdef yytext_ptr
| #undef yytext_ptr
| #endif
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state ( void );
| static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );
| static int yy_get_next_buffer ( void );
| static void yynoreturn yy_fatal_error ( const char* msg  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (int) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static const flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static const flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static const YY_CHAR yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static const YY_CHAR yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static const flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static const flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static const flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static const flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 459 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals ( void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy ( void );
| 
| int yyget_debug ( void );
| 
| void yyset_debug ( int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra ( void );
| 
| void yyset_extra ( YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in ( void );
| 
| void yyset_in  ( FILE * _in_str  );
| 
| FILE *yyget_out ( void );
| 
| void yyset_out  ( FILE * _out_str  );
| 
| 			int yyget_leng ( void );
| 
| char *yyget_text ( void );
| 
| int yyget_lineno ( void );
| 
| void yyset_lineno ( int _line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap ( void );
| #else
| extern int yywrap ( void );
| #endif
| #endif
| 
| #ifndef YY_NO_UNPUT
|     
|     static void yyunput ( int c, char *buf_ptr  );
|     
| #endif
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy ( char *, const char *, int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen ( const char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
| static int yyinput ( void );
| #else
| static int input ( void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k */
| #define YY_READ_BUF_SIZE 16384
| #else
| #define YY_READ_BUF_SIZE 8192
| #endif /* __ia64__ */
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		int n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK /*LINTED*/break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp, *yy_bp;
| 	int yy_act;
|     
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer( yyin, YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state(  );
| 		}
| 
| 	{
| #line 1 "conftest.l"
| 
| #line 684 "lex.yy.c"
| 
| 	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (int) ((yy_c_buf_p) - (yytext_ptr));
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| 
| find_rule: /* we branch to this label when backing up */
| 
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
|     yyless ((input () != 0)); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 793 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap(  ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| 	} /* end of user's declarations */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	char *source = (yytext_ptr);
| 	int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			int num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart( yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
| 			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 		/* "- 2" to take care of EOB's */
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	int yy_is_jam;
|     
| 	YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
| #ifndef YY_NO_UNPUT
| 
|     static void yyunput (int c, char * yy_bp )
| {
| 	char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		int number_to_move = (yy_n_chars) + 2;
| 		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart( yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap(  ) )
| 						return 0;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer( yyin, YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
| 	yy_load_buffer_state(  );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state(  );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer( b, file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree( (void *) b->yy_ch_buf  );
| 
| 	yyfree( (void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer( b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state(  );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state(  );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state(  );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
|       num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		yy_size_t grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return NULL;
| 
| 	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = NULL;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer( b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (const char * yystr )
| {
|     
| 	return yy_scan_bytes( yystr, (int) strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	int i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = (yy_size_t) (_yybytes_len + 2);
| 	buf = (char *) yyalloc( n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer( buf, n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yynoreturn yy_fatal_error (const char* msg )
| {
| 			fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|     
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| int yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param _line_number line number
|  * 
|  */
| void yyset_lineno (int  _line_number )
| {
|     
|     yylineno = _line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param _in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  _in_str )
| {
|         yyin = _in_str ;
| }
| 
| void yyset_out (FILE *  _out_str )
| {
|         yyout = _out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  _bdebug )
| {
|         yy_flex_debug = _bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = NULL;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = NULL;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = NULL;
|     yyout = NULL;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer( YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, const char * s2, int n )
| {
| 		
| 	int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (const char * s )
| {
| 	int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 			return malloc(size);
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 		
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return realloc(ptr, size);
| }
| 
| void yyfree (void * ptr )
| {
| 			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 10 "conftest.l"
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:27904: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c -lfl  >&5
wasm-ld: error: unable to find library -lfl
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/wasm-ld -o conftest.wasm /tmp/emscripten_temp_j5x2i_d1/conftest_0.o -lfl -L/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten -lGL -lal -lhtml5 -lstubs-debug -lc-debug -ldlmalloc -lcompiler_rt -lc++-noexcept -lc++abi-noexcept -lsockets -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr --import-undefined --strip-debug --export-if-defined=main --export-if-defined=__start_em_asm --export-if-defined=__stop_em_asm --export-if-defined=__start_em_js --export-if-defined=__stop_em_js --export-if-defined=__main_argc_argv --export-if-defined=fflush --export=emscripten_stack_get_end --export=emscripten_stack_get_free --export=emscripten_stack_get_base --export=emscripten_stack_init --export=stackSave --export=stackRestore --export=stackAlloc --export=__wasm_call_ctors --export=__errno_location --export=__get_temp_ret --export=__set_temp_ret --export=__funcs_on_exit --export-table -z stack-size=5242880 --initial-memory=16777216 --no-entry --max-memory=16777216 --global-base=1024' failed (returned 1)
configure:27904: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| #define HAVE_TIMES 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_VSNPRINTF 1
| #define GMP_MPARAM_H_SUGGEST "./mpn/generic/gmp-mparam.h"
| #define SIZEOF_VOID_P 4
| #define SIZEOF_UNSIGNED_SHORT 2
| #define SIZEOF_UNSIGNED 4
| #define SIZEOF_UNSIGNED_LONG 4
| #define SIZEOF_MP_LIMB_T 4
| #define TUNE_SQR_TOOM2_MAX SQR_TOOM2_MAX_GENERIC
| #define HAVE_STACK_T 1
| /* end confdefs.h.  */
| 
| #line 2 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 6
| #define YY_FLEX_SUBMINOR_VERSION 4
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #ifndef SIZE_MAX
| #define SIZE_MAX               (~(size_t)0)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| /* begin standard C++ headers. */
| 
| /* TODO: this is always defined, so inline it */
| #define yyconst const
| 
| #if defined(__GNUC__) && __GNUC__ >= 3
| #define yynoreturn __attribute__((__noreturn__))
| #else
| #define yynoreturn
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an
|  *   integer in range [0..255] for use as an array index.
|  */
| #define YY_SC_TO_UI(c) ((YY_CHAR) (c))
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart( yyin  )
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k.
|  * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
|  * Ditto for the __ia64__ case accordingly.
|  */
| #define YY_BUF_SIZE 32768
| #else
| #define YY_BUF_SIZE 16384
| #endif /* __ia64__ */
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern int yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
|     
|     #define YY_LESS_LINENO(n)
|     #define YY_LINENO_REWIND_TO(ptr)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	int yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
| 
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| int yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = NULL;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart ( FILE *input_file  );
| void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
| void yy_delete_buffer ( YY_BUFFER_STATE b  );
| void yy_flush_buffer ( YY_BUFFER_STATE b  );
| void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state ( void );
| 
| static void yyensure_buffer_stack ( void );
| static void yy_load_buffer_state ( void );
| static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );
| #define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );
| 
| void *yyalloc ( yy_size_t  );
| void *yyrealloc ( void *, yy_size_t  );
| void yyfree ( void *  );
| 
| #define yy_new_buffer yy_create_buffer
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| typedef flex_uint8_t YY_CHAR;
| 
| FILE *yyin = NULL, *yyout = NULL;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| int yylineno = 1;
| 
| extern char *yytext;
| #ifdef yytext_ptr
| #undef yytext_ptr
| #endif
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state ( void );
| static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );
| static int yy_get_next_buffer ( void );
| static void yynoreturn yy_fatal_error ( const char* msg  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (int) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static const flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static const flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static const YY_CHAR yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static const YY_CHAR yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static const flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static const flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static const flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static const flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 459 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals ( void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy ( void );
| 
| int yyget_debug ( void );
| 
| void yyset_debug ( int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra ( void );
| 
| void yyset_extra ( YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in ( void );
| 
| void yyset_in  ( FILE * _in_str  );
| 
| FILE *yyget_out ( void );
| 
| void yyset_out  ( FILE * _out_str  );
| 
| 			int yyget_leng ( void );
| 
| char *yyget_text ( void );
| 
| int yyget_lineno ( void );
| 
| void yyset_lineno ( int _line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap ( void );
| #else
| extern int yywrap ( void );
| #endif
| #endif
| 
| #ifndef YY_NO_UNPUT
|     
|     static void yyunput ( int c, char *buf_ptr  );
|     
| #endif
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy ( char *, const char *, int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen ( const char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
| static int yyinput ( void );
| #else
| static int input ( void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k */
| #define YY_READ_BUF_SIZE 16384
| #else
| #define YY_READ_BUF_SIZE 8192
| #endif /* __ia64__ */
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		int n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK /*LINTED*/break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp, *yy_bp;
| 	int yy_act;
|     
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer( yyin, YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state(  );
| 		}
| 
| 	{
| #line 1 "conftest.l"
| 
| #line 684 "lex.yy.c"
| 
| 	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (int) ((yy_c_buf_p) - (yytext_ptr));
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| 
| find_rule: /* we branch to this label when backing up */
| 
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
|     yyless ((input () != 0)); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 793 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap(  ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| 	} /* end of user's declarations */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	char *source = (yytext_ptr);
| 	int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			int num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart( yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
| 			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 		/* "- 2" to take care of EOB's */
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	int yy_is_jam;
|     
| 	YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
| #ifndef YY_NO_UNPUT
| 
|     static void yyunput (int c, char * yy_bp )
| {
| 	char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		int number_to_move = (yy_n_chars) + 2;
| 		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart( yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap(  ) )
| 						return 0;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer( yyin, YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
| 	yy_load_buffer_state(  );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state(  );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer( b, file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree( (void *) b->yy_ch_buf  );
| 
| 	yyfree( (void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer( b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state(  );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state(  );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state(  );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
|       num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		yy_size_t grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return NULL;
| 
| 	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = NULL;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer( b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (const char * yystr )
| {
|     
| 	return yy_scan_bytes( yystr, (int) strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	int i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = (yy_size_t) (_yybytes_len + 2);
| 	buf = (char *) yyalloc( n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer( buf, n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yynoreturn yy_fatal_error (const char* msg )
| {
| 			fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|     
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| int yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param _line_number line number
|  * 
|  */
| void yyset_lineno (int  _line_number )
| {
|     
|     yylineno = _line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param _in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  _in_str )
| {
|         yyin = _in_str ;
| }
| 
| void yyset_out (FILE *  _out_str )
| {
|         yyout = _out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  _bdebug )
| {
|         yy_flex_debug = _bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = NULL;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = NULL;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = NULL;
|     yyout = NULL;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer( YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, const char * s2, int n )
| {
| 		
| 	int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (const char * s )
| {
| 	int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 			return malloc(size);
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 		
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return realloc(ptr, size);
| }
| 
| void yyfree (void * ptr )
| {
| 			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 10 "conftest.l"
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:27904: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c -ll  >&5
wasm-ld: error: unable to find library -ll
emcc: error: '/home/wmealing/Projects/emsdk/upstream/bin/wasm-ld -o conftest.wasm /tmp/emscripten_temp_m_m20xo9/conftest_0.o -ll -L/home/wmealing/Projects/emsdk/upstream/emscripten/cache/sysroot/lib/wasm32-emscripten -lGL -lal -lhtml5 -lstubs-debug -lc-debug -ldlmalloc -lcompiler_rt -lc++-noexcept -lc++abi-noexcept -lsockets -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr --import-undefined --strip-debug --export-if-defined=main --export-if-defined=__start_em_asm --export-if-defined=__stop_em_asm --export-if-defined=__start_em_js --export-if-defined=__stop_em_js --export-if-defined=__main_argc_argv --export-if-defined=fflush --export=emscripten_stack_get_end --export=emscripten_stack_get_free --export=emscripten_stack_get_base --export=emscripten_stack_init --export=stackSave --export=stackRestore --export=stackAlloc --export=__wasm_call_ctors --export=__errno_location --export=__get_temp_ret --export=__set_temp_ret --export=__funcs_on_exit --export-table -z stack-size=5242880 --initial-memory=16777216 --no-entry --max-memory=16777216 --global-base=1024' failed (returned 1)
configure:27904: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| #define HAVE_TIMES 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_VSNPRINTF 1
| #define GMP_MPARAM_H_SUGGEST "./mpn/generic/gmp-mparam.h"
| #define SIZEOF_VOID_P 4
| #define SIZEOF_UNSIGNED_SHORT 2
| #define SIZEOF_UNSIGNED 4
| #define SIZEOF_UNSIGNED_LONG 4
| #define SIZEOF_MP_LIMB_T 4
| #define TUNE_SQR_TOOM2_MAX SQR_TOOM2_MAX_GENERIC
| #define HAVE_STACK_T 1
| /* end confdefs.h.  */
| 
| #line 2 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 6
| #define YY_FLEX_SUBMINOR_VERSION 4
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #ifndef SIZE_MAX
| #define SIZE_MAX               (~(size_t)0)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| /* begin standard C++ headers. */
| 
| /* TODO: this is always defined, so inline it */
| #define yyconst const
| 
| #if defined(__GNUC__) && __GNUC__ >= 3
| #define yynoreturn __attribute__((__noreturn__))
| #else
| #define yynoreturn
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an
|  *   integer in range [0..255] for use as an array index.
|  */
| #define YY_SC_TO_UI(c) ((YY_CHAR) (c))
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart( yyin  )
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k.
|  * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
|  * Ditto for the __ia64__ case accordingly.
|  */
| #define YY_BUF_SIZE 32768
| #else
| #define YY_BUF_SIZE 16384
| #endif /* __ia64__ */
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern int yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
|     
|     #define YY_LESS_LINENO(n)
|     #define YY_LINENO_REWIND_TO(ptr)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	int yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
| 
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| int yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = NULL;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart ( FILE *input_file  );
| void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
| void yy_delete_buffer ( YY_BUFFER_STATE b  );
| void yy_flush_buffer ( YY_BUFFER_STATE b  );
| void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state ( void );
| 
| static void yyensure_buffer_stack ( void );
| static void yy_load_buffer_state ( void );
| static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );
| #define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );
| 
| void *yyalloc ( yy_size_t  );
| void *yyrealloc ( void *, yy_size_t  );
| void yyfree ( void *  );
| 
| #define yy_new_buffer yy_create_buffer
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| typedef flex_uint8_t YY_CHAR;
| 
| FILE *yyin = NULL, *yyout = NULL;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| int yylineno = 1;
| 
| extern char *yytext;
| #ifdef yytext_ptr
| #undef yytext_ptr
| #endif
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state ( void );
| static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );
| static int yy_get_next_buffer ( void );
| static void yynoreturn yy_fatal_error ( const char* msg  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (int) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static const flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static const flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static const YY_CHAR yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static const YY_CHAR yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static const flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static const flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static const flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static const flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 459 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals ( void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy ( void );
| 
| int yyget_debug ( void );
| 
| void yyset_debug ( int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra ( void );
| 
| void yyset_extra ( YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in ( void );
| 
| void yyset_in  ( FILE * _in_str  );
| 
| FILE *yyget_out ( void );
| 
| void yyset_out  ( FILE * _out_str  );
| 
| 			int yyget_leng ( void );
| 
| char *yyget_text ( void );
| 
| int yyget_lineno ( void );
| 
| void yyset_lineno ( int _line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap ( void );
| #else
| extern int yywrap ( void );
| #endif
| #endif
| 
| #ifndef YY_NO_UNPUT
|     
|     static void yyunput ( int c, char *buf_ptr  );
|     
| #endif
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy ( char *, const char *, int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen ( const char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
| static int yyinput ( void );
| #else
| static int input ( void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k */
| #define YY_READ_BUF_SIZE 16384
| #else
| #define YY_READ_BUF_SIZE 8192
| #endif /* __ia64__ */
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		int n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK /*LINTED*/break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp, *yy_bp;
| 	int yy_act;
|     
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer( yyin, YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state(  );
| 		}
| 
| 	{
| #line 1 "conftest.l"
| 
| #line 684 "lex.yy.c"
| 
| 	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (int) ((yy_c_buf_p) - (yytext_ptr));
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| 
| find_rule: /* we branch to this label when backing up */
| 
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
|     yyless ((input () != 0)); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 793 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap(  ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| 	} /* end of user's declarations */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	char *source = (yytext_ptr);
| 	int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			int num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart( yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
| 			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 		/* "- 2" to take care of EOB's */
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	int yy_is_jam;
|     
| 	YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
| #ifndef YY_NO_UNPUT
| 
|     static void yyunput (int c, char * yy_bp )
| {
| 	char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		int number_to_move = (yy_n_chars) + 2;
| 		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart( yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap(  ) )
| 						return 0;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer( yyin, YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
| 	yy_load_buffer_state(  );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state(  );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer( b, file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree( (void *) b->yy_ch_buf  );
| 
| 	yyfree( (void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer( b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state(  );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state(  );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state(  );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
|       num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		yy_size_t grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return NULL;
| 
| 	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = NULL;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer( b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (const char * yystr )
| {
|     
| 	return yy_scan_bytes( yystr, (int) strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	int i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = (yy_size_t) (_yybytes_len + 2);
| 	buf = (char *) yyalloc( n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer( buf, n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yynoreturn yy_fatal_error (const char* msg )
| {
| 			fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|     
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| int yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param _line_number line number
|  * 
|  */
| void yyset_lineno (int  _line_number )
| {
|     
|     yylineno = _line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param _in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  _in_str )
| {
|         yyin = _in_str ;
| }
| 
| void yyset_out (FILE *  _out_str )
| {
|         yyout = _out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  _bdebug )
| {
|         yy_flex_debug = _bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = NULL;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = NULL;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = NULL;
|     yyout = NULL;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer( YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, const char * s2, int n )
| {
| 		
| 	int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (const char * s )
| {
| 	int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 			return malloc(size);
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 		
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return realloc(ptr, size);
| }
| 
| void yyfree (void * ptr )
| {
| 			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 10 "conftest.l"
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:27914: result: none needed
configure:27920: checking whether yytext is a pointer
configure:27937: /home/wmealing/Projects/emsdk/upstream/emscripten/emcc -o conftest    conftest.c   >&5
error: undefined symbol: yywrap (referenced by top-level compiled C/C++ code)
warning: Link with `-sLLD_REPORT_UNDEFINED` to get more information on undefined symbols
warning: To disable errors for undefined symbols use `-sERROR_ON_UNDEFINED_SYMBOLS=0`
warning: _yywrap may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library
Error: Aborting compilation due to previous errors
emcc: error: '/home/wmealing/Projects/emsdk/node/14.18.2_64bit/bin/node /home/wmealing/Projects/emsdk/upstream/emscripten/src/compiler.js /tmp/tmpclrmpdu6.json' failed (returned 1)
configure:27937: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "GNU MP"
| #define PACKAGE_TARNAME "gmp"
| #define PACKAGE_VERSION "6.2.1"
| #define PACKAGE_STRING "GNU MP 6.2.1"
| #define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
| #define PACKAGE_URL "http://www.gnu.org/software/gmp/"
| #define PACKAGE "gmp"
| #define VERSION "6.2.1"
| #define WANT_FFT 1
| #define HAVE_HOST_CPU_none 1
| #define NO_ASM 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_FCNTL_H 1
| #define HAVE_FLOAT_H 1
| #define HAVE_LANGINFO_H 1
| #define HAVE_LOCALE_H 1
| #define HAVE_NL_TYPES_H 1
| #define HAVE_SYS_MMAN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSINFO_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_TIMES_H 1
| #define HAVE_SYS_RESOURCE_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_DECL_FGETC 1
| #define HAVE_DECL_FSCANF 1
| #define HAVE_DECL_OPTARG 1
| #define HAVE_DECL_UNGETC 1
| #define HAVE_DECL_VFPRINTF 1
| #define HAVE_DECL_SYS_ERRLIST 0
| #define HAVE_DECL_SYS_NERR 0
| #define RETSIGTYPE void
| #define HAVE_INTMAX_T 1
| #define HAVE_LONG_DOUBLE 1
| #define HAVE_LONG_LONG 1
| #define HAVE_PTRDIFF_T 1
| #define HAVE_QUAD_T 1
| #define HAVE_UINT_LEAST32_T 1
| #define HAVE_INTPTR_T 1
| #define restrict __restrict
| #define HAVE_ATTRIBUTE_CONST 1
| #define HAVE_ATTRIBUTE_MALLOC 1
| #define HAVE_ATTRIBUTE_MODE 1
| #define HAVE_ATTRIBUTE_NORETURN 1
| #define HAVE_HIDDEN_ALIAS 1
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define WANT_TMP_ALLOCA 1
| #define HAVE_LIMB_LITTLE_ENDIAN 1
| #define HAVE_ALARM 1
| #define HAVE_CLOCK 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_GETRUSAGE 1
| #define HAVE_GETTIMEOFDAY 1
| #define HAVE_LOCALECONV 1
| #define HAVE_MEMSET 1
| #define HAVE_MMAP 1
| #define HAVE_MPROTECT 1
| #define HAVE_NL_LANGINFO 1
| #define HAVE_POPEN 1
| #define HAVE_RAISE 1
| #define HAVE_SIGACTION 1
| #define HAVE_SIGALTSTACK 1
| #define HAVE_STRCHR 1
| #define HAVE_STRERROR 1
| #define HAVE_STRNLEN 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_SYSCONF 1
| #define HAVE_TIMES 1
| #define HAVE_CLOCK_GETTIME 1
| #define HAVE_VSNPRINTF 1
| #define GMP_MPARAM_H_SUGGEST "./mpn/generic/gmp-mparam.h"
| #define SIZEOF_VOID_P 4
| #define SIZEOF_UNSIGNED_SHORT 2
| #define SIZEOF_UNSIGNED 4
| #define SIZEOF_UNSIGNED_LONG 4
| #define SIZEOF_MP_LIMB_T 4
| #define TUNE_SQR_TOOM2_MAX SQR_TOOM2_MAX_GENERIC
| #define HAVE_STACK_T 1
| /* end confdefs.h.  */
| 
|   #define YYTEXT_POINTER 1
| 
| #line 2 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 6
| #define YY_FLEX_SUBMINOR_VERSION 4
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #ifndef SIZE_MAX
| #define SIZE_MAX               (~(size_t)0)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| /* begin standard C++ headers. */
| 
| /* TODO: this is always defined, so inline it */
| #define yyconst const
| 
| #if defined(__GNUC__) && __GNUC__ >= 3
| #define yynoreturn __attribute__((__noreturn__))
| #else
| #define yynoreturn
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an
|  *   integer in range [0..255] for use as an array index.
|  */
| #define YY_SC_TO_UI(c) ((YY_CHAR) (c))
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart( yyin  )
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k.
|  * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
|  * Ditto for the __ia64__ case accordingly.
|  */
| #define YY_BUF_SIZE 32768
| #else
| #define YY_BUF_SIZE 16384
| #endif /* __ia64__ */
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern int yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
|     
|     #define YY_LESS_LINENO(n)
|     #define YY_LINENO_REWIND_TO(ptr)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	int yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
| 
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| int yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = NULL;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart ( FILE *input_file  );
| void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
| void yy_delete_buffer ( YY_BUFFER_STATE b  );
| void yy_flush_buffer ( YY_BUFFER_STATE b  );
| void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state ( void );
| 
| static void yyensure_buffer_stack ( void );
| static void yy_load_buffer_state ( void );
| static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );
| #define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );
| 
| void *yyalloc ( yy_size_t  );
| void *yyrealloc ( void *, yy_size_t  );
| void yyfree ( void *  );
| 
| #define yy_new_buffer yy_create_buffer
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| typedef flex_uint8_t YY_CHAR;
| 
| FILE *yyin = NULL, *yyout = NULL;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| int yylineno = 1;
| 
| extern char *yytext;
| #ifdef yytext_ptr
| #undef yytext_ptr
| #endif
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state ( void );
| static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );
| static int yy_get_next_buffer ( void );
| static void yynoreturn yy_fatal_error ( const char* msg  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (int) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static const flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static const flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static const YY_CHAR yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static const YY_CHAR yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static const flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static const flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static const flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static const flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 459 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals ( void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy ( void );
| 
| int yyget_debug ( void );
| 
| void yyset_debug ( int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra ( void );
| 
| void yyset_extra ( YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in ( void );
| 
| void yyset_in  ( FILE * _in_str  );
| 
| FILE *yyget_out ( void );
| 
| void yyset_out  ( FILE * _out_str  );
| 
| 			int yyget_leng ( void );
| 
| char *yyget_text ( void );
| 
| int yyget_lineno ( void );
| 
| void yyset_lineno ( int _line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap ( void );
| #else
| extern int yywrap ( void );
| #endif
| #endif
| 
| #ifndef YY_NO_UNPUT
|     
|     static void yyunput ( int c, char *buf_ptr  );
|     
| #endif
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy ( char *, const char *, int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen ( const char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
| static int yyinput ( void );
| #else
| static int input ( void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #ifdef __ia64__
| /* On IA-64, the buffer size is 16k, not 8k */
| #define YY_READ_BUF_SIZE 16384
| #else
| #define YY_READ_BUF_SIZE 8192
| #endif /* __ia64__ */
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		int n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK /*LINTED*/break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp, *yy_bp;
| 	int yy_act;
|     
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer( yyin, YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state(  );
| 		}
| 
| 	{
| #line 1 "conftest.l"
| 
| #line 684 "lex.yy.c"
| 
| 	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (int) ((yy_c_buf_p) - (yytext_ptr));
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| 
| find_rule: /* we branch to this label when backing up */
| 
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
|     yyless ((input () != 0)); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 793 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap(  ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| 	} /* end of user's declarations */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	char *source = (yytext_ptr);
| 	int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			int num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart( yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
| 			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 		/* "- 2" to take care of EOB's */
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	yy_state_type yy_current_state;
| 	char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	int yy_is_jam;
|     
| 	YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
| #ifndef YY_NO_UNPUT
| 
|     static void yyunput (int c, char * yy_bp )
| {
| 	char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		int number_to_move = (yy_n_chars) + 2;
| 		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart( yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap(  ) )
| 						return 0;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer( yyin, YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
| 	yy_load_buffer_state(  );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state(  );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer( b, file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree( (void *) b->yy_ch_buf  );
| 
| 	yyfree( (void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer( b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state(  );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state(  );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state(  );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
|       num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		yy_size_t grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return NULL;
| 
| 	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = NULL;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer( b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (const char * yystr )
| {
|     
| 	return yy_scan_bytes( yystr, (int) strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	int i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = (yy_size_t) (_yybytes_len + 2);
| 	buf = (char *) yyalloc( n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer( buf, n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yynoreturn yy_fatal_error (const char* msg )
| {
| 			fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|     
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| int yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param _line_number line number
|  * 
|  */
| void yyset_lineno (int  _line_number )
| {
|     
|     yylineno = _line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param _in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  _in_str )
| {
|         yyin = _in_str ;
| }
| 
| void yyset_out (FILE *  _out_str )
| {
|         yyout = _out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  _bdebug )
| {
|         yy_flex_debug = _bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = NULL;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = NULL;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = NULL;
|     yyout = NULL;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer( YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, const char * s2, int n )
| {
| 		
| 	int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (const char * s )
| {
| 	int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 			return malloc(size);
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 		
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return realloc(ptr, size);
| }
| 
| void yyfree (void * ptr )
| {
| 			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 10 "conftest.l"
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:27945: result: no
configure:28093: checking that generated files are newer than configure
configure:28099: result: done
configure:28127: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by GNU MP config.status 6.2.1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on wmealing-laptop

config.status:1355: creating demos/pexpr-config.h
config.status:1355: creating demos/calc/calc-config.h
config.status:1355: creating Makefile
config.status:1355: creating mpf/Makefile
config.status:1355: creating mpn/Makefile
config.status:1355: creating mpq/Makefile
config.status:1355: creating mpz/Makefile
config.status:1355: creating printf/Makefile
config.status:1355: creating scanf/Makefile
config.status:1355: creating rand/Makefile
config.status:1355: creating cxx/Makefile
config.status:1355: creating tests/Makefile
config.status:1355: creating tests/devel/Makefile
config.status:1355: creating tests/mpf/Makefile
config.status:1355: creating tests/mpn/Makefile
config.status:1355: creating tests/mpq/Makefile
config.status:1355: creating tests/mpz/Makefile
config.status:1355: creating tests/rand/Makefile
config.status:1355: creating tests/misc/Makefile
config.status:1355: creating tests/cxx/Makefile
config.status:1355: creating doc/Makefile
config.status:1355: creating tune/Makefile
config.status:1355: creating demos/Makefile
config.status:1355: creating demos/calc/Makefile
config.status:1355: creating demos/expr/Makefile
config.status:1355: creating gmp.h
config.status:1355: creating gmp.pc
config.status:1355: creating gmpxx.pc
config.status:1355: creating config.h
config.status:1536: config.h is unchanged
config.status:1596: linking mpn/generic/add.c to mpn/add.c
config.status:1596: linking mpn/generic/add_1.c to mpn/add_1.c
config.status:1596: linking mpn/generic/add_n.c to mpn/add_n.c
config.status:1596: linking mpn/generic/sub.c to mpn/sub.c
config.status:1596: linking mpn/generic/sub_1.c to mpn/sub_1.c
config.status:1596: linking mpn/generic/sub_n.c to mpn/sub_n.c
config.status:1596: linking mpn/generic/cnd_add_n.c to mpn/cnd_add_n.c
config.status:1596: linking mpn/generic/cnd_sub_n.c to mpn/cnd_sub_n.c
config.status:1596: linking mpn/generic/cnd_swap.c to mpn/cnd_swap.c
config.status:1596: linking mpn/generic/neg.c to mpn/neg.c
config.status:1596: linking mpn/generic/com.c to mpn/com.c
config.status:1596: linking mpn/generic/mul_1.c to mpn/mul_1.c
config.status:1596: linking mpn/generic/addmul_1.c to mpn/addmul_1.c
config.status:1596: linking mpn/generic/submul_1.c to mpn/submul_1.c
config.status:1596: linking mpn/generic/add_err1_n.c to mpn/add_err1_n.c
config.status:1596: linking mpn/generic/add_err2_n.c to mpn/add_err2_n.c
config.status:1596: linking mpn/generic/add_err3_n.c to mpn/add_err3_n.c
config.status:1596: linking mpn/generic/sub_err1_n.c to mpn/sub_err1_n.c
config.status:1596: linking mpn/generic/sub_err2_n.c to mpn/sub_err2_n.c
config.status:1596: linking mpn/generic/sub_err3_n.c to mpn/sub_err3_n.c
config.status:1596: linking mpn/generic/lshift.c to mpn/lshift.c
config.status:1596: linking mpn/generic/rshift.c to mpn/rshift.c
config.status:1596: linking mpn/generic/dive_1.c to mpn/dive_1.c
config.status:1596: linking mpn/generic/diveby3.c to mpn/diveby3.c
config.status:1596: linking mpn/generic/divis.c to mpn/divis.c
config.status:1596: linking mpn/generic/divrem.c to mpn/divrem.c
config.status:1596: linking mpn/generic/divrem_1.c to mpn/divrem_1.c
config.status:1596: linking mpn/generic/divrem_2.c to mpn/divrem_2.c
config.status:1596: linking mpn/generic/fib2_ui.c to mpn/fib2_ui.c
config.status:1596: linking mpn/generic/fib2m.c to mpn/fib2m.c
config.status:1596: linking mpn/generic/mod_1.c to mpn/mod_1.c
config.status:1596: linking mpn/generic/mod_34lsub1.c to mpn/mod_34lsub1.c
config.status:1596: linking mpn/generic/mode1o.c to mpn/mode1o.c
config.status:1596: linking mpn/generic/pre_divrem_1.c to mpn/pre_divrem_1.c
config.status:1596: linking mpn/generic/pre_mod_1.c to mpn/pre_mod_1.c
config.status:1596: linking mpn/generic/dump.c to mpn/dump.c
config.status:1596: linking mpn/generic/mod_1_1.c to mpn/mod_1_1.c
config.status:1596: linking mpn/generic/mod_1_2.c to mpn/mod_1_2.c
config.status:1596: linking mpn/generic/mod_1_3.c to mpn/mod_1_3.c
config.status:1596: linking mpn/generic/mod_1_4.c to mpn/mod_1_4.c
config.status:1596: linking mpn/generic/lshiftc.c to mpn/lshiftc.c
config.status:1596: linking mpn/generic/mul.c to mpn/mul.c
config.status:1596: linking mpn/generic/mul_fft.c to mpn/mul_fft.c
config.status:1596: linking mpn/generic/mul_n.c to mpn/mul_n.c
config.status:1596: linking mpn/generic/sqr.c to mpn/sqr.c
config.status:1596: linking mpn/generic/mul_basecase.c to mpn/mul_basecase.c
config.status:1596: linking mpn/generic/sqr_basecase.c to mpn/sqr_basecase.c
config.status:1596: linking mpn/generic/nussbaumer_mul.c to mpn/nussbaumer_mul.c
config.status:1596: linking mpn/generic/mulmid_basecase.c to mpn/mulmid_basecase.c
config.status:1596: linking mpn/generic/toom42_mulmid.c to mpn/toom42_mulmid.c
config.status:1596: linking mpn/generic/mulmid_n.c to mpn/mulmid_n.c
config.status:1596: linking mpn/generic/mulmid.c to mpn/mulmid.c
config.status:1596: linking mpn/generic/random.c to mpn/random.c
config.status:1596: linking mpn/generic/random2.c to mpn/random2.c
config.status:1596: linking mpn/generic/pow_1.c to mpn/pow_1.c
config.status:1596: linking mpn/generic/rootrem.c to mpn/rootrem.c
config.status:1596: linking mpn/generic/sqrtrem.c to mpn/sqrtrem.c
config.status:1596: linking mpn/generic/sizeinbase.c to mpn/sizeinbase.c
config.status:1596: linking mpn/generic/get_str.c to mpn/get_str.c
config.status:1596: linking mpn/generic/set_str.c to mpn/set_str.c
config.status:1596: linking mpn/generic/compute_powtab.c to mpn/compute_powtab.c
config.status:1596: linking mpn/generic/scan0.c to mpn/scan0.c
config.status:1596: linking mpn/generic/scan1.c to mpn/scan1.c
config.status:1596: linking mpn/generic/popham.c to mpn/popcount.c
config.status:1596: linking mpn/generic/popham.c to mpn/hamdist.c
config.status:1596: linking mpn/generic/cmp.c to mpn/cmp.c
config.status:1596: linking mpn/generic/zero_p.c to mpn/zero_p.c
config.status:1596: linking mpn/generic/perfsqr.c to mpn/perfsqr.c
config.status:1596: linking mpn/generic/perfpow.c to mpn/perfpow.c
config.status:1596: linking mpn/generic/strongfibo.c to mpn/strongfibo.c
config.status:1596: linking mpn/generic/gcd_11.c to mpn/gcd_11.c
config.status:1596: linking mpn/generic/gcd_22.c to mpn/gcd_22.c
config.status:1596: linking mpn/generic/gcd_1.c to mpn/gcd_1.c
config.status:1596: linking mpn/generic/gcd.c to mpn/gcd.c
config.status:1596: linking mpn/generic/gcdext_1.c to mpn/gcdext_1.c
config.status:1596: linking mpn/generic/gcdext.c to mpn/gcdext.c
config.status:1596: linking mpn/generic/gcd_subdiv_step.c to mpn/gcd_subdiv_step.c
config.status:1596: linking mpn/generic/gcdext_lehmer.c to mpn/gcdext_lehmer.c
config.status:1596: linking mpn/generic/div_q.c to mpn/div_q.c
config.status:1596: linking mpn/generic/tdiv_qr.c to mpn/tdiv_qr.c
config.status:1596: linking mpn/generic/jacbase.c to mpn/jacbase.c
config.status:1596: linking mpn/generic/jacobi_2.c to mpn/jacobi_2.c
config.status:1596: linking mpn/generic/jacobi.c to mpn/jacobi.c
config.status:1596: linking mpn/generic/get_d.c to mpn/get_d.c
config.status:1596: linking mpn/generic/matrix22_mul.c to mpn/matrix22_mul.c
config.status:1596: linking mpn/generic/matrix22_mul1_inverse_vector.c to mpn/matrix22_mul1_inverse_vector.c
config.status:1596: linking mpn/generic/hgcd_matrix.c to mpn/hgcd_matrix.c
config.status:1596: linking mpn/generic/hgcd2.c to mpn/hgcd2.c
config.status:1596: linking mpn/generic/hgcd_step.c to mpn/hgcd_step.c
config.status:1596: linking mpn/generic/hgcd_reduce.c to mpn/hgcd_reduce.c
config.status:1596: linking mpn/generic/hgcd.c to mpn/hgcd.c
config.status:1596: linking mpn/generic/hgcd_appr.c to mpn/hgcd_appr.c
config.status:1596: linking mpn/generic/hgcd2_jacobi.c to mpn/hgcd2_jacobi.c
config.status:1596: linking mpn/generic/hgcd_jacobi.c to mpn/hgcd_jacobi.c
config.status:1596: linking mpn/generic/mullo_n.c to mpn/mullo_n.c
config.status:1596: linking mpn/generic/mullo_basecase.c to mpn/mullo_basecase.c
config.status:1596: linking mpn/generic/sqrlo.c to mpn/sqrlo.c
config.status:1596: linking mpn/generic/sqrlo_basecase.c to mpn/sqrlo_basecase.c
config.status:1596: linking mpn/generic/toom22_mul.c to mpn/toom22_mul.c
config.status:1596: linking mpn/generic/toom32_mul.c to mpn/toom32_mul.c
config.status:1596: linking mpn/generic/toom42_mul.c to mpn/toom42_mul.c
config.status:1596: linking mpn/generic/toom52_mul.c to mpn/toom52_mul.c
config.status:1596: linking mpn/generic/toom62_mul.c to mpn/toom62_mul.c
config.status:1596: linking mpn/generic/toom33_mul.c to mpn/toom33_mul.c
config.status:1596: linking mpn/generic/toom43_mul.c to mpn/toom43_mul.c
config.status:1596: linking mpn/generic/toom53_mul.c to mpn/toom53_mul.c
config.status:1596: linking mpn/generic/toom54_mul.c to mpn/toom54_mul.c
config.status:1596: linking mpn/generic/toom63_mul.c to mpn/toom63_mul.c
config.status:1596: linking mpn/generic/toom44_mul.c to mpn/toom44_mul.c
config.status:1596: linking mpn/generic/toom6h_mul.c to mpn/toom6h_mul.c
config.status:1596: linking mpn/generic/toom6_sqr.c to mpn/toom6_sqr.c
config.status:1596: linking mpn/generic/toom8h_mul.c to mpn/toom8h_mul.c
config.status:1596: linking mpn/generic/toom8_sqr.c to mpn/toom8_sqr.c
config.status:1596: linking mpn/generic/toom_couple_handling.c to mpn/toom_couple_handling.c
config.status:1596: linking mpn/generic/toom2_sqr.c to mpn/toom2_sqr.c
config.status:1596: linking mpn/generic/toom3_sqr.c to mpn/toom3_sqr.c
config.status:1596: linking mpn/generic/toom4_sqr.c to mpn/toom4_sqr.c
config.status:1596: linking mpn/generic/toom_eval_dgr3_pm1.c to mpn/toom_eval_dgr3_pm1.c
config.status:1596: linking mpn/generic/toom_eval_dgr3_pm2.c to mpn/toom_eval_dgr3_pm2.c
config.status:1596: linking mpn/generic/toom_eval_pm1.c to mpn/toom_eval_pm1.c
config.status:1596: linking mpn/generic/toom_eval_pm2.c to mpn/toom_eval_pm2.c
config.status:1596: linking mpn/generic/toom_eval_pm2exp.c to mpn/toom_eval_pm2exp.c
config.status:1596: linking mpn/generic/toom_eval_pm2rexp.c to mpn/toom_eval_pm2rexp.c
config.status:1596: linking mpn/generic/toom_interpolate_5pts.c to mpn/toom_interpolate_5pts.c
config.status:1596: linking mpn/generic/toom_interpolate_6pts.c to mpn/toom_interpolate_6pts.c
config.status:1596: linking mpn/generic/toom_interpolate_7pts.c to mpn/toom_interpolate_7pts.c
config.status:1596: linking mpn/generic/toom_interpolate_8pts.c to mpn/toom_interpolate_8pts.c
config.status:1596: linking mpn/generic/toom_interpolate_12pts.c to mpn/toom_interpolate_12pts.c
config.status:1596: linking mpn/generic/toom_interpolate_16pts.c to mpn/toom_interpolate_16pts.c
config.status:1596: linking mpn/generic/invertappr.c to mpn/invertappr.c
config.status:1596: linking mpn/generic/invert.c to mpn/invert.c
config.status:1596: linking mpn/generic/binvert.c to mpn/binvert.c
config.status:1596: linking mpn/generic/mulmod_bnm1.c to mpn/mulmod_bnm1.c
config.status:1596: linking mpn/generic/sqrmod_bnm1.c to mpn/sqrmod_bnm1.c
config.status:1596: linking mpn/generic/div_qr_1.c to mpn/div_qr_1.c
config.status:1596: linking mpn/generic/div_qr_1n_pi1.c to mpn/div_qr_1n_pi1.c
config.status:1596: linking mpn/generic/div_qr_2.c to mpn/div_qr_2.c
config.status:1596: linking mpn/generic/div_qr_2n_pi1.c to mpn/div_qr_2n_pi1.c
config.status:1596: linking mpn/generic/div_qr_2u_pi1.c to mpn/div_qr_2u_pi1.c
config.status:1596: linking mpn/generic/sbpi1_div_q.c to mpn/sbpi1_div_q.c
config.status:1596: linking mpn/generic/sbpi1_div_qr.c to mpn/sbpi1_div_qr.c
config.status:1596: linking mpn/generic/sbpi1_divappr_q.c to mpn/sbpi1_divappr_q.c
config.status:1596: linking mpn/generic/dcpi1_div_q.c to mpn/dcpi1_div_q.c
config.status:1596: linking mpn/generic/dcpi1_div_qr.c to mpn/dcpi1_div_qr.c
config.status:1596: linking mpn/generic/dcpi1_divappr_q.c to mpn/dcpi1_divappr_q.c
config.status:1596: linking mpn/generic/mu_div_qr.c to mpn/mu_div_qr.c
config.status:1596: linking mpn/generic/mu_divappr_q.c to mpn/mu_divappr_q.c
config.status:1596: linking mpn/generic/mu_div_q.c to mpn/mu_div_q.c
config.status:1596: linking mpn/generic/bdiv_q_1.c to mpn/bdiv_q_1.c
config.status:1596: linking mpn/generic/sbpi1_bdiv_q.c to mpn/sbpi1_bdiv_q.c
config.status:1596: linking mpn/generic/sbpi1_bdiv_qr.c to mpn/sbpi1_bdiv_qr.c
config.status:1596: linking mpn/generic/sbpi1_bdiv_r.c to mpn/sbpi1_bdiv_r.c
config.status:1596: linking mpn/generic/dcpi1_bdiv_q.c to mpn/dcpi1_bdiv_q.c
config.status:1596: linking mpn/generic/dcpi1_bdiv_qr.c to mpn/dcpi1_bdiv_qr.c
config.status:1596: linking mpn/generic/mu_bdiv_q.c to mpn/mu_bdiv_q.c
config.status:1596: linking mpn/generic/mu_bdiv_qr.c to mpn/mu_bdiv_qr.c
config.status:1596: linking mpn/generic/bdiv_q.c to mpn/bdiv_q.c
config.status:1596: linking mpn/generic/bdiv_qr.c to mpn/bdiv_qr.c
config.status:1596: linking mpn/generic/broot.c to mpn/broot.c
config.status:1596: linking mpn/generic/brootinv.c to mpn/brootinv.c
config.status:1596: linking mpn/generic/bsqrt.c to mpn/bsqrt.c
config.status:1596: linking mpn/generic/bsqrtinv.c to mpn/bsqrtinv.c
config.status:1596: linking mpn/generic/divexact.c to mpn/divexact.c
config.status:1596: linking mpn/generic/bdiv_dbm1c.c to mpn/bdiv_dbm1c.c
config.status:1596: linking mpn/generic/redc_1.c to mpn/redc_1.c
config.status:1596: linking mpn/generic/redc_2.c to mpn/redc_2.c
config.status:1596: linking mpn/generic/redc_n.c to mpn/redc_n.c
config.status:1596: linking mpn/generic/powm.c to mpn/powm.c
config.status:1596: linking mpn/generic/powlo.c to mpn/powlo.c
config.status:1596: linking mpn/generic/sec_powm.c to mpn/sec_powm.c
config.status:1596: linking mpn/generic/sec_mul.c to mpn/sec_mul.c
config.status:1596: linking mpn/generic/sec_sqr.c to mpn/sec_sqr.c
config.status:1596: linking mpn/generic/sec_div.c to mpn/sec_div_qr.c
config.status:1596: linking mpn/generic/sec_div.c to mpn/sec_div_r.c
config.status:1596: linking mpn/generic/sec_pi1_div.c to mpn/sec_pi1_div_qr.c
config.status:1596: linking mpn/generic/sec_pi1_div.c to mpn/sec_pi1_div_r.c
config.status:1596: linking mpn/generic/sec_aors_1.c to mpn/sec_add_1.c
config.status:1596: linking mpn/generic/sec_aors_1.c to mpn/sec_sub_1.c
config.status:1596: linking mpn/generic/sec_invert.c to mpn/sec_invert.c
config.status:1596: linking mpn/generic/trialdiv.c to mpn/trialdiv.c
config.status:1596: linking mpn/generic/remove.c to mpn/remove.c
config.status:1596: linking mpn/generic/logops_n.c to mpn/and_n.c
config.status:1596: linking mpn/generic/logops_n.c to mpn/andn_n.c
config.status:1596: linking mpn/generic/logops_n.c to mpn/nand_n.c
config.status:1596: linking mpn/generic/logops_n.c to mpn/ior_n.c
config.status:1596: linking mpn/generic/logops_n.c to mpn/iorn_n.c
config.status:1596: linking mpn/generic/logops_n.c to mpn/nior_n.c
config.status:1596: linking mpn/generic/logops_n.c to mpn/xor_n.c
config.status:1596: linking mpn/generic/logops_n.c to mpn/xnor_n.c
config.status:1596: linking mpn/generic/copyi.c to mpn/copyi.c
config.status:1596: linking mpn/generic/copyd.c to mpn/copyd.c
config.status:1596: linking mpn/generic/zero.c to mpn/zero.c
config.status:1596: linking mpn/generic/sec_tabselect.c to mpn/sec_tabselect.c
config.status:1596: linking mpn/generic/comb_tables.c to mpn/comb_tables.c
config.status:1596: linking mpn/generic/add_n_sub_n.c to mpn/add_n_sub_n.c
config.status:1596: linking mpn/generic/gmp-mparam.h to gmp-mparam.h
config.status:1615: executing libtool commands
configure:30522: summary of build options:

  Version:           GNU MP 6.2.1
  Host type:         none-none-none
  ABI:               standard
  Install prefix:    /home/wmealing/Projects/build-test/cob-webber/dist
  Compiler:          /home/wmealing/Projects/emsdk/upstream/emscripten/emcc
  Static libraries:  yes
  Shared libraries:  no


## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=none-none-none
ac_cv_c_bigendian=no
ac_cv_c_compiler_gnu=yes
ac_cv_c_inline=inline
ac_cv_c_restrict=__restrict
ac_cv_c_volatile=yes
ac_cv_env_ABI_set=
ac_cv_env_ABI_value=
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CC_FOR_BUILD_set=
ac_cv_env_CC_FOR_BUILD_value=
ac_cv_env_CC_set=set
ac_cv_env_CC_value=/home/wmealing/Projects/emsdk/upstream/emscripten/emcc
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_FOR_BUILD_set=
ac_cv_env_CPP_FOR_BUILD_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CXXCPP_set=
ac_cv_env_CXXCPP_value=
ac_cv_env_CXXFLAGS_set=
ac_cv_env_CXXFLAGS_value=
ac_cv_env_CXX_set=set
ac_cv_env_CXX_value=/home/wmealing/Projects/emsdk/upstream/emscripten/em++
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_LT_SYS_LIBRARY_PATH_set=
ac_cv_env_LT_SYS_LIBRARY_PATH_value=
ac_cv_env_M4_set=
ac_cv_env_M4_value=
ac_cv_env_YACC_set=
ac_cv_env_YACC_value=
ac_cv_env_YFLAGS_set=
ac_cv_env_YFLAGS_value=
ac_cv_env_build_alias_set=set
ac_cv_env_build_alias_value=none
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func_alarm=yes
ac_cv_func_attr_get=no
ac_cv_func_clock=yes
ac_cv_func_cputime=no
ac_cv_func_getpagesize=yes
ac_cv_func_getrusage=yes
ac_cv_func_getsysinfo=no
ac_cv_func_gettimeofday=yes
ac_cv_func_localeconv=yes
ac_cv_func_memset=yes
ac_cv_func_mmap=yes
ac_cv_func_mprotect=yes
ac_cv_func_nl_langinfo=yes
ac_cv_func_obstack_vprintf=no
ac_cv_func_popen=yes
ac_cv_func_processor_info=no
ac_cv_func_pstat_getprocessor=no
ac_cv_func_raise=yes
ac_cv_func_read_real_time=no
ac_cv_func_sigaction=yes
ac_cv_func_sigaltstack=yes
ac_cv_func_sigstack=no
ac_cv_func_strchr=yes
ac_cv_func_strerror=yes
ac_cv_func_strnlen=yes
ac_cv_func_strtol=yes
ac_cv_func_strtoul=yes
ac_cv_func_sysconf=yes
ac_cv_func_sysctl=no
ac_cv_func_sysctlbyname=no
ac_cv_func_syssgi=no
ac_cv_func_times=yes
ac_cv_func_vsnprintf=yes
ac_cv_have_decl_fgetc=yes
ac_cv_have_decl_fscanf=yes
ac_cv_have_decl_optarg=yes
ac_cv_have_decl_sys_errlist=no
ac_cv_have_decl_sys_nerr=no
ac_cv_have_decl_ungetc=yes
ac_cv_have_decl_vfprintf=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_fcntl_h=yes
ac_cv_header_float_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_invent_h=no
ac_cv_header_langinfo_h=yes
ac_cv_header_locale_h=yes
ac_cv_header_machine_hal_sysinfo_h=no
ac_cv_header_memory_h=yes
ac_cv_header_nl_types_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_attributes_h=no
ac_cv_header_sys_iograph_h=no
ac_cv_header_sys_mman_h=yes
ac_cv_header_sys_param_h=yes
ac_cv_header_sys_processor_h=no
ac_cv_header_sys_pstat_h=no
ac_cv_header_sys_resource_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_sysctl_h=yes
ac_cv_header_sys_sysinfo_h=yes
ac_cv_header_sys_syssgi_h=no
ac_cv_header_sys_systemcfg_h=no
ac_cv_header_sys_time_h=yes
ac_cv_header_sys_times_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_time=yes
ac_cv_header_unistd_h=yes
ac_cv_host=none-none-none
ac_cv_lib_curses_tputs=no
ac_cv_lib_lex='none needed'
ac_cv_lib_m_cos=yes
ac_cv_lib_ncurses_tputs=no
ac_cv_lib_readline_readline=no
ac_cv_member_struct_pst_processor_psp_iticksperclktick=no
ac_cv_objext=o
ac_cv_path_EGREP='/usr/bin/grep -E'
ac_cv_path_FGREP='/usr/bin/grep -F'
ac_cv_path_GREP=/usr/bin/grep
ac_cv_path_SED=/usr/bin/sed
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_lt_DD=/usr/bin/dd
ac_cv_path_mkdir=/usr/bin/mkdir
ac_cv_prog_AWK=gawk
ac_cv_prog_CPP='/home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E'
ac_cv_prog_CXXCPP='/home/wmealing/Projects/emsdk/upstream/emscripten/em++ -E'
ac_cv_prog_LEX=flex
ac_cv_prog_YACC='bison -y'
ac_cv_prog_ac_ct_AR=/home/wmealing/Projects/emsdk/upstream/emscripten/emar
ac_cv_prog_ac_ct_CC=/home/wmealing/Projects/emsdk/upstream/emscripten/emcc
ac_cv_prog_ac_ct_DLLTOOL=dlltool
ac_cv_prog_ac_ct_OBJDUMP=objdump
ac_cv_prog_ac_ct_RANLIB=/home/wmealing/Projects/emsdk/upstream/emscripten/emranlib
ac_cv_prog_ac_ct_STRIP=strip
ac_cv_prog_cc_c89=
ac_cv_prog_cc_c99=
ac_cv_prog_cc_g=yes
ac_cv_prog_lex_root=lex.yy
ac_cv_prog_lex_yytext_pointer=no
ac_cv_prog_make_make_set=yes
ac_cv_search_clock_gettime='none required'
ac_cv_sizeof_mp_limb_t=4
ac_cv_sizeof_unsigned=4
ac_cv_sizeof_unsigned_long=4
ac_cv_sizeof_unsigned_short=2
ac_cv_sizeof_void_p=4
ac_cv_type_intmax_t=yes
ac_cv_type_intptr_t=yes
ac_cv_type_long_double=yes
ac_cv_type_long_long=yes
ac_cv_type_ptrdiff_t=yes
ac_cv_type_quad_t=yes
ac_cv_type_signal=void
ac_cv_type_stack_t=yes
ac_cv_type_uint_least32_t=yes
am_cv_make_support_nested_variables=yes
am_cv_prog_cc_c_o=yes
cl_cv_as_noexecstack=no
gmp_cv_c_attribute_const=yes
gmp_cv_c_attribute_malloc=yes
gmp_cv_c_attribute_mode=yes
gmp_cv_c_attribute_noreturn=yes
gmp_cv_c_double_format='unknown '
gmp_cv_c_for_build_ansi=yes
gmp_cv_c_hidden_alias=yes
gmp_cv_check_libm_for_build=-lm
gmp_cv_func_alloca=yes
gmp_cv_func_sscanf_writable_input=no
gmp_cv_func_vsnprintf=yes
gmp_cv_header_alloca=yes
gmp_cv_option_alloca=alloca
gmp_cv_prog_cpp_for_build='/home/wmealing/Projects/emsdk/upstream/bin/clang -E'
gmp_cv_prog_exeext_for_build=
lt_cv_ar_at_file=@
lt_cv_deplibs_check_method=unknown
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD=/home/wmealing/Projects/emsdk/upstream/emscripten/emcc
lt_cv_path_LDCXX=
lt_cv_path_NM=/home/wmealing/Projects/emsdk/upstream/bin/llvm-nm
lt_cv_path_mainfest_tool=no
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_c_o_CXX=yes
lt_cv_prog_compiler_pic='-fPIC -DPIC'
lt_cv_prog_compiler_pic_CXX=' -DPIC'
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_pic_works_CXX=yes
lt_cv_prog_compiler_rtti_exceptions=yes
lt_cv_prog_compiler_static_works=yes
lt_cv_prog_compiler_static_works_CXX=yes
lt_cv_prog_gnu_ld=yes
lt_cv_prog_gnu_ldcxx=
lt_cv_sharedlib_from_linklib_cmd='printf %s\n'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(lib.*\)$/  {"\1", (void *) \&\1},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"lib\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_import=
lt_cv_sys_max_cmd_len=1572864
lt_cv_to_host_file_cmd=func_convert_file_noop
lt_cv_to_tool_file_cmd=func_convert_file_noop
lt_cv_truncate_bin='/usr/bin/dd bs=4096 count=1'

## ----------------- ##
## Output variables. ##
## ----------------- ##

ABI='standard'
ACLOCAL='${SHELL} /home/wmealing/Projects/build-test/cob-webber/deps/gmp-wasm/missing aclocal-1.15'
AMTAR='$${TAR-tar}'
AM_BACKSLASH='\'
AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
AM_DEFAULT_VERBOSITY='1'
AM_V='$(V)'
AR='/home/wmealing/Projects/emsdk/upstream/emscripten/emar'
AS='as'
ASMFLAGS=''
AUTOCONF='${SHELL} /home/wmealing/Projects/build-test/cob-webber/deps/gmp-wasm/missing autoconf'
AUTOHEADER='${SHELL} /home/wmealing/Projects/build-test/cob-webber/deps/gmp-wasm/missing autoheader'
AUTOMAKE='${SHELL} /home/wmealing/Projects/build-test/cob-webber/deps/gmp-wasm/missing automake-1.15'
AWK='gawk'
CALLING_CONVENTIONS_OBJS=''
CC='/home/wmealing/Projects/emsdk/upstream/emscripten/emcc'
CCAS='/home/wmealing/Projects/emsdk/upstream/emscripten/emcc -c'
CC_FOR_BUILD='/home/wmealing/Projects/emsdk/upstream/bin/clang'
CFLAGS=''
CPP='/home/wmealing/Projects/emsdk/upstream/emscripten/emcc -E'
CPPFLAGS=''
CPP_FOR_BUILD='/home/wmealing/Projects/emsdk/upstream/bin/clang -E'
CXX='/home/wmealing/Projects/emsdk/upstream/emscripten/em++'
CXXCPP='/home/wmealing/Projects/emsdk/upstream/emscripten/em++ -E'
CXXFLAGS=''
CYGPATH_W='echo'
DEFN_LONG_LONG_LIMB='/* #undef _LONG_LONG_LIMB */'
DEFS='-DHAVE_CONFIG_H'
DLLTOOL='dlltool'
DSYMUTIL=''
DUMPBIN=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/usr/bin/grep -E'
ENABLE_STATIC_FALSE='#'
ENABLE_STATIC_TRUE=''
EXEEXT=''
EXEEXT_FOR_BUILD=''
FGREP='/usr/bin/grep -F'
GMP_LDFLAGS=''
GMP_LIMB_BITS='32'
GMP_NAIL_BITS='0'
GREP='/usr/bin/grep'
HAVE_CLOCK_01='1'
HAVE_CPUTIME_01='0'
HAVE_GETRUSAGE_01='1'
HAVE_GETTIMEOFDAY_01='1'
HAVE_HOST_CPU_FAMILY_power='0'
HAVE_HOST_CPU_FAMILY_powerpc='0'
HAVE_SIGACTION_01='1'
HAVE_SIGALTSTACK_01='1'
HAVE_SIGSTACK_01='0'
HAVE_STACK_T_01='1'
HAVE_SYS_RESOURCE_H_01='1'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LD='/home/wmealing/Projects/emsdk/upstream/emscripten/emcc'
LDFLAGS=''
LEX='flex'
LEXLIB=''
LEX_OUTPUT_ROOT='lex.yy'
LIBCURSES=''
LIBGMPXX_LDFLAGS=''
LIBGMP_DLL='0'
LIBGMP_LDFLAGS=''
LIBM='-lm'
LIBM_FOR_BUILD='-lm'
LIBOBJS=''
LIBREADLINE=''
LIBS=''
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIPO=''
LN_S='ln -s'
LTLIBOBJS=''
LT_SYS_LIBRARY_PATH=''
M4=''
MAINT='#'
MAINTAINER_MODE_FALSE=''
MAINTAINER_MODE_TRUE='#'
MAKEINFO='${SHELL} /home/wmealing/Projects/build-test/cob-webber/deps/gmp-wasm/missing makeinfo'
MANIFEST_TOOL=':'
MKDIR_P='/usr/bin/mkdir -p'
NM='/home/wmealing/Projects/emsdk/upstream/bin/llvm-nm'
NMEDIT=''
OBJDUMP='objdump'
OBJEXT='o'
OTOOL64=''
OTOOL=''
PACKAGE='gmp'
PACKAGE_BUGREPORT='gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html'
PACKAGE_NAME='GNU MP'
PACKAGE_STRING='GNU MP 6.2.1'
PACKAGE_TARNAME='gmp'
PACKAGE_URL='http://www.gnu.org/software/gmp/'
PACKAGE_VERSION='6.2.1'
PATH_SEPARATOR=':'
RANLIB='/home/wmealing/Projects/emsdk/upstream/emscripten/emranlib'
SED='/usr/bin/sed'
SET_MAKE=''
SHELL='/bin/sh'
SPEED_CYCLECOUNTER_OBJ=''
STRIP='strip'
TAL_OBJECT='tal-reent.lo'
TUNE_LIBS=''
TUNE_SQR_OBJ=''
U_FOR_BUILD=''
VERSION='6.2.1'
WANT_CXX_FALSE=''
WANT_CXX_TRUE='#'
WITH_READLINE_01='0'
YACC='bison -y'
YFLAGS=''
ac_ct_AR='/home/wmealing/Projects/emsdk/upstream/emscripten/emar'
ac_ct_CC='/home/wmealing/Projects/emsdk/upstream/emscripten/emcc'
ac_ct_CXX=''
ac_ct_DUMPBIN=''
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__isrc=''
am__leading_dot='.'
am__tar='$${TAR-tar} chof - "$$tardir"'
am__untar='$${TAR-tar} xf -'
bindir='${exec_prefix}/bin'
build='none-none-none'
build_alias='none'
build_cpu='none'
build_os='none'
build_vendor='none'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
gmp_srclinks=' mpn/add.c mpn/add_1.c mpn/add_n.c mpn/sub.c mpn/sub_1.c mpn/sub_n.c mpn/cnd_add_n.c mpn/cnd_sub_n.c mpn/cnd_swap.c mpn/neg.c mpn/com.c mpn/mul_1.c mpn/addmul_1.c mpn/submul_1.c mpn/add_err1_n.c mpn/add_err2_n.c mpn/add_err3_n.c mpn/sub_err1_n.c mpn/sub_err2_n.c mpn/sub_err3_n.c mpn/lshift.c mpn/rshift.c mpn/dive_1.c mpn/diveby3.c mpn/divis.c mpn/divrem.c mpn/divrem_1.c mpn/divrem_2.c mpn/fib2_ui.c mpn/fib2m.c mpn/mod_1.c mpn/mod_34lsub1.c mpn/mode1o.c mpn/pre_divrem_1.c mpn/pre_mod_1.c mpn/dump.c mpn/mod_1_1.c mpn/mod_1_2.c mpn/mod_1_3.c mpn/mod_1_4.c mpn/lshiftc.c mpn/mul.c mpn/mul_fft.c mpn/mul_n.c mpn/sqr.c mpn/mul_basecase.c mpn/sqr_basecase.c mpn/nussbaumer_mul.c mpn/mulmid_basecase.c mpn/toom42_mulmid.c mpn/mulmid_n.c mpn/mulmid.c mpn/random.c mpn/random2.c mpn/pow_1.c mpn/rootrem.c mpn/sqrtrem.c mpn/sizeinbase.c mpn/get_str.c mpn/set_str.c mpn/compute_powtab.c mpn/scan0.c mpn/scan1.c mpn/popcount.c mpn/hamdist.c mpn/cmp.c mpn/zero_p.c mpn/perfsqr.c mpn/perfpow.c mpn/strongfibo.c mpn/gcd_11.c mpn/gcd_22.c mpn/gcd_1.c mpn/gcd.c mpn/gcdext_1.c mpn/gcdext.c mpn/gcd_subdiv_step.c mpn/gcdext_lehmer.c mpn/div_q.c mpn/tdiv_qr.c mpn/jacbase.c mpn/jacobi_2.c mpn/jacobi.c mpn/get_d.c mpn/matrix22_mul.c mpn/matrix22_mul1_inverse_vector.c mpn/hgcd_matrix.c mpn/hgcd2.c mpn/hgcd_step.c mpn/hgcd_reduce.c mpn/hgcd.c mpn/hgcd_appr.c mpn/hgcd2_jacobi.c mpn/hgcd_jacobi.c mpn/mullo_n.c mpn/mullo_basecase.c mpn/sqrlo.c mpn/sqrlo_basecase.c mpn/toom22_mul.c mpn/toom32_mul.c mpn/toom42_mul.c mpn/toom52_mul.c mpn/toom62_mul.c mpn/toom33_mul.c mpn/toom43_mul.c mpn/toom53_mul.c mpn/toom54_mul.c mpn/toom63_mul.c mpn/toom44_mul.c mpn/toom6h_mul.c mpn/toom6_sqr.c mpn/toom8h_mul.c mpn/toom8_sqr.c mpn/toom_couple_handling.c mpn/toom2_sqr.c mpn/toom3_sqr.c mpn/toom4_sqr.c mpn/toom_eval_dgr3_pm1.c mpn/toom_eval_dgr3_pm2.c mpn/toom_eval_pm1.c mpn/toom_eval_pm2.c mpn/toom_eval_pm2exp.c mpn/toom_eval_pm2rexp.c mpn/toom_interpolate_5pts.c mpn/toom_interpolate_6pts.c mpn/toom_interpolate_7pts.c mpn/toom_interpolate_8pts.c mpn/toom_interpolate_12pts.c mpn/toom_interpolate_16pts.c mpn/invertappr.c mpn/invert.c mpn/binvert.c mpn/mulmod_bnm1.c mpn/sqrmod_bnm1.c mpn/div_qr_1.c mpn/div_qr_1n_pi1.c mpn/div_qr_2.c mpn/div_qr_2n_pi1.c mpn/div_qr_2u_pi1.c mpn/sbpi1_div_q.c mpn/sbpi1_div_qr.c mpn/sbpi1_divappr_q.c mpn/dcpi1_div_q.c mpn/dcpi1_div_qr.c mpn/dcpi1_divappr_q.c mpn/mu_div_qr.c mpn/mu_divappr_q.c mpn/mu_div_q.c mpn/bdiv_q_1.c mpn/sbpi1_bdiv_q.c mpn/sbpi1_bdiv_qr.c mpn/sbpi1_bdiv_r.c mpn/dcpi1_bdiv_q.c mpn/dcpi1_bdiv_qr.c mpn/mu_bdiv_q.c mpn/mu_bdiv_qr.c mpn/bdiv_q.c mpn/bdiv_qr.c mpn/broot.c mpn/brootinv.c mpn/bsqrt.c mpn/bsqrtinv.c mpn/divexact.c mpn/bdiv_dbm1c.c mpn/redc_1.c mpn/redc_2.c mpn/redc_n.c mpn/powm.c mpn/powlo.c mpn/sec_powm.c mpn/sec_mul.c mpn/sec_sqr.c mpn/sec_div_qr.c mpn/sec_div_r.c mpn/sec_pi1_div_qr.c mpn/sec_pi1_div_r.c mpn/sec_add_1.c mpn/sec_sub_1.c mpn/sec_invert.c mpn/trialdiv.c mpn/remove.c mpn/and_n.c mpn/andn_n.c mpn/nand_n.c mpn/ior_n.c mpn/iorn_n.c mpn/nior_n.c mpn/xor_n.c mpn/xnor_n.c mpn/copyi.c mpn/copyd.c mpn/zero.c mpn/sec_tabselect.c mpn/comb_tables.c mpn/add_n_sub_n.c gmp-mparam.h'
host='none-none-none'
host_alias=''
host_cpu='none'
host_os='none'
host_vendor='none'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /home/wmealing/Projects/build-test/cob-webber/deps/gmp-wasm/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='$(MKDIR_P)'
mpn_objects=' add$U.lo add_1$U.lo add_n$U.lo sub$U.lo sub_1$U.lo sub_n$U.lo cnd_add_n$U.lo cnd_sub_n$U.lo cnd_swap$U.lo neg$U.lo com$U.lo mul_1$U.lo addmul_1$U.lo submul_1$U.lo add_err1_n$U.lo add_err2_n$U.lo add_err3_n$U.lo sub_err1_n$U.lo sub_err2_n$U.lo sub_err3_n$U.lo lshift$U.lo rshift$U.lo dive_1$U.lo diveby3$U.lo divis$U.lo divrem$U.lo divrem_1$U.lo divrem_2$U.lo fib2_ui$U.lo fib2m$U.lo mod_1$U.lo mod_34lsub1$U.lo mode1o$U.lo pre_divrem_1$U.lo pre_mod_1$U.lo dump$U.lo mod_1_1$U.lo mod_1_2$U.lo mod_1_3$U.lo mod_1_4$U.lo lshiftc$U.lo mul$U.lo mul_fft$U.lo mul_n$U.lo sqr$U.lo mul_basecase$U.lo sqr_basecase$U.lo nussbaumer_mul$U.lo mulmid_basecase$U.lo toom42_mulmid$U.lo mulmid_n$U.lo mulmid$U.lo random$U.lo random2$U.lo pow_1$U.lo rootrem$U.lo sqrtrem$U.lo sizeinbase$U.lo get_str$U.lo set_str$U.lo compute_powtab$U.lo scan0$U.lo scan1$U.lo popcount$U.lo hamdist$U.lo cmp$U.lo zero_p$U.lo perfsqr$U.lo perfpow$U.lo strongfibo$U.lo gcd_11$U.lo gcd_22$U.lo gcd_1$U.lo gcd$U.lo gcdext_1$U.lo gcdext$U.lo gcd_subdiv_step$U.lo gcdext_lehmer$U.lo div_q$U.lo tdiv_qr$U.lo jacbase$U.lo jacobi_2$U.lo jacobi$U.lo get_d$U.lo matrix22_mul$U.lo matrix22_mul1_inverse_vector$U.lo hgcd_matrix$U.lo hgcd2$U.lo hgcd_step$U.lo hgcd_reduce$U.lo hgcd$U.lo hgcd_appr$U.lo hgcd2_jacobi$U.lo hgcd_jacobi$U.lo mullo_n$U.lo mullo_basecase$U.lo sqrlo$U.lo sqrlo_basecase$U.lo toom22_mul$U.lo toom32_mul$U.lo toom42_mul$U.lo toom52_mul$U.lo toom62_mul$U.lo toom33_mul$U.lo toom43_mul$U.lo toom53_mul$U.lo toom54_mul$U.lo toom63_mul$U.lo toom44_mul$U.lo toom6h_mul$U.lo toom6_sqr$U.lo toom8h_mul$U.lo toom8_sqr$U.lo toom_couple_handling$U.lo toom2_sqr$U.lo toom3_sqr$U.lo toom4_sqr$U.lo toom_eval_dgr3_pm1$U.lo toom_eval_dgr3_pm2$U.lo toom_eval_pm1$U.lo toom_eval_pm2$U.lo toom_eval_pm2exp$U.lo toom_eval_pm2rexp$U.lo toom_interpolate_5pts$U.lo toom_interpolate_6pts$U.lo toom_interpolate_7pts$U.lo toom_interpolate_8pts$U.lo toom_interpolate_12pts$U.lo toom_interpolate_16pts$U.lo invertappr$U.lo invert$U.lo binvert$U.lo mulmod_bnm1$U.lo sqrmod_bnm1$U.lo div_qr_1$U.lo div_qr_1n_pi1$U.lo div_qr_2$U.lo div_qr_2n_pi1$U.lo div_qr_2u_pi1$U.lo sbpi1_div_q$U.lo sbpi1_div_qr$U.lo sbpi1_divappr_q$U.lo dcpi1_div_q$U.lo dcpi1_div_qr$U.lo dcpi1_divappr_q$U.lo mu_div_qr$U.lo mu_divappr_q$U.lo mu_div_q$U.lo bdiv_q_1$U.lo sbpi1_bdiv_q$U.lo sbpi1_bdiv_qr$U.lo sbpi1_bdiv_r$U.lo dcpi1_bdiv_q$U.lo dcpi1_bdiv_qr$U.lo mu_bdiv_q$U.lo mu_bdiv_qr$U.lo bdiv_q$U.lo bdiv_qr$U.lo broot$U.lo brootinv$U.lo bsqrt$U.lo bsqrtinv$U.lo divexact$U.lo bdiv_dbm1c$U.lo redc_1$U.lo redc_2$U.lo redc_n$U.lo powm$U.lo powlo$U.lo sec_powm$U.lo sec_mul$U.lo sec_sqr$U.lo sec_div_qr$U.lo sec_div_r$U.lo sec_pi1_div_qr$U.lo sec_pi1_div_r$U.lo sec_add_1$U.lo sec_sub_1$U.lo sec_invert$U.lo trialdiv$U.lo remove$U.lo and_n$U.lo andn_n$U.lo nand_n$U.lo ior_n$U.lo iorn_n$U.lo nior_n$U.lo xor_n$U.lo xnor_n$U.lo copyi$U.lo copyd$U.lo zero$U.lo sec_tabselect$U.lo comb_tables$U.lo add_n_sub_n$U.lo'
mpn_objs_in_libgmp=' mpn/add$U.lo mpn/add_1$U.lo mpn/add_n$U.lo mpn/sub$U.lo mpn/sub_1$U.lo mpn/sub_n$U.lo mpn/cnd_add_n$U.lo mpn/cnd_sub_n$U.lo mpn/cnd_swap$U.lo mpn/neg$U.lo mpn/com$U.lo mpn/mul_1$U.lo mpn/addmul_1$U.lo mpn/submul_1$U.lo mpn/add_err1_n$U.lo mpn/add_err2_n$U.lo mpn/add_err3_n$U.lo mpn/sub_err1_n$U.lo mpn/sub_err2_n$U.lo mpn/sub_err3_n$U.lo mpn/lshift$U.lo mpn/rshift$U.lo mpn/dive_1$U.lo mpn/diveby3$U.lo mpn/divis$U.lo mpn/divrem$U.lo mpn/divrem_1$U.lo mpn/divrem_2$U.lo mpn/fib2_ui$U.lo mpn/fib2m$U.lo mpn/mod_1$U.lo mpn/mod_34lsub1$U.lo mpn/mode1o$U.lo mpn/pre_divrem_1$U.lo mpn/pre_mod_1$U.lo mpn/dump$U.lo mpn/mod_1_1$U.lo mpn/mod_1_2$U.lo mpn/mod_1_3$U.lo mpn/mod_1_4$U.lo mpn/lshiftc$U.lo mpn/mul$U.lo mpn/mul_fft$U.lo mpn/mul_n$U.lo mpn/sqr$U.lo mpn/mul_basecase$U.lo mpn/sqr_basecase$U.lo mpn/nussbaumer_mul$U.lo mpn/mulmid_basecase$U.lo mpn/toom42_mulmid$U.lo mpn/mulmid_n$U.lo mpn/mulmid$U.lo mpn/random$U.lo mpn/random2$U.lo mpn/pow_1$U.lo mpn/rootrem$U.lo mpn/sqrtrem$U.lo mpn/sizeinbase$U.lo mpn/get_str$U.lo mpn/set_str$U.lo mpn/compute_powtab$U.lo mpn/scan0$U.lo mpn/scan1$U.lo mpn/popcount$U.lo mpn/hamdist$U.lo mpn/cmp$U.lo mpn/zero_p$U.lo mpn/perfsqr$U.lo mpn/perfpow$U.lo mpn/strongfibo$U.lo mpn/gcd_11$U.lo mpn/gcd_22$U.lo mpn/gcd_1$U.lo mpn/gcd$U.lo mpn/gcdext_1$U.lo mpn/gcdext$U.lo mpn/gcd_subdiv_step$U.lo mpn/gcdext_lehmer$U.lo mpn/div_q$U.lo mpn/tdiv_qr$U.lo mpn/jacbase$U.lo mpn/jacobi_2$U.lo mpn/jacobi$U.lo mpn/get_d$U.lo mpn/matrix22_mul$U.lo mpn/matrix22_mul1_inverse_vector$U.lo mpn/hgcd_matrix$U.lo mpn/hgcd2$U.lo mpn/hgcd_step$U.lo mpn/hgcd_reduce$U.lo mpn/hgcd$U.lo mpn/hgcd_appr$U.lo mpn/hgcd2_jacobi$U.lo mpn/hgcd_jacobi$U.lo mpn/mullo_n$U.lo mpn/mullo_basecase$U.lo mpn/sqrlo$U.lo mpn/sqrlo_basecase$U.lo mpn/toom22_mul$U.lo mpn/toom32_mul$U.lo mpn/toom42_mul$U.lo mpn/toom52_mul$U.lo mpn/toom62_mul$U.lo mpn/toom33_mul$U.lo mpn/toom43_mul$U.lo mpn/toom53_mul$U.lo mpn/toom54_mul$U.lo mpn/toom63_mul$U.lo mpn/toom44_mul$U.lo mpn/toom6h_mul$U.lo mpn/toom6_sqr$U.lo mpn/toom8h_mul$U.lo mpn/toom8_sqr$U.lo mpn/toom_couple_handling$U.lo mpn/toom2_sqr$U.lo mpn/toom3_sqr$U.lo mpn/toom4_sqr$U.lo mpn/toom_eval_dgr3_pm1$U.lo mpn/toom_eval_dgr3_pm2$U.lo mpn/toom_eval_pm1$U.lo mpn/toom_eval_pm2$U.lo mpn/toom_eval_pm2exp$U.lo mpn/toom_eval_pm2rexp$U.lo mpn/toom_interpolate_5pts$U.lo mpn/toom_interpolate_6pts$U.lo mpn/toom_interpolate_7pts$U.lo mpn/toom_interpolate_8pts$U.lo mpn/toom_interpolate_12pts$U.lo mpn/toom_interpolate_16pts$U.lo mpn/invertappr$U.lo mpn/invert$U.lo mpn/binvert$U.lo mpn/mulmod_bnm1$U.lo mpn/sqrmod_bnm1$U.lo mpn/div_qr_1$U.lo mpn/div_qr_1n_pi1$U.lo mpn/div_qr_2$U.lo mpn/div_qr_2n_pi1$U.lo mpn/div_qr_2u_pi1$U.lo mpn/sbpi1_div_q$U.lo mpn/sbpi1_div_qr$U.lo mpn/sbpi1_divappr_q$U.lo mpn/dcpi1_div_q$U.lo mpn/dcpi1_div_qr$U.lo mpn/dcpi1_divappr_q$U.lo mpn/mu_div_qr$U.lo mpn/mu_divappr_q$U.lo mpn/mu_div_q$U.lo mpn/bdiv_q_1$U.lo mpn/sbpi1_bdiv_q$U.lo mpn/sbpi1_bdiv_qr$U.lo mpn/sbpi1_bdiv_r$U.lo mpn/dcpi1_bdiv_q$U.lo mpn/dcpi1_bdiv_qr$U.lo mpn/mu_bdiv_q$U.lo mpn/mu_bdiv_qr$U.lo mpn/bdiv_q$U.lo mpn/bdiv_qr$U.lo mpn/broot$U.lo mpn/brootinv$U.lo mpn/bsqrt$U.lo mpn/bsqrtinv$U.lo mpn/divexact$U.lo mpn/bdiv_dbm1c$U.lo mpn/redc_1$U.lo mpn/redc_2$U.lo mpn/redc_n$U.lo mpn/powm$U.lo mpn/powlo$U.lo mpn/sec_powm$U.lo mpn/sec_mul$U.lo mpn/sec_sqr$U.lo mpn/sec_div_qr$U.lo mpn/sec_div_r$U.lo mpn/sec_pi1_div_qr$U.lo mpn/sec_pi1_div_r$U.lo mpn/sec_add_1$U.lo mpn/sec_sub_1$U.lo mpn/sec_invert$U.lo mpn/trialdiv$U.lo mpn/remove$U.lo mpn/and_n$U.lo mpn/andn_n$U.lo mpn/nand_n$U.lo mpn/ior_n$U.lo mpn/iorn_n$U.lo mpn/nior_n$U.lo mpn/xor_n$U.lo mpn/xnor_n$U.lo mpn/copyi$U.lo mpn/copyd$U.lo mpn/zero$U.lo mpn/sec_tabselect$U.lo mpn/comb_tables$U.lo mpn/add_n_sub_n$U.lo'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/home/wmealing/Projects/build-test/cob-webber/dist'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "GNU MP"
#define PACKAGE_TARNAME "gmp"
#define PACKAGE_VERSION "6.2.1"
#define PACKAGE_STRING "GNU MP 6.2.1"
#define PACKAGE_BUGREPORT "gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
#define PACKAGE_URL "http://www.gnu.org/software/gmp/"
#define PACKAGE "gmp"
#define VERSION "6.2.1"
#define WANT_FFT 1
#define HAVE_HOST_CPU_none 1
#define NO_ASM 1
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DLFCN_H 1
#define LT_OBJDIR ".libs/"
#define STDC_HEADERS 1
#define TIME_WITH_SYS_TIME 1
#define HAVE_FCNTL_H 1
#define HAVE_FLOAT_H 1
#define HAVE_LANGINFO_H 1
#define HAVE_LOCALE_H 1
#define HAVE_NL_TYPES_H 1
#define HAVE_SYS_MMAN_H 1
#define HAVE_SYS_PARAM_H 1
#define HAVE_SYS_SYSINFO_H 1
#define HAVE_SYS_TIME_H 1
#define HAVE_SYS_TIMES_H 1
#define HAVE_SYS_RESOURCE_H 1
#define HAVE_SYS_SYSCTL_H 1
#define HAVE_DECL_FGETC 1
#define HAVE_DECL_FSCANF 1
#define HAVE_DECL_OPTARG 1
#define HAVE_DECL_UNGETC 1
#define HAVE_DECL_VFPRINTF 1
#define HAVE_DECL_SYS_ERRLIST 0
#define HAVE_DECL_SYS_NERR 0
#define RETSIGTYPE void
#define HAVE_INTMAX_T 1
#define HAVE_LONG_DOUBLE 1
#define HAVE_LONG_LONG 1
#define HAVE_PTRDIFF_T 1
#define HAVE_QUAD_T 1
#define HAVE_UINT_LEAST32_T 1
#define HAVE_INTPTR_T 1
#define restrict __restrict
#define HAVE_ATTRIBUTE_CONST 1
#define HAVE_ATTRIBUTE_MALLOC 1
#define HAVE_ATTRIBUTE_MODE 1
#define HAVE_ATTRIBUTE_NORETURN 1
#define HAVE_HIDDEN_ALIAS 1
#define HAVE_ALLOCA_H 1
#define HAVE_ALLOCA 1
#define WANT_TMP_ALLOCA 1
#define HAVE_LIMB_LITTLE_ENDIAN 1
#define HAVE_ALARM 1
#define HAVE_CLOCK 1
#define HAVE_GETPAGESIZE 1
#define HAVE_GETRUSAGE 1
#define HAVE_GETTIMEOFDAY 1
#define HAVE_LOCALECONV 1
#define HAVE_MEMSET 1
#define HAVE_MMAP 1
#define HAVE_MPROTECT 1
#define HAVE_NL_LANGINFO 1
#define HAVE_POPEN 1
#define HAVE_RAISE 1
#define HAVE_SIGACTION 1
#define HAVE_SIGALTSTACK 1
#define HAVE_STRCHR 1
#define HAVE_STRERROR 1
#define HAVE_STRNLEN 1
#define HAVE_STRTOL 1
#define HAVE_STRTOUL 1
#define HAVE_SYSCONF 1
#define HAVE_TIMES 1
#define HAVE_CLOCK_GETTIME 1
#define HAVE_VSNPRINTF 1
#define GMP_MPARAM_H_SUGGEST "./mpn/generic/gmp-mparam.h"
#define SIZEOF_VOID_P 4
#define SIZEOF_UNSIGNED_SHORT 2
#define SIZEOF_UNSIGNED 4
#define SIZEOF_UNSIGNED_LONG 4
#define SIZEOF_MP_LIMB_T 4
#define TUNE_SQR_TOOM2_MAX SQR_TOOM2_MAX_GENERIC
#define HAVE_STACK_T 1

configure: exit 0
